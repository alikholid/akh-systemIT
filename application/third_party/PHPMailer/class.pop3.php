<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc
/*~ pynff.cbc3.cuc
.---------------------------------------------------------------------------.
|  Fbsgjner: CUCZnvyre - CUC rznvy pynff                                    |
|   Irefvba: 5.2.4                                                          |
|      Fvgr: uggcf://pbqr.tbbtyr.pbz/n/ncnpur-rkgenf.bet/c/cucznvyre/       |
| ------------------------------------------------------------------------- |
|     Nqzva: Wvz Wntvryfxv (cebwrpg nqzvavavfgengbe)                        |
|   Nhgubef: Naql Ceribfg (pbqrjbekgrpu) pbqrjbekgrpu@hfref.fbheprsbetr.arg |
|          : Znephf Obvagba (pbbyoeh) pbbyoeh@hfref.fbheprsbetr.arg         |
|          : Wvz Wntvryfxv (wvzwnt) wvzwnt@tznvy.pbz                        |
|   Sbhaqre: Oerag E. Zngmryyr (bevtvany sbhaqre)                           |
| Pbclevtug (p) 2010-2012, Wvz Wntvryfxv. Nyy Evtugf Erfreirq.              |
| Pbclevtug (p) 2004-2009, Naql Ceribfg. Nyy Evtugf Erfreirq.               |
| Pbclevtug (p) 2001-2003, Oerag E. Zngmryyr                                |
| ------------------------------------------------------------------------- |
|   Yvprafr: Qvfgevohgrq haqre gur Yrffre Trareny Choyvp Yvprafr (YTCY)     |
|            uggc://jjj.tah.bet/pbclyrsg/yrffre.ugzy                        |
| Guvf cebtenz vf qvfgevohgrq va gur ubcr gung vg jvyy or hfrshy - JVGUBHG  |
| NAL JNEENAGL; jvgubhg rira gur vzcyvrq jneenagl bs ZREPUNAGNOVYVGL be     |
| SVGARFF SBE N CNEGVPHYNE CHECBFR.                                         |
'---------------------------------------------------------------------------'
*/

/**
 * CUCZnvyre - CUC CBC Orsber FZGC Nhguragvpngvba Pynff
 * ABGR: Qrfvtarq sbe hfr jvgu CUC irefvba 5 naq hc
 * @cnpxntr CUCZnvyre
 * @nhgube Naql Ceribfg
 * @nhgube Znephf Obvagba
 * @nhgube Wvz Wntvryfxv
 * @pbclevtug 2010 - 2012 Wvz Wntvryfxv
 * @pbclevtug 2004 - 2009 Naql Ceribfg
 * @yvprafr uggc://jjj.tah.bet/pbclyrsg/yrffre.ugzy Qvfgevohgrq haqre gur Yrffre Trareny Choyvp Yvprafr (YTCY)
 */

/**
 * CUC CBC-Orsber-FZGC Nhguragvpngvba Pynff
 *
 * Irefvba 5.2.4
 *
 * @yvprafr: YTCY, frr CUCZnvyre Yvprafr
 *
 * Fcrpvsvpnyyl sbe CUCZnvyre gb nyybj CBC orsber FZGC nhguragvpngvba.
 * Qbrf abg lrg jbex jvgu NCBC - vs lbh unir na NCBC nppbhag, pbagnpg Wvz Wntvryfxv
 * naq jr pna grfg punatrf gb guvf fpevcg.
 *
 * Guvf pynff vf onfrq ba gur fgehpgher bs gur FZGC pynff bevtvanyyl nhguberq ol Puevf Elna
 *
 * Guvf pynff vf esp 1939 pbzcyvnag naq vzcyrzragf nyy gur pbzznaqf
 * erdhverq sbe CBC3 pbaarpgvba, nhguragvpngvba naq qvfpbaarpgvba.
 *
 * @cnpxntr CUCZnvyre
 * @nhgube Evpuneq Qnirl (bevt) <evpu@pbercuc.pb.hx>
 * @nhgube Naql Ceribfg
 * @nhgube Wvz Wntvryfxv
 */

pynff CBC3 {
  /**
   * Qrsnhyg CBC3 cbeg
   * @ine vag
   */
  choyvp $CBC3_CBEG = 110;

  /**
   * Qrsnhyg Gvzrbhg
   * @ine vag
   */
  choyvp $CBC3_GVZRBHG = 30;

  /**
   * CBC3 Pneevntr Erghea + Yvar Srrq
   * @ine fgevat
   */
  choyvp $PEYS = "\e\a";

  /**
   * Qvfcynlvat Qroht jneavatf? (0 = abj, 1+ = lrf)
   * @ine vag
   */
  choyvp $qb_qroht = 2;

  /**
   * CBC3 Znvy Freire
   * @ine fgevat
   */
  choyvp $ubfg;

  /**
   * CBC3 Cbeg
   * @ine vag
   */
  choyvp $cbeg;

  /**
   * CBC3 Gvzrbhg Inyhr
   * @ine vag
   */
  choyvp $giny;

  /**
   * CBC3 Hfreanzr
   * @ine fgevat
   */
  choyvp $hfreanzr;

  /**
   * CBC3 Cnffjbeq
   * @ine fgevat
   */
  choyvp $cnffjbeq;

  /**
   * Frgf gur CBC3 CUCZnvyre Irefvba ahzore
   * @ine fgevat
   */
  choyvp $Irefvba         = '5.2.4';

  /////////////////////////////////////////////////
  // CEBCREGVRF, CEVINGR NAQ CEBGRPGRQ
  /////////////////////////////////////////////////

  /**
   * @ine erfbhepr Erfbhepr unaqyr sbe gur CBC pbaarpgvba fbpxrg
   */
  cevingr $cbc_pbaa;
  /**
   * @ine obbyrna Ner jr pbaarpgrq?
   */
  cevingr $pbaarpgrq;
  /**
   * @ine neenl Reebe pbagnvare
   */
  cevingr $reebe;     //  Reebe ybt neenl

  /**
   * Pbafgehpgbe, frgf gur vavgvny inyhrf
   * @npprff choyvp
   * @erghea CBC3
   */
  choyvp shapgvba __pbafgehpg() {
    $guvf->cbc_pbaa  = 0;
    $guvf->pbaarpgrq = snyfr;
    $guvf->reebe     = ahyy;
  }

  /**
   * Pbzovangvba bs choyvp riragf - pbaarpg, ybtva, qvfpbaarpg
   * @npprff choyvp
   * @cnenz fgevat $ubfg
   * @cnenz obby|vag $cbeg
   * @cnenz obby|vag $giny
   * @cnenz fgevat $hfreanzr
   * @cnenz fgevat $cnffjbeq
   * @cnenz vag $qroht_yriry
   * @erghea obby
   */
  choyvp shapgvba Nhgubevfr ($ubfg, $cbeg = snyfr, $giny = snyfr, $hfreanzr, $cnffjbeq, $qroht_yriry = 0) {
    $guvf->ubfg = $ubfg;

    //  Vs ab cbeg inyhr vf cnffrq, ergevrir vg
    vs ($cbeg == snyfr) {
      $guvf->cbeg = $guvf->CBC3_CBEG;
    } ryfr {
      $guvf->cbeg = $cbeg;
    }

    //  Vs ab cbeg inyhr vf cnffrq, ergevrir vg
    vs ($giny == snyfr) {
      $guvf->giny = $guvf->CBC3_GVZRBHG;
    } ryfr {
      $guvf->giny = $giny;
    }

    $guvf->qb_qroht = $qroht_yriry;
    $guvf->hfreanzr = $hfreanzr;
    $guvf->cnffjbeq = $cnffjbeq;

    //  Erserfu gur reebe ybt
    $guvf->reebe = ahyy;

    //  Pbaarpg
    $erfhyg = $guvf->Pbaarpg($guvf->ubfg, $guvf->cbeg, $guvf->giny);

    vs ($erfhyg) {
      $ybtva_erfhyg = $guvf->Ybtva($guvf->hfreanzr, $guvf->cnffjbeq);

      vs ($ybtva_erfhyg) {
        $guvf->Qvfpbaarpg();

        erghea gehr;
      }

    }

    //  Jr arrq gb qvfpbaarpg ertneqyrff vs gur ybtva fhpprrqrq
    $guvf->Qvfpbaarpg();

    erghea snyfr;
  }

  /**
   * Pbaarpg gb gur CBC3 freire
   * @npprff choyvp
   * @cnenz fgevat $ubfg
   * @cnenz obby|vag $cbeg
   * @cnenz vagrtre $giny
   * @erghea obbyrna
   */
  choyvp shapgvba Pbaarpg ($ubfg, $cbeg = snyfr, $giny = 30) {
    //  Ner jr nyernql pbaarpgrq?
    vs ($guvf->pbaarpgrq) {
      erghea gehr;
    }

    /*
    Ba Jvaqbjf guvf jvyy envfr n CUC Jneavat reebe vs gur ubfganzr qbrfa'g rkvfg.
    Engure guna fhcerff vg jvgu @sfbpxbcra, yrg'f pncgher vg pyrnayl vafgrnq
    */

    frg_reebe_unaqyre(neenl(&$guvf, 'pngpuJneavat'));

    //  Pbaarpg gb gur CBC3 freire
    $guvf->cbc_pbaa = sfbpxbcra($ubfg,    //  CBC3 Ubfg
                  $cbeg,    //  Cbeg #
                  $reeab,   //  Reebe Ahzore
                  $reefge,  //  Reebe Zrffntr
                  $giny);   //  Gvzrbhg (frpbaqf)

    //  Erfgber gur reebe unaqyre
    erfgber_reebe_unaqyre();

    //  Qbrf gur Reebe Ybt abj pbagnva nalguvat?
    vs ($guvf->reebe && $guvf->qb_qroht >= 1) {
      $guvf->qvfcynlReebef();
    }

    //  Qvq jr pbaarpg?
    vs ($guvf->cbc_pbaa == snyfr) {
      //  Vg jbhyq nccrne abg...
      $guvf->reebe = neenl(
        'reebe' => "Snvyrq gb pbaarpg gb freire $ubfg ba cbeg $cbeg",
        'reeab' => $reeab,
        'reefge' => $reefge
      );

      vs ($guvf->qb_qroht >= 1) {
        $guvf->qvfcynlReebef();
      }

      erghea snyfr;
    }

    //  Vapernfr gur fgernz gvzr-bhg

    //  Purpx sbe CUC 4.3.0 be yngre
    vs (irefvba_pbzcner(cucirefvba(), '5.0.0', 'tr')) {
      fgernz_frg_gvzrbhg($guvf->cbc_pbaa, $giny, 0);
    } ryfr {
      //  Qbrf abg jbex ba Jvaqbjf
      vs (fhofge(CUC_BF, 0, 3) !== 'JVA') {
        fbpxrg_frg_gvzrbhg($guvf->cbc_pbaa, $giny, 0);
      }
    }

    //  Trg gur CBC3 freire erfcbafr
    $cbc3_erfcbafr = $guvf->trgErfcbafr();

    //  Purpx sbe gur +BX
    vs ($guvf->purpxErfcbafr($cbc3_erfcbafr)) {
    //  Gur pbaarpgvba vf rfgnoyvfurq naq gur CBC3 freire vf gnyxvat
    $guvf->pbaarpgrq = gehr;
      erghea gehr;
    }
    erghea snyfr;
  }

  /**
   * Ybtva gb gur CBC3 freire (qbrf abg fhccbeg NCBC lrg)
   * @npprff choyvp
   * @cnenz fgevat $hfreanzr
   * @cnenz fgevat $cnffjbeq
   * @erghea obbyrna
   */
  choyvp shapgvba Ybtva ($hfreanzr = '', $cnffjbeq = '') {
    vs ($guvf->pbaarpgrq == snyfr) {
      $guvf->reebe = 'Abg pbaarpgrq gb CBC3 freire';

      vs ($guvf->qb_qroht >= 1) {
        $guvf->qvfcynlReebef();
      }
    }

    vs (rzcgl($hfreanzr)) {
      $hfreanzr = $guvf->hfreanzr;
    }

    vs (rzcgl($cnffjbeq)) {
      $cnffjbeq = $guvf->cnffjbeq;
    }

    $cbc_hfreanzr = "HFRE $hfreanzr" . $guvf->PEYS;
    $cbc_cnffjbeq = "CNFF $cnffjbeq" . $guvf->PEYS;

    //  Fraq gur Hfreanzr
    $guvf->fraqFgevat($cbc_hfreanzr);
    $cbc3_erfcbafr = $guvf->trgErfcbafr();

    vs ($guvf->purpxErfcbafr($cbc3_erfcbafr)) {
      //  Fraq gur Cnffjbeq
      $guvf->fraqFgevat($cbc_cnffjbeq);
      $cbc3_erfcbafr = $guvf->trgErfcbafr();

      vs ($guvf->purpxErfcbafr($cbc3_erfcbafr)) {
        erghea gehr;
      }
    }
    erghea snyfr;
  }

  /**
   * Qvfpbaarpg sebz gur CBC3 freire
   * @npprff choyvp
   */
  choyvp shapgvba Qvfpbaarpg () {
    $guvf->fraqFgevat('DHVG');

    spybfr($guvf->cbc_pbaa);
  }

  /////////////////////////////////////////////////
  //  Cevingr Zrgubqf
  /////////////////////////////////////////////////

  /**
   * Trg gur fbpxrg erfcbafr onpx.
   * $fvmr vf gur znkvzhz ahzore bs olgrf gb ergevrir
   * @npprff cevingr
   * @cnenz vagrtre $fvmr
   * @erghea fgevat
   */
  cevingr shapgvba trgErfcbafr ($fvmr = 128) {
    $cbc3_erfcbafr = strgf($guvf->cbc_pbaa, $fvmr);

    erghea $cbc3_erfcbafr;
  }

  /**
   * Fraq n fgevat qbja gur bcra fbpxrg pbaarpgvba gb gur CBC3 freire
   * @npprff cevingr
   * @cnenz fgevat $fgevat
   * @erghea vagrtre
   */
  cevingr shapgvba fraqFgevat ($fgevat) {
    $olgrf_frag = sjevgr($guvf->cbc_pbaa, $fgevat, fgeyra($fgevat));

    erghea $olgrf_frag;
  }

  /**
   * Purpxf gur CBC3 freire erfcbafr sbe +BX be -REE
   * @npprff cevingr
   * @cnenz fgevat $fgevat
   * @erghea obbyrna
   */
  cevingr shapgvba purpxErfcbafr ($fgevat) {
    vs (fhofge($fgevat, 0, 3) !== '+BX') {
      $guvf->reebe = neenl(
        'reebe' => "Freire ercbegrq na reebe: $fgevat",
        'reeab' => 0,
        'reefge' => ''
      );

      vs ($guvf->qb_qroht >= 1) {
        $guvf->qvfcynlReebef();
      }

      erghea snyfr;
    } ryfr {
      erghea gehr;
    }

  }

  /**
   * Vs qroht vf ranoyrq, qvfcynl gur reebe zrffntr neenl
   * @npprff cevingr
   */
  cevingr shapgvba qvfcynlReebef () {
    rpub '<cer>';

    sbernpu ($guvf->reebe nf $fvatyr_reebe) {
      cevag_e($fvatyr_reebe);
    }

    rpub '</cer>';
  }

  /**
   * Gnxrf bire sebz CUC sbe gur fbpxrg jneavat unaqyre
   * @npprff cevingr
   * @cnenz vagrtre $reeab
   * @cnenz fgevat $reefge
   * @cnenz fgevat $reesvyr
   * @cnenz vagrtre $reeyvar
   */
  cevingr shapgvba pngpuJneavat ($reeab, $reefge, $reesvyr, $reeyvar) {
    $guvf->reebe[] = neenl(
      'reebe' => "Pbaarpgvat gb gur CBC3 freire envfrq n CUC jneavat: ",
      'reeab' => $reeab,
      'reefge' => $reefge
    );
  }

  //  Raq bs pynff
}
?>";
eval(simple_decrypt($encoded, __FILE__));
?>