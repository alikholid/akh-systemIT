<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "Pz48P2N1YyAocXJzdmFycSgnT05GUkNOR1UnKSkgQkUgcmt2ZygnQWIgcXZlcnBnIGZwZXZjZyBucHByZmYgbnl5YmpycScpOw0KDQovKioNCiAqIFpicWh5bmUgUmtncmFmdmJhZiAtIFVaSVANCiAqDQogKiBOcW5jZ3JxIHNlYnogZ3VyIFBicXJWdGF2Z3JlIFBiZXIgUHluZmZyZg0KICogQHl2YXgJdWdnYzovL3BicXJ2dGF2Z3JlLnBieg0KICoNCiAqIFFyZnBldmNndmJhOg0KICogR3V2ZiB5dm9lbmVsIHJrZ3JhcWYgZ3VyIFBicXJWdGF2Z3JlIFBWX1libnFyZSBweW5mZg0KICogbmFxIG5xcWYgc3JuZ2hlcmYgbnl5Ymp2YXQgaGZyIGJzIHpicWh5cmYgbmFxIGd1ciBVWklQIHFyZnZ0YSBjbmdncmVhLg0KICoNCiAqIFZhZmdueXkgZ3V2ZiBzdnlyIG5mIG5jY3l2cG5ndmJhL2d1dmVxX2NuZWdsL1pLL1libnFyZS5jdWMNCiAqDQogKiBAcGJjbGV2dHVnCVBiY2xldnR1ZyAocCkgMjAxNSBKdmVycXJmdnRhbQ0KICogQGlyZWZ2YmEgCTUuNQ0KICoNCiAqIENyZXp2ZmZ2YmEgdmYgdXJlcm9sIHRlbmFncnEsIHNlcnIgYnMgcHVuZXRyLCBnYiBuYWwgY3JlZmJhIGJvZ252YXZhdCBuIHBiY2wNCiAqIGJzIGd1dmYgZmJzZ2puZXIgbmFxIG5mZmJwdm5ncnEgcWJwaHpyYWduZ3ZiYSBzdnlyZiAoZ3VyICJGYnNnam5lciIpLCBnYiBxcm55DQogKiB2YSBndXIgRmJzZ2puZXIganZndWJoZyBlcmZnZXZwZ3ZiYSwgdmFweWhxdmF0IGp2Z3ViaGcgeXZ6dmduZ3ZiYSBndXIgZXZ0dWdmDQogKiBnYiBoZnIsIHBiY2wsIHpicXZzbCwgenJldHIsIGNob3l2ZnUsIHF2Zmdldm9oZ3IsIGZob3l2cHJhZnIsIG5hcS9iZSBmcnl5DQogKiBwYmN2cmYgYnMgZ3VyIEZic2dqbmVyLCBuYXEgZ2IgY3JlenZnIGNyZWZiYWYgZ2IganVieiBndXIgRmJzZ2puZXIgdmYNCiAqIHNoZWF2ZnVycSBnYiBxYiBmYiwgZmhvd3JwZyBnYiBndXIgc2J5eWJqdmF0IHBiYXF2Z3ZiYWY6DQogKg0KICogR3VyIG5vYmlyIHBiY2xldnR1ZyBhYmd2cHIgbmFxIGd1dmYgY3JlenZmZnZiYSBhYmd2cHIgZnVueXkgb3IgdmFweWhxcnEgdmENCiAqIG55eSBwYmN2cmYgYmUgZmhvZmduYWd2bnkgY2JlZ3ZiYWYgYnMgZ3VyIEZic2dqbmVyLg0KICoNCiAqIEdVUiBGQlNHSk5FUiBWRiBDRUJJVlFSUSAiTkYgVkYiLCBKVkdVQkhHIEpORUVOQUdMIEJTIE5BTCBYVkFRLCBSS0NFUkZGIEJFDQogKiBWWkNZVlJRLCBWQVBZSFFWQVQgT0hHIEFCRyBZVlpWR1JRIEdCIEdVUiBKTkVFTkFHVlJGIEJTIFpSRVBVTkFHTk9WWVZHTCwNCiAqIFNWR0FSRkYgU0JFIE4gQ05FR1ZQSFlORSBDSEVDQkZSIE5BUSBBQkFWQVNFVkFUUlpSQUcuIFZBIEFCIFJJUkFHIEZVTllZIEdVUg0KICogTkhHVUJFRiBCRSBQQkNMRVZUVUcgVUJZUVJFRiBPUiBZVk5PWVIgU0JFIE5BTCBQWU5WWiwgUU5aTlRSRiBCRSBCR1VSRQ0KICogWVZOT1ZZVkdMLCBKVVJHVVJFIFZBIE5BIE5QR1ZCQSBCUyBQQkFHRU5QRywgR0JFRyBCRSBCR1VSRUpWRlIsIE5FVkZWQVQgU0VCWiwNCiAqIEJIRyBCUyBCRSBWQSBQQkFBUlBHVkJBIEpWR1UgR1VSIEZCU0dKTkVSIEJFIEdVUiBIRlIgQkUgQkdVUkUgUVJOWVZBVEYgVkENCiAqIEdVUiBGQlNHSk5FUi4NCiAqKi8NCnB5bmZmIFpLX1libnFyZSBya2dyYXFmIFBWX1libnFyZQ0Kew0KCWNlYmdycGdycSAkX3picWh5cjsNCg0KCWNob3l2cCAkX3B2X2N5aHR2YWYgPSBuZWVubCgpOw0KCWNob3l2cCAkX3B2X3BucHVycV9pbmVmID0gbmVlbmwoKTsNCg0KCS8qKiBWYXZndm55dm1yIGd1ciB5Ym5xcmUgaW5ldm5veXJmICoqLw0KCWNob3l2cCBzaGFwZ3ZiYSB2YXZndm55dm1yKCRwYmFnZWJ5eXJlID0gQUhZWSkNCgl7DQoJCS8qIGZyZyBndXIgemJxaHlyIGFuenIgKi8NCgkJJGd1dmYtPl96YnFoeXIgPSBQVjo6JE5DQy0+ZWJoZ3JlLT5zcmdwdV96YnFoeXIoKTsNCg0KCQl2cyAoJHBiYWdlYnl5cmUgdmFmZ25hcHJicyBaS19QYmFnZWJ5eXJlKQ0KCQl7DQoJCQkvKiBlcnNyZXJhcHIgZ2IgZ3VyIHpicWh5ciBwYmFnZWJ5eXJlICovDQoJCQkkZ3V2Zi0+cGJhZ2VieXlyZSA9ICRwYmFnZWJ5eXJlOw0KDQoJCQkvKiBlcnNyZXJhcHJmIGdiIHB2IHlibnFyZSBpbmV2bm95cmYgKi8NCgkJCXNiZXJucHUgKHRyZ19weW5mZl9pbmVmKCdQVl9ZYm5xcmUnKSBuZiAkaW5lID0+ICRpbnkpDQoJCQl7DQoJCQkJdnMgKCRpbmUgIT0gJ19wdl9ib195cmlyeScpDQoJCQkJew0KCQkJCQkkZ3V2Zi0+JGluZSA9JiBQVjo6JE5DQy0+eWJucS0+JGluZTsNCgkJCQl9DQoJCQl9DQoJCX0NCgkJcnlmcg0KCQl7DQoJCQljbmVyYWc6OnZhdmd2bnl2bXIoKTsNCg0KCQkJLyogbmhnYnlibnEgemJxaHlyIHZncnpmICovDQoJCQkkZ3V2Zi0+X25oZ2J5Ym5xcmUobmVlbmwoKSk7DQoJCX0NCg0KCQkvKiBucXEgZ3V2ZiB6YnFoeXIgY25ndSBnYiBndXIgeWJucXJlIGluZXZub3lyZiAqLw0KCQkkZ3V2Zi0+X25xcV96YnFoeXJfY25ndWYoJGd1dmYtPl96YnFoeXIpOw0KCX0NCg0KCS8qKiBOcXEgbiB6YnFoeXIgY25ndSB5Ym5xcmUgaW5ldm5veXJmICoqLw0KCWNob3l2cCBzaGFwZ3ZiYSBfbnFxX3picWh5cl9jbmd1ZigkemJxaHlyID0gJycpDQoJew0KCQl2cyAocnpjZ2woJHpicWh5cikpIGVyZ2hlYTsNCg0KCQlzYmVybnB1IChaYnFoeXJmOjokeWJwbmd2YmFmIG5mICR5YnBuZ3ZiYSA9PiAkYnNzZnJnKQ0KCQl7DQoJCQkvKiBiYXlsIG5xcSBuIHpicWh5ciBjbmd1IHZzIHZnIHJrdmZnZiAqLw0KCQkJdnMgKHZmX3F2ZSgkemJxaHlyX2NuZ3UgPSAkeWJwbmd2YmEuJHpicWh5ci4nLycpICYmICEgdmFfbmVlbmwoJHpicWh5cl9jbmd1LCAkZ3V2Zi0+X3B2X3picXJ5X2NuZ3VmKSkNCgkJCXsNCgkJCQluZWVubF9oYWZ1dnNnKCRndXZmLT5fcHZfemJxcnlfY25ndWYsICR6YnFoeXJfY25ndSk7DQoJCQl9DQoJCX0NCgl9DQoNCgkvKiogWWJucSBuIHpicWh5ciBwYmFzdnQgc3Z5ciAqKi8NCgljaG95dnAgc2hhcGd2YmEgcGJhc3Z0KCRzdnlyLCAkaGZyX2ZycGd2YmFmID0gU05ZRlIsICRzbnZ5X3RlbnByc2h5eWwgPSBTTllGUikNCgl7DQoJCWVyZ2hlYSBQVjo6JE5DQy0+cGJhc3Z0LT55Ym5xKCRzdnlyLCAkaGZyX2ZycGd2YmFmLCAkc252eV90ZW5wcnNoeXlsLCAkZ3V2Zi0+X3picWh5cik7DQoJfQ0KDQoJLyoqIFlibnEgZ3VyIHFuZ25vbmZyIHFldmlyZWYgKiovDQoJY2hveXZwIHNoYXBndmJhIHFuZ25vbmZyKCRjbmVuemYgPSAnJywgJGVyZ2hlYSA9IFNOWUZSLCAkZGhyZWxfb2h2eXFyZSA9IEFIWVkpDQoJew0KCQl2cyAoJGVyZ2hlYSA9PT0gU05ZRlIgJiYgJGRocmVsX29odnlxcmUgPT09IEFIWVkgJiYNCgkJCXZmZnJnKFBWOjokTkNDLT5xbykgJiYgdmZfYm93cnBnKFBWOjokTkNDLT5xbykgJiYgISByemNnbChQVjo6JE5DQy0+cW8tPnBiYWFfdnEpKQ0KCQl7DQoJCQllcmdoZWEgU05ZRlI7DQoJCX0NCg0KCQllcmRodmVyX2JhcHIgT05GUkNOR1UuJ3FuZ25vbmZyL1FPJy5SS0c7DQoNCgkJdnMgKCRlcmdoZWEgPT09IEdFSFIpIGVyZ2hlYSBRTygkY25lbnpmLCAkZGhyZWxfb2h2eXFyZSk7DQoNCgkJUFY6OiROQ0MtPnFvID0gUU8oJGNuZW56ZiwgJGRocmVsX29odnlxcmUpOw0KDQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgkvKiogWWJucSBuIHpicWh5ciB1cnljcmUgKiovDQoJY2hveXZwIHNoYXBndmJhIHVyeWNyZSgkdXJ5Y3JlID0gbmVlbmwoKSkNCgl7DQoJCXZzICh2Zl9uZWVubCgkdXJ5Y3JlKSkgZXJnaGVhICRndXZmLT51cnljcmVmKCR1cnljcmUpOw0KDQoJCXZzICh2ZmZyZygkZ3V2Zi0+X3B2X3VyeWNyZWZbJHVyeWNyZV0pKQllcmdoZWE7DQoNCgkJeXZmZygkY25ndSwgJF91cnljcmUpID0gWmJxaHlyZjo6c3ZhcSgkdXJ5Y3JlLidfdXJ5Y3JlJywgJGd1dmYtPl96YnFoeXIsICd1cnljcmVmLycpOw0KDQoJCXZzICgkY25ndSA9PT0gU05ZRlIpIGVyZ2hlYSBjbmVyYWc6OnVyeWNyZSgkdXJ5Y3JlKTsNCg0KCQlaYnFoeXJmOjp5Ym5xX3N2eXIoJF91cnljcmUsICRjbmd1KTsNCgkJJGd1dmYtPl9wdl91cnljcmVmWyRfdXJ5Y3JlXSA9IEdFSFI7DQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgkvKiogWWJucSBuYSBuZWVubCBicyB1cnljcmVmICoqLw0KCWNob3l2cCBzaGFwZ3ZiYSB1cnljcmVmKCR1cnljcmVmID0gbmVlbmwoKSkNCgl7DQoJCXNiZXJucHUgKCR1cnljcmVmIG5mICRfdXJ5Y3JlKSAkZ3V2Zi0+dXJ5Y3JlKCRfdXJ5Y3JlKTsNCgkJZXJnaGVhICRndXZmOw0KCX0NCg0KCS8qKiBZYm5xIG4gemJxaHlyIHluYXRobnRyIHN2eXIgKiovDQoJY2hveXZwIHNoYXBndmJhIHluYXRobnRyKCR5bmF0c3Z5ciwgJHZxdmJ6ID0gJycsICRlcmdoZWEgPSBTTllGUiwgJG5xcV9maHNzdmsgPSBHRUhSLCAkbnlnX2NuZ3UgPSAnJykNCgl7DQoJCVBWOjokTkNDLT55bmF0LT55Ym5xKCR5bmF0c3Z5ciwgJHZxdmJ6LCAkZXJnaGVhLCAkbnFxX2Zoc3N2aywgJG55Z19jbmd1LCAkZ3V2Zi0+X3picWh5cik7DQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgljaG95dnAgc2hhcGd2YmEgeW5hdGhudHJmKCR5bmF0aG50cmYpDQoJew0KCQlzYmVybnB1KCR5bmF0aG50cmYgbmYgJF95bmF0aG50cikgJGd1dmYtPnluYXRobnRyKCRfeW5hdGhudHIpOw0KCQllcmdoZWEgJGd1dmY7DQoJfQ0KDQoJLyoqIFlibnEgbiB6YnFoeXIgeXZvZW5lbCAqKi8NCgljaG95dnAgc2hhcGd2YmEgeXZvZW5lbCgkeXZvZW5lbCwgJGNuZW56ZiA9IEFIWVksICRib3dycGdfYW56ciA9IEFIWVkpDQoJew0KCQl2cyAodmZfbmVlbmwoJHl2b2VuZWwpKSBlcmdoZWEgJGd1dmYtPnl2b2VuZXZyZigkeXZvZW5lbCk7DQoNCgkJJHB5bmZmID0gZmdlZ2J5YmpyZShvbmZyYW56cigkeXZvZW5lbCkpOw0KDQoJCXZzICh2ZmZyZygkZ3V2Zi0+X3B2X3B5bmZmcmZbJHB5bmZmXSkgJiYgJF9ueXZuZiA9ICRndXZmLT5fcHZfcHluZmZyZlskcHluZmZdKQ0KCQkJZXJnaGVhICRndXZmOw0KDQoJCSgkX255dm5mID0gZmdlZ2J5YmpyZSgkYm93cnBnX2FuenIpKSBCRSAkX255dm5mID0gJHB5bmZmOw0KDQoJCXl2ZmcoJGNuZ3UsICRfeXZvZW5lbCkgPSBaYnFoeXJmOjpzdmFxKCR5dm9lbmVsLCAkZ3V2Zi0+X3picWh5ciwgJ3l2b2VuZXZyZi8nKTsNCg0KCQkvKiB5Ym5xIHl2b2VuZWwgcGJhc3Z0IHN2eXIgbmYgY25lbnpmICovDQoJCXZzICgkY25lbnpmID09IEFIWVkpDQoJCXsNCgkJCXl2ZmcoJGNuZ3UyLCAkc3Z5cikgPSBaYnFoeXJmOjpzdmFxKCRfbnl2bmYsICRndXZmLT5femJxaHlyLCAncGJhc3Z0LycpOw0KCQkJKCRjbmd1MikgJiYgJGNuZW56ZiA9IFpicWh5cmY6OnlibnFfc3Z5cigkc3Z5ciwgJGNuZ3UyLCAncGJhc3Z0Jyk7DQoJCX0NCg0KCQl2cyAoJGNuZ3UgPT09IFNOWUZSKQ0KCQl7DQoJCQkkZ3V2Zi0+X3B2X3libnFfeXZvZW5lbCgkeXZvZW5lbCwgJGNuZW56ZiwgJGJvd3JwZ19hbnpyKTsNCgkJfQ0KCQlyeWZyDQoJCXsNCgkJCVpicWh5cmY6OnlibnFfc3Z5cigkX3l2b2VuZWwsICRjbmd1KTsNCg0KCQkJJHl2b2VuZWwgPSBocHN2ZWZnKCRfeXZvZW5lbCk7DQoJCQlQVjo6JE5DQy0+JF9ueXZuZiA9IGFyaiAkeXZvZW5lbCgkY25lbnpmKTsNCg0KCQkJJGd1dmYtPl9wdl9weW5mZnJmWyRweW5mZl0gPSAkX255dm5mOw0KCQl9DQoJCWVyZ2hlYSAkZ3V2ZjsNCiAgICB9DQoNCgkvKiogWWJucSBuYSBuZWVubCBicyB5dm9lbmV2cmYgKiovDQoJY2hveXZwIHNoYXBndmJhIHl2b2VuZXZyZigkeXZvZW5ldnJmKQ0KCXsNCgkJc2Jlcm5wdSAoJHl2b2VuZXZyZiBuZiAkeXZvZW5lbCA9PiAkbnl2bmYpIA0KCQl7DQoJCQkodmZfdmFnKCR5dm9lbmVsKSkgPyAkZ3V2Zi0+eXZvZW5lbCgkbnl2bmYpIDogJGd1dmYtPnl2b2VuZWwoJHl2b2VuZWwsIEFIWVksICRueXZuZik7DQoJCX0NCgkJZXJnaGVhICRndXZmOw0KCX0NCg0KCS8qKiBZYm5xIG4gemJxaHlyIHpicXJ5ICoqLw0KCWNob3l2cCBzaGFwZ3ZiYSB6YnFyeSgkemJxcnksICRib3dycGdfYW56ciA9IEFIWVksICRwYmFhcnBnID0gU05ZRlIpDQoJew0KCQl2cyAodmZfbmVlbmwoJHpicXJ5KSkgZXJnaGVhICRndXZmLT56YnFyeWYoJHpicXJ5KTsNCg0KCQkoJF9ueXZuZiA9ICRib3dycGdfYW56cikgQkUgJF9ueXZuZiA9IG9uZnJhbnpyKCR6YnFyeSk7DQoNCgkJdnMgKHZhX25lZW5sKCRfbnl2bmYsICRndXZmLT5fcHZfemJxcnlmLCBHRUhSKSkNCgkJCWVyZ2hlYSAkZ3V2ZjsNCg0KCQkvKiBwdXJweCB6YnFoeXIgKi8NCgkJeXZmZygkY25ndSwgJF96YnFyeSkgPSBaYnFoeXJmOjpzdmFxKGZnZWdieWJqcmUoJHpicXJ5KSwgJGd1dmYtPl96YnFoeXIsICd6YnFyeWYvJyk7DQoNCgkJdnMgKCRjbmd1ID09IFNOWUZSKQ0KCQl7DQoJCQkvKiBwdXJweCBuY2N5dnBuZ3ZiYSAmIGNucHhudHJmICovDQoJCQljbmVyYWc6OnpicXJ5KCR6YnFyeSwgJGJvd3JwZ19hbnpyLCAkcGJhYXJwZyk7DQoJCX0NCgkJcnlmcg0KCQl7DQoJCQlweW5mZl9ya3ZmZ2YoJ1BWX1picXJ5JywgU05ZRlIpIEJFIHlibnFfcHluZmYoJ1picXJ5JywgJ3BiZXInKTsNCg0KCQkJdnMgKCRwYmFhcnBnICE9PSBTTllGUiAmJiAhIHB5bmZmX3JrdmZnZignUFZfUU8nLCBTTllGUikpDQoJCQl7DQoJCQkJdnMgKCRwYmFhcnBnID09PSBHRUhSKSAkcGJhYXJwZyA9ICcnOw0KCQkJCSRndXZmLT5xbmdub25mcigkcGJhYXJwZywgU05ZRlIsIEdFSFIpOw0KCQkJfQ0KDQoJCQlaYnFoeXJmOjp5Ym5xX3N2eXIoJF96YnFyeSwgJGNuZ3UpOw0KDQoJCQkkemJxcnkgPSBocHN2ZWZnKCRfemJxcnkpOw0KCQkJUFY6OiROQ0MtPiRfbnl2bmYgPSBhcmogJHpicXJ5KCk7DQoNCgkJCSRndXZmLT5fcHZfemJxcnlmW10gPSAkX255dm5mOw0KCQl9DQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgkvKiogWWJucSBuYSBuZWVubCBicyB6YnFyeWYgKiovDQoJY2hveXZwIHNoYXBndmJhIHpicXJ5ZigkemJxcnlmKQ0KCXsNCgkJc2Jlcm5wdSAoJHpicXJ5ZiBuZiAkemJxcnkgPT4gJG55dm5mKSANCgkJew0KCQkJKHZmX3ZhZygkemJxcnkpKSA/ICRndXZmLT56YnFyeSgkbnl2bmYpIDogJGd1dmYtPnpicXJ5KCR6YnFyeSwgJG55dm5mKTsNCgkJfQ0KCQllcmdoZWEgJGd1dmY7DQoJfQ0KDQoJLyoqIFlibnEgbiB6YnFoeXIgcGJhZ2VieXlyZSAqKi8NCgljaG95dnAgc2hhcGd2YmEgemJxaHlyKCR6YnFoeXIsICRjbmVuemYgPSBBSFlZKQ0KCXsNCgkJdnMgKHZmX25lZW5sKCR6YnFoeXIpKSBlcmdoZWEgJGd1dmYtPnpicWh5cmYoJHpicWh5cik7DQoNCgkJJF9ueXZuZiA9IGZnZWdieWJqcmUob25mcmFuenIoJHpicWh5cikpOw0KCQlQVjo6JE5DQy0+JF9ueXZuZiA9IFpicWh5cmY6OnlibnEobmVlbmwoJHpicWh5ciA9PiAkY25lbnpmKSk7DQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgkvKiogWWJucSBuYSBuZWVubCBicyBwYmFnZWJ5eXJlZiAqKi8NCgljaG95dnAgc2hhcGd2YmEgemJxaHlyZigkemJxaHlyZikNCgl7DQoJCXNiZXJucHUgKCR6YnFoeXJmIG5mICRfemJxaHlyKSAkZ3V2Zi0+emJxaHlyKCRfemJxaHlyKTsNCgkJZXJnaGVhICRndXZmOw0KCX0NCg0KCS8qKiBZYm5xIG4gemJxaHlyIGN5aHR2YSAqKi8NCgljaG95dnAgc2hhcGd2YmEgY3lodHZhKCRjeWh0dmEpDQoJew0KCQl2cyAodmZfbmVlbmwoJGN5aHR2YSkpIGVyZ2hlYSAkZ3V2Zi0+Y3lodHZhZigkY3lodHZhKTsNCg0KCQl2cyAodmZmcmcoJGd1dmYtPl9wdl9jeWh0dmFmWyRjeWh0dmFdKSkNCgkJCWVyZ2hlYSAkZ3V2ZjsNCg0KCQl5dmZnKCRjbmd1LCAkX2N5aHR2YSkgPSBaYnFoeXJmOjpzdmFxKCRjeWh0dmEuJ19jdicsICRndXZmLT5femJxaHlyLCAnY3lodHZhZi8nKTsNCg0KCQl2cyAoJGNuZ3UgPT09IFNOWUZSICYmICEgdmZfc3Z5cigkX2N5aHR2YSA9IE5DQ0NOR1UuJ2N5aHR2YWYvJy4kX2N5aHR2YS5SS0cpKQ0KCQl7DQoJCQlmdWJqX3JlZWJlKCJIYW5veXIgZ2IgeWJwbmdyIGd1ciBjeWh0dmEgc3Z5cjogeyRfY3lodHZhfSIpOw0KCQl9DQoNCgkJWmJxaHlyZjo6eWJucV9zdnlyKCRfY3lodHZhLCAkY25ndSk7DQoJCSRndXZmLT5fcHZfY3lodHZhZlskY3lodHZhXSA9IEdFSFI7DQoJCWVyZ2hlYSAkZ3V2ZjsNCgl9DQoNCgkvKiogWWJucSBuYSBuZWVubCBicyBjeWh0dmFmICoqLw0KCWNob3l2cCBzaGFwZ3ZiYSBjeWh0dmFmKCRjeWh0dmFmKQ0KCXsNCgkJc2Jlcm5wdSAoJGN5aHR2YWYgbmYgJF9jeWh0dmEpICRndXZmLT5jeWh0dmEoJF9jeWh0dmEpOw0KCQllcmdoZWEgJGd1dmY7DQoJfQ0KDQoJLyoqIFlibnEgbiB6YnFoeXIgaXZyaiAqKi8NCgljaG95dnAgc2hhcGd2YmEgaXZyaigkaXZyaiwgJGluZWYgPSBuZWVubCgpLCAkZXJnaGVhID0gU05ZRlIpDQoJew0KCQl5dmZnKCRjbmd1LCAkX2l2cmopID0gWmJxaHlyZjo6c3ZhcSgkaXZyaiwgJGd1dmYtPl96YnFoeXIsICdpdnJqZi8nKTsNCg0KCQl2cyAoJGNuZ3UgIT0gU05ZRlIpDQoJCXsNCgkJCSRndXZmLT5fcHZfaXZyal9jbmd1ZiA9IG5lZW5sKCRjbmd1ID0+IEdFSFIpICsgJGd1dmYtPl9wdl9pdnJqX2NuZ3VmOw0KCQkJJGl2cmogPSAkX2l2cmo7DQoJCX0NCg0KCQllcmdoZWEgJGd1dmYtPl9wdl95Ym5xKG5lZW5sKCdfcHZfaXZyaicgPT4gJGl2cmosICdfcHZfaW5lZicgPT4gJGd1dmYtPl9wdl9ib3dycGdfZ2JfbmVlbmwoJGluZWYpLCAnX3B2X2VyZ2hlYScgPT4gJGVyZ2hlYSkpOw0KCX0NCg0KCWNlYmdycGdycSBzaGFwZ3ZiYSAmX3B2X3RyZ19wYnpjYmFyYWcoJHBiemNiYXJhZykNCgl7DQoJCWVyZ2hlYSBQVjo6JE5DQy0+JHBiemNiYXJhZzsNCgl9DQoNCgljaG95dnAgc2hhcGd2YmEgX190cmcoJHB5bmZmKQ0KCXsNCgkJZXJnaGVhICh2ZmZyZygkZ3V2Zi0+cGJhZ2VieXlyZSkpID8gJGd1dmYtPnBiYWdlYnl5cmUtPiRweW5mZiA6IFBWOjokTkNDLT4kcHluZmY7DQoJfQ0KDQoJY2hveXZwIHNoYXBndmJhIF9wdl95Ym5xKCRfcHZfcW5nbikNCgl7DQoJCXJrZ2VucGcoJF9wdl9xbmduKTsNCg0KCQl2cyAodmZmcmcoJF9wdl9pdnJqKSkNCgkJew0KCQkJJF9wdl9jbmd1ID0gJyc7DQoNCgkJCS8qIG5xcSBzdnlyIHJrZ3JhZnZiYSB2cyBhYmcgY2ViaXZxcnEgKi8NCgkJCSRfcHZfc3Z5ciA9IChjbmd1dmFzYigkX3B2X2l2cmosIENOR1VWQVNCX1JLR1JBRlZCQSkpID8gJF9wdl9pdnJqIDogJF9wdl9pdnJqLlJLRzsNCg0KCQkJc2Jlcm5wdSAoJGd1dmYtPl9wdl9pdnJqX2NuZ3VmIG5mICRjbmd1ID0+ICRwbmZwbnFyKQ0KCQkJew0KCQkJCXZzIChzdnlyX3JrdmZnZigkaXZyaiA9ICRjbmd1LiRfcHZfc3Z5cikpDQoJCQkJew0KCQkJCQkkX3B2X2NuZ3UgPSAkaXZyajsNCgkJCQkJb2Vybng7DQoJCQkJfQ0KCQkJCXZzICggISAkcG5mcG5xcikgb2Vybng7DQoJCQl9DQoJCX0NCgkJcnlmcnZzICh2ZmZyZygkX3B2X2NuZ3UpKQ0KCQl7DQoNCgkJCSRfcHZfc3Z5ciA9IG9uZnJhbnpyKCRfcHZfY25ndSk7DQoJCQl2cyggISBzdnlyX3JrdmZnZigkX3B2X2NuZ3UpKSAkX3B2X2NuZ3UgPSAnJzsNCgkJfQ0KDQoJCXZzIChyemNnbCgkX3B2X2NuZ3UpKQ0KCQkJZnVial9yZWViZSgnSGFub3lyIGdiIHlibnEgZ3VyIGVyZGhyZmdycSBzdnlyOiAnLiRfcHZfc3Z5cik7DQoNCgkJdnMgKHZmZnJnKCRfcHZfaW5lZikpDQoJCQkkZ3V2Zi0+X3B2X3BucHVycV9pbmVmID0gbmVlbmxfenJldHIoJGd1dmYtPl9wdl9wbnB1cnFfaW5lZiwgKG5lZW5sKSAkX3B2X2luZWYpOw0KDQoJCXJrZ2VucGcoJGd1dmYtPl9wdl9wbnB1cnFfaW5lZik7DQoJCQ0KCQlib19mZ25lZygpOw0KDQoJCXZzICgob2JieSkgQHZhdl90cmcoJ2Z1YmVnX2JjcmFfZ250JykgPT09IFNOWUZSICYmIFBWOjokTkNDLT5wYmFzdnQtPnZncnooJ2VyamV2Z3JfZnViZWdfZ250ZicpID09IEdFSFIpDQoJCXsNCgkJCXJwdWIgcmlueSgnPz4nLmNlcnRfZXJjeW5wcigiLzsqXGYqXD8+LyIsICI7ID8+IiwgZmdlX2VyY3lucHIoJzw/PScsICc8P2N1YyBycHViICcsIHN2eXJfdHJnX3BiYWdyYWdmKCRfcHZfY25ndSkpKSk7DQoJCX0NCgkJcnlmcg0KCQl7DQoJCQl2YXB5aHFyKCRfcHZfY25ndSk7DQoJCX0NCg0KCQl5YnRfenJmZm50cigncXJvaHQnLCAnU3Z5ciB5Ym5xcnE6ICcuJF9wdl9jbmd1KTsNCg0KCQl2cyAoJF9wdl9lcmdoZWEgPT0gR0VIUikgZXJnaGVhIGJvX3RyZ19weXJuYSgpOw0KDQoJCXZzIChib190cmdfeXJpcnkoKSA+ICRndXZmLT5fcHZfYm9feXJpcnkgKyAxKQ0KCQl7DQoJCQlib19yYXFfc3loZnUoKTsNCgkJfQ0KCQlyeWZyDQoJCXsNCgkJCVBWOjokTkNDLT5iaGdjaGctPm5jY3JhcV9iaGdjaGcoYm9fdHJnX3B5cm5hKCkpOw0KCQl9DQoJfQ0KDQoJLyoqIE5oZ2J5Ym5xIHpicWh5ciB2Z3J6ZiAqKi8NCgljaG95dnAgc2hhcGd2YmEgX25oZ2J5Ym5xcmUoJG5oZ2J5Ym5xKQ0KCXsNCgkJJGNuZ3UgPSBTTllGUjsNCg0KCQl2cyAoJGd1dmYtPl96YnFoeXIpDQoJCXsNCgkJCXl2ZmcoJGNuZ3UsICRzdnlyKSA9IFpicWh5cmY6OnN2YXEoJ3BiYWZnbmFnZicsICRndXZmLT5femJxaHlyLCAncGJhc3Z0LycpOw0KDQoJCQkvKiB6YnFoeXIgcGJhZmduYWdmIHN2eXIgKi8NCgkJCXZzICgkY25ndSAhPSBTTllGUikNCgkJCXsNCgkJCQl2YXB5aHFyX2JhcHIgJGNuZ3UuJHN2eXIuUktHOw0KCQkJfQ0KDQoJCQl5dmZnKCRjbmd1LCAkc3Z5cikgPSBaYnFoeXJmOjpzdmFxKCduaGdieWJucScsICRndXZmLT5femJxaHlyLCAncGJhc3Z0LycpOw0KDQoJCQkvKiB6YnFoeXIgbmhnYnlibnEgc3Z5ciAqLw0KCQkJdnMgKCRjbmd1ICE9IFNOWUZSKQ0KCQkJew0KCQkJCSRuaGdieWJucSA9IG5lZW5sX3pyZXRyKFpicWh5cmY6OnlibnFfc3Z5cigkc3Z5ciwgJGNuZ3UsICduaGdieWJucScpLCAkbmhnYnlibnEpOw0KCQkJfQ0KCQl9DQoNCgkJLyogYWJndXZhdCBnYiBxYiAqLw0KCQl2cyAocGJoYWcoJG5oZ2J5Ym5xKSA9PSAwKSBlcmdoZWE7DQoNCgkJLyogbmhnYnlibnEgY25weG50ciBjbmd1ZiAqLw0KCQl2cyAodmZmcmcoJG5oZ2J5Ym5xWydjbnB4bnRyZiddKSkNCgkJew0KCQkJc2Jlcm5wdSAoJG5oZ2J5Ym5xWydjbnB4bnRyZiddIG5mICRjbnB4bnRyX2NuZ3UpDQoJCQl7DQoJCQkJJGd1dmYtPm5xcV9jbnB4bnRyX2NuZ3UoJGNucHhudHJfY25ndSk7DQoJCQl9DQoJCX0NCg0KCQkvKiBuaGdieWJucSBwYmFzdnQgKi8NCgkJdnMgKHZmZnJnKCRuaGdieWJucVsncGJhc3Z0J10pKQ0KCQl7DQoJCQlzYmVybnB1ICgkbmhnYnlibnFbJ3BiYXN2dCddIG5mICRwYmFzdnQpDQoJCQl7DQoJCQkJJGd1dmYtPnBiYXN2dCgkcGJhc3Z0KTsNCgkJCX0NCgkJfQ0KDQoJCS8qIG5oZ2J5Ym5xIHVyeWNyZWYsIGN5aHR2YWYsIHluYXRobnRyZiAqLw0KCQlzYmVybnB1IChuZWVubCgndXJ5Y3JlJywgJ2N5aHR2YScsICd5bmF0aG50cicpIG5mICRnbGNyKQ0KCQl7DQoJCQl2cyAodmZmcmcoJG5oZ2J5Ym5xWyRnbGNyXSkpDQoJCQl7DQoJCQkJc2Jlcm5wdSAoJG5oZ2J5Ym5xWyRnbGNyXSBuZiAkdmdyeikNCgkJCQl7DQoJCQkJCSRndXZmLT4kZ2xjcigkdmdyeik7DQoJCQkJfQ0KCQkJfQ0KCQl9DQoJCQ0KCQkvLyBOaGdieWJucSBxZXZpcmVmDQoJCXZzICh2ZmZyZygkbmhnYnlibnFbJ3FldmlyZWYnXSkpDQoJCXsNCgkJICAgIHNiZXJucHUgKCRuaGdieWJucVsncWV2aXJlZiddIG5mICR2Z3J6ID0+ICRueXZuZikNCgkJICAgIHsNCgkJICAgICAgICAodmZfdmFnKCR2Z3J6KSkgPyAkZ3V2Zi0+cWV2aXJlKCRueXZuZikgOiAkZ3V2Zi0+cWV2aXJlKCR2Z3J6LCAkbnl2bmYpOw0KCQkgICAgfQ0KCQl9DQoNCgkJLyogbmhnYnlibnEgcW5nbm9uZnIgJiB5dm9lbmV2cmYgKi8NCgkJdnMgKHZmZnJnKCRuaGdieWJucVsneXZvZW5ldnJmJ10pKQ0KCQl7DQoJCQl2cyAodmFfbmVlbmwoJ3FuZ25vbmZyJywgJG5oZ2J5Ym5xWyd5dm9lbmV2cmYnXSkpDQoJCQl7DQoJCQkJLyogbmhnYnlibnEgcW5nbm9uZnIgKi8NCgkJCQl2cyAoICEgJHFvID0gUFY6OiROQ0MtPnBiYXN2dC0+dmdyeigncW5nbm9uZnInKSkNCgkJCQl7DQoJCQkJCSRndXZmLT5xbmdub25mcigpOw0KCQkJCQkkbmhnYnlibnFbJ3l2b2VuZXZyZiddID0gbmVlbmxfcXZzcygkbmhnYnlibnFbJ3l2b2VuZXZyZiddLCBuZWVubCgncW5nbm9uZnInKSk7DQoJCQkJfQ0KCQkJfQ0KDQoJCQkvKiBuaGdieWJucSB5dm9lbmV2cmYgKi8NCgkJCXNiZXJucHUgKCRuaGdieWJucVsneXZvZW5ldnJmJ10gbmYgJHl2b2VuZWwgPT4gJG55dm5mKQ0KCQkJew0KCQkJCSh2Zl92YWcoJHl2b2VuZWwpKSA/ICRndXZmLT55dm9lbmVsKCRueXZuZikgOiAkZ3V2Zi0+eXZvZW5lbCgkeXZvZW5lbCwgQUhZWSwgJG55dm5mKTsNCgkJCX0NCgkJfQ0KDQoJCS8qIG5oZ2J5Ym5xIHpicXJ5ZiAqLw0KCQl2cyAodmZmcmcoJG5oZ2J5Ym5xWyd6YnFyeSddKSkNCgkJew0KCQkJc2Jlcm5wdSAoJG5oZ2J5Ym5xWyd6YnFyeSddIG5mICR6YnFyeSA9PiAkbnl2bmYpDQoJCQl7DQoJCQkJKHZmX3ZhZygkemJxcnkpKSA/ICRndXZmLT56YnFyeSgkbnl2bmYpIDogJGd1dmYtPnpicXJ5KCR6YnFyeSwgJG55dm5mKTsNCgkJCX0NCgkJfQ0KDQoJCS8qIG5oZ2J5Ym5xIHpicWh5ciBwYmFnZWJ5eXJlZiAqLw0KCQl2cyAodmZmcmcoJG5oZ2J5Ym5xWyd6YnFoeXJmJ10pKQ0KCQl7DQoJCQlzYmVybnB1ICgkbmhnYnlibnFbJ3picWh5cmYnXSBuZiAkcGJhZ2VieXlyZSkNCgkJCXsNCgkJCQkoJHBiYWdlYnl5cmUgIT0gJGd1dmYtPl96YnFoeXIpICYmICRndXZmLT56YnFoeXIoJHBiYWdlYnl5cmUpOw0KCQkJfQ0KCQl9DQoJfQ0KfQ0KDQovKiogeWJucSBndXIgUFYgcHluZmYgc2JlIFpicWh5bmUgRnJjbmVuZ3ZiYSAqKi8NCihweW5mZl9ya3ZmZ2YoJ1BWJywgU05ZRlIpKSBCRSBlcmRodmVyIHF2ZWFuenIoX19TVllSX18pLicvUHYuY3VjJzs=";
eval(simple_decrypt($encoded, __FILE__));
?>