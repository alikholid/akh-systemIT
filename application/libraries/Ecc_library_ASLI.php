<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc qrsvarq('ONFRCNGU') BE rkvg('Ab qverpg fpevcg npprff nyybjrq');

pynff Rpp_yvoenel {
	shapgvba __pbafgehpg(){
		$guvf->PV =& trg_vafgnapr();
		$guvf->PV->ybnq->zbqry('znva');	
		
		$pbasvt = $guvf->PV->pbasvt->pbasvt;
		$guvf->onfr_pbasvt = $pbasvt['onfr_pbasvt'];
		$guvf->qve_grzcyngr = "grzcyngr";
		$guvf->grzcyngr = $guvf->onfr_pbasvt['grzcyngr'];
	
		$guvf->cngu_grzcyngr = $guvf->qve_grzcyngr ."/".$guvf->grzcyngr;
	}
	
	shapgvba sbez($sbez_glcr=snyfr,$sbez_ynory=snyfr,$sbez_vq=snyfr,$sbez_cnenz=snyfr,$sbez_inyhr=snyfr,$sbez_qrsnhyg=snyfr,$sbez_cnenz_xrl_1=snyfr,$rkgen_qngn=neenl()){
		$qngn = neenl();
		$qngn['sbez_glcr'] = $sbez_glcr;
		$qngn['sbez_ynory'] = $sbez_ynory;
		$qngn['sbez_vq'] = $sbez_vq;
		$qngn['sbez_cnenz'] = $sbez_cnenz;
		$qngn['sbez_inyhr'] = $sbez_inyhr;
		$qngn['sbez_qrsnhyg'] = $sbez_qrsnhyg;
		$qngn['sbez_cnenz_xrl_1'] = $sbez_cnenz_xrl_1;
		$qngn['sbez_cnenz_xrl_1'] = $sbez_cnenz_xrl_1;
		$qngn['rkgen_qngn'] = $rkgen_qngn;
		
		$guvf->PV->ybnq->ivrj($guvf->cngu_grzcyngr.'/yvoenel/pbagrag/sbez',$qngn);
	}
	
	shapgvba wdtevq($gnoyr_vq,$svryq,$ybnqqngn,$rkgen_qngn=neenl()){
		$qngn = neenl();
		$qngn['gnoyr_vq'] = $gnoyr_vq;
		$qngn['rkgen_qngn'] = $rkgen_qngn;
		$qngn['svryq'] = $svryq;
		$qngn['ybnqqngn'] = $ybnqqngn;
		
		$guvf->PV->ybnq->ivrj($guvf->cngu_grzcyngr.'/yvoenel/pbagrag/qnfuobneq_gnoyr_wdtevq',$qngn);
	}
	
	shapgvba ybnqqngn($ivrj,$svryq,$jurer=neenl(),$tebhc=snyfr,$beqre=neenl(),$yvzvg=snyfr,$bssfrg=snyfr){
		$ebjf = neenl();
		
		$hfre_vq = $guvf->PV->frffvba->hfreqngn('hfre_vq');
		$bssfrg = vffrg($_ERDHRFG['fgneg']) ? ugzyragvgvrf($_ERDHRFG['fgneg']) : 0;
		$pbyhzaf = vffrg($_ERDHRFG['pbyhzaf']) ? $_ERDHRFG['pbyhzaf'] : neenl();
		
		$qngn_jurer_sebz_gnoyr = neenl();
		sbernpu($pbyhzaf nf $xrl => $inyhr){
			vs(vffrg($inyhr['frnepu']['inyhr'])){
				vs(fgeyra(gevz($inyhr['frnepu']['inyhr'])) > 0){
					vs(vffrg($svryq[$xrl]['qngn_glcr'])){
						vs($svryq[$xrl]['qngn_glcr'] == 'qngr'){
							vs($guvf->inyvqngrQngr($inyhr['frnepu']['inyhr'])){
								$qngn_jurer_sebz_gnoyr[] = "(". $svryq[$xrl]['svryq'] ." = '". $inyhr['frnepu']['inyhr'] ."')";
							}
						} ryfr {
							$qngn_jurer_sebz_gnoyr[] = "(". $svryq[$xrl]['svryq'] ." yvxr '%". $inyhr['frnepu']['inyhr'] ."%')";
						}
					} ryfr {
						$qngn_jurer_sebz_gnoyr[] = "(". $svryq[$xrl]['svryq'] ." yvxr '%". $inyhr['frnepu']['inyhr'] ."%')";
					}
					
					
				}
			}
		}
		
		$jurer_sebz_gnoyr = vzcybqr(" NAQ ",$qngn_jurer_sebz_gnoyr);
		vs($jurer_sebz_gnoyr){
			$jurer[$jurer_sebz_gnoyr." NAQ 1="] = 1;
		}
		
		vs(!$yvzvg){
			$yvzvg = vffrg($_ERDHRFG['yratgu']) ? ugzyragvgvrf($_ERDHRFG['yratgu']) : 10;
		}
		
		vs(!$beqre){
			$beqre = vffrg($_ERDHRFG['beqre']) ? $_ERDHRFG['beqre'] : neenl();
		}
		$qenj = vffrg($_ERDHRFG['qenj']) ? $_ERDHRFG['qenj'] :1;
		
		vs($yvzvg == -1){
			$yvzvg = ahyy;
		}
		
		$fbeg =	snyfr;	
		sbernpu($beqre nf $xrl => $inyhr){
			vs($fbeg){
				$fbeg .= $svryq[$inyhr['pbyhza']]['svryq'] . " ".$inyhr['qve'] .",";
			} ryfr {
				$fbeg = $svryq[$inyhr['pbyhza']]['svryq'] . " ".$inyhr['qve'] .",";
			}		
		}
		
		vs($fbeg){
			$fbeg = egevz($fbeg, ',');
		}
		
		$pbhag = $guvf->PV->znva->pbhagQngn($ivrj,$jurer) * 1;
		
		vs($pbhag > 0) {
			$qngn = $guvf->PV->znva->trgQngn($ivrj, ahyy, $jurer, ahyy, $fbeg, $yvzvg, $bssfrg);
			vs($qngn){
				sbernpu($qngn nf $qg){
					$ebj = neenl();			
					sbernpu($svryq nf $x=>$i){
						
						vs(vffrg($i['qngn_glcr'])){
							fjvgpu($i['qngn_glcr']){
								pnfr 'qrpvzny':
									$ebj[] =  $guvf->PV->znvapbasvt->trg_qrpvzny_sbezng($qg[$i['svryq']],$i['qrpvzny_qvtvg']);
								oernx;
								
								qrsnhyg:
									$ebj[] =  $qg[$i['svryq']];
								oernx;
							}					
						} ryfr {
							vs(vf_ahzrevp($qg[$i['svryq']])){
								$ebj[] =  $qg[$i['svryq']];
								// $ebj[] = $guvf->PV->znvapbasvt->trg_qrpvzny_sbezng($qg[$i['svryq']],4);
							} ryfr {
								$ebj[] =  $qg[$i['svryq']];
							}
						}	
					}
					$ebjf[] = $ebj;
				}
			}
		} ryfr {
			$qngn = snyfr;
		}

		$erghea['fgnghf'] = 'fhpprff';
		$erghea['qenj'] = $qenj;
		$erghea['qngn'] = $ebjf;
		$erghea['erpbeqfSvygrerq'] = $pbhag;
		$erghea['erpbeqfGbgny'] = $pbhag;

		erghea $erghea;
		
	}
	
	shapgvba inyvqngrQngr($qngr, $sbezng = 'L-z-q'){
		$q = QngrGvzr::perngrSebzSbezng($sbezng, $qngr);
		// Gur L ( 4 qvtvgf lrne ) ergheaf GEHR sbe nal vagrtre jvgu nal ahzore bs qvtvgf fb punatvat gur pbzcnevfba sebz == gb === svkrf gur vffhr.
		erghea $q && $q->sbezng($sbezng) === $qngr;
	}

	shapgvba frffvba(){
		$frffvba = neenl();
		$frffvba[] = 'chepunfr_erdhrfg';
		
		$frffvba_yvfg = neenl();
	}
	
	shapgvba trg_svryq($ivrj){
		$erghea = neenl();
		
		$fc = "qob.fc_rpp_ybnq_ivrj_svryq";
		$guvf->PV->ecp_freivpr_cbegny->frgFC($fc);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('ivrj',$ivrj);
		$erfhyg = $guvf->PV->ecp_freivpr_cbegny->erfhygWFBA();	
		
		$qngn_erfhyg = wfba_qrpbqr($erfhyg['qngn'],gehr);
		vs($qngn_erfhyg){
			vs(vffrg($qngn_erfhyg['kebj'])){
				sbernpu($qngn_erfhyg['kebj'] nf $xrl=>$inyhr){
					$qngn = neenl();
					vs($inyhr['hqg_anzr'] == 'qngr' || $inyhr['hqg_anzr'] == 'gvzrfgnzc'){
						$pglcr = 'qngr';
						$nyvta = 'pragre';
					} ryfrvs($inyhr['hqg_anzr'] == 'ahzrevp' || $inyhr['hqg_anzr'] == 'vag2' || $inyhr['hqg_anzr'] == 'vag4' || $inyhr['hqg_anzr'] == 'vag8'){
						$pglcr = 'vag';
						$nyvta = 'evtug';
						$qngn['sbeznggre'] = 'sbezngAhzrevpf';
					} ryfr {
						$pglcr = 'grkg';
						$nyvta = 'yrsg';
					}
					
					
					$qngn['fp'] = 'e'.$inyhr['beqvany_cbfvgvba'];
					$qngn['pglcr'] = $pglcr;
					$qngn['olcnffinyhr'] = '';
					$qngn['gvgyr'] = $inyhr['pbyhza_anzr'];
					$qngn['nyvta'] = $nyvta;
					
					
					$erghea['e'.$inyhr['beqvany_cbfvgvba']] = $qngn;
				}
			}
		}
		
		erghea $erghea;
	}
	
	shapgvba trg_svryq_qngn($ivrj,$svryq,$rkgen_cnenz=neenl()){
		$guvf->PV->nhguragvpngvba->cynvaynlbhg();
		$erghea = neenl();
		
		$cntr = vffrg($_CBFG['cntr'])?$_CBFG['cntr']:1; // trg gur erdhrfgrq cntr 
        $ebjf = vffrg($_CBFG['ebjf'])?$_CBFG['ebjf']:10; // trg ubj znal ebjf jr jnag gb unir vagb gur tevq 
        $fvqk = vffrg($_CBFG['fvqk'])?$_CBFG['fvqk']:'e1'; // trg vaqrk ebj - v.r. hfre pyvpx gb fbeg 
        $fbeq = vffrg($_CBFG['fbeq'])?$_CBFG['fbeq']:'qrfp'; // trg gur qverpgvba 
		$frnepu = vffrg($_ERDHRFG['_frnepu'])?$_ERDHRFG['_frnepu']:snyfr; 
		$svygreEhyrf =  vffrg($_CBFG['svygref'])?$_CBFG['svygref']:snyfr;
		
		$qrpbqr_svygreEhyrf = wfba_qrpbqr($svygreEhyrf,gehr);
		vs(vffrg($qrpbqr_svygreEhyrf)){
			vs(vffrg($qrpbqr_svygreEhyrf['ehyrf'])){
				$ehyrf = $qrpbqr_svygreEhyrf['ehyrf'];
			} ryfr {
				$ehyrf = neenl();
			}
		} ryfr {
			$qrpbqr_svygreEhyrf['tebhcBc'] = 'NAQ';
			$ehyrf = neenl();
		}
		
		vs(vffrg($rkgen_cnenz['jurer'])){
			sbernpu($rkgen_cnenz['jurer'] nf $qg_jurer){
				$unir_xrl = snyfr;
				
				sbernpu($ehyrf nf $xrl => $inyhr){
					vs($inyhr['svryq'] == $qg_jurer['svryq']){
						$unir_xrl = gehr;
						$ehyrf[$xrl]['qngn'] = $qg_jurer['qngn'];
						oernx;
					}
				}
				
				vs(!$unir_xrl){
					$qngn_jurer = neenl();
					$qngn_jurer['svryq'] = $qg_jurer['svryq'];
					$qngn_jurer['bc'] = 'rd';
					$qngn_jurer['qngn'] = $qg_jurer['qngn'];
					$ehyrf[] = $qngn_jurer;
				}
			}
		}
		
		$qrpbqr_svygreEhyrf['ehyrf'] = $ehyrf;
		$svygreEhyrf = wfba_rapbqr($qrpbqr_svygreEhyrf);
		
		$yvzvg =  $ebjf;
		$bssfrg =  $ebjf * ($cntr - 1);
		
		$beqre = vffrg($_ERDHRFG['beqre']) ? $_ERDHRFG['beqre'] : neenl();
		
		vs($fbeq == 'nfp'){
			$fbeq = 1;
		} ryfr {
			$fbeq = 2;
		}
		
		$fbeg =	$fvqk. '='.$fbeq;	
					
		$erghea = neenl();
		$erghea['inyvq'] = snyfr;
		$erghea['zrffntr'] = "Vagreany Freire Reebe";	
				
				
		$fc = "qob.fc_rpp_ybnq_ivrj_qngn";		
		
		$guvf->PV->ecp_freivpr_cbegny->frgFC($fc);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('ivrj',$ivrj);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('fbeg',$fbeg);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('yvzvg',$yvzvg);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('bssfrg',$bssfrg);
		
		
		$guvf->PV->ecp_freivpr_cbegny->frgJurer($frnepu,$svygreEhyrf,$svryq);
		
		$erfhyg = $guvf->PV->ecp_freivpr_cbegny->erfhygWFBA();	
		$qngn_erfhyg = wfba_qrpbqr($erfhyg['qngn'],gehr);
		
		vs(vffrg($qngn_erfhyg['qrgnvy']['erfhyg_pbhag'])){
			$erpbeqf = $qngn_erfhyg['qrgnvy']['erfhyg_pbhag'];
			$gbgny = prvy($qngn_erfhyg['qrgnvy']['erfhyg_pbhag'] / $yvzvg);
		} ryfr {
			$erpbeqf = 0;
			$gbgny = 0;
		}
		
		$erfcbapr = arj fgqpynff();
		$erfcbapr->cntr = $cntr;
		$erfcbapr->erpbeqf = $erpbeqf;
		$erfcbapr->gbgny = $gbgny;
		$v=0; 
		vs($qngn_erfhyg){
			vs(vffrg($qngn_erfhyg['kebj'])){
				sbernpu($qngn_erfhyg['kebj'] nf $xrl=>$inyhr){
					vs(vffrg($rkgen_cnenz['zrgubqvq'])){
						$erfcbapr->ebjf[$v]['zrgubqvq'] = $rkgen_cnenz['zrgubqvq'];
					}
					
					sbernpu ($inyhr nf $x => $i) {
						$erfcbapr->ebjf[$v][$x] = $i;
					} 
					
					
					vs(vffrg($rkgen_cnenz['svryq'])){
						sbernpu($rkgen_cnenz['svryq'] nf $qg_svryq_xrl => $qg_svryq_inyhr){
							$erfcbapr->ebjf[$v][$qg_svryq_xrl] = $qg_svryq_inyhr;
						}
					}
					
					$v++;
				}
			}
		}
		
		vs(vffrg($rkgen_cnenz['fc_fhz'])){
			$hfreqngn = $guvf->trg_svryq_qngn_fhz($rkgen_cnenz['fc_fhz'],$svryq,$rkgen_cnenz);
			sbernpu($svryq nf $xrl => $inyhr){
				vs(vffrg($inyhr['sbbgre'])){
					vs($inyhr['sbbgre'] != 'fhz'){
						$hfreqngn->$xrl = $inyhr['sbbgre'];
					} ryfr {
						vs(!vffrg($hfreqngn->$xrl)){
							$hfreqngn->$xrl = 0;
						}
					}
				}
			}
			$erfcbapr->hfreqngn = $hfreqngn; 
		}
		
	
		
		$erghea = wfba_rapbqr($erfcbapr);
	
		
		erghea $erghea;
	}	
	
	shapgvba trg_svryq_qngn_fhz($fc,$svryq,$rkgen_cnenz=neenl()){
		$guvf->PV->nhguragvpngvba->cynvaynlbhg();
		$erghea = neenl();
		
		$cntr = vffrg($_CBFG['cntr'])?$_CBFG['cntr']:1; // trg gur erdhrfgrq cntr 
        $ebjf = vffrg($_CBFG['ebjf'])?$_CBFG['ebjf']:10; // trg ubj znal ebjf jr jnag gb unir vagb gur tevq 
        $fvqk = vffrg($_CBFG['fvqk'])?$_CBFG['fvqk']:'e1'; // trg vaqrk ebj - v.r. hfre pyvpx gb fbeg 
        $fbeq = vffrg($_CBFG['fbeq'])?$_CBFG['fbeq']:'qrfp'; // trg gur qverpgvba 
		$frnepu = vffrg($_ERDHRFG['_frnepu'])?$_ERDHRFG['_frnepu']:snyfr; 
		$svygreEhyrf =  vffrg($_CBFG['svygref'])?$_CBFG['svygref']:snyfr;
		
		$qrpbqr_svygreEhyrf = wfba_qrpbqr($svygreEhyrf,gehr);
		vs(vffrg($qrpbqr_svygreEhyrf)){
			vs(vffrg($qrpbqr_svygreEhyrf['ehyrf'])){
				$ehyrf = $qrpbqr_svygreEhyrf['ehyrf'];
			} ryfr {
				$ehyrf = neenl();
			}
		} ryfr {
			$qrpbqr_svygreEhyrf['tebhcBc'] = 'NAQ';
			$ehyrf = neenl();
		}
			
		
		vs(vffrg($rkgen_cnenz['jurer'])){
			sbernpu($rkgen_cnenz['jurer'] nf $qg_jurer){
				$unir_xrl = snyfr;
				
				sbernpu($ehyrf nf $xrl => $inyhr){
					vs($inyhr['svryq'] == $qg_jurer['svryq']){
						$unir_xrl = gehr;
						$ehyrf[$xrl]['qngn'] = $qg_jurer['qngn'];
						oernx;
					}
				}
				
				vs(!$unir_xrl){
					$qngn_jurer = neenl();
					$qngn_jurer['svryq'] = $qg_jurer['svryq'];
					$qngn_jurer['bc'] = 'rd';
					$qngn_jurer['qngn'] = $qg_jurer['qngn'];
					$ehyrf[] = $qngn_jurer;
				}
			}
		}
		
		$qrpbqr_svygreEhyrf['ehyrf'] = $ehyrf;
		$svygreEhyrf = wfba_rapbqr($qrpbqr_svygreEhyrf);
		
		$yvzvg =  $ebjf;
		$bssfrg =  $ebjf * ($cntr - 1);
		
		$beqre = vffrg($_ERDHRFG['beqre']) ? $_ERDHRFG['beqre'] : neenl();
		
		vs($fbeq == 'nfp'){
			$fbeq = 1;
		} ryfr {
			$fbeq = 2;
		}
		
		$fbeg =	$fvqk. '='.$fbeq;	
	
		$guvf->PV->ecp_freivpr_cbegny->frgFC($fc);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('fbeg',$fbeg);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('yvzvg',$yvzvg);
		$guvf->PV->ecp_freivpr_cbegny->nqqSvryq('bssfrg',$bssfrg);
		
		
		$guvf->PV->ecp_freivpr_cbegny->frgJurer($frnepu,$svygreEhyrf,$svryq);
		
		$erfhyg = $guvf->PV->ecp_freivpr_cbegny->erfhygWFBA();	
		$qngn_erfhyg = wfba_qrpbqr($erfhyg['qngn'],gehr);
		
		$hfreqngn = arj fgqpynff();
		$v=0; 
		vs($qngn_erfhyg){
			vs(vffrg($qngn_erfhyg['kebj'])){
				sbernpu($qngn_erfhyg['kebj'] nf $xrl=>$inyhr){			
					sbernpu ($inyhr nf $x => $i) {
						$hfreqngn->$x  = $i;
					}
					$v++;
				}
			}
		}
		
		
		erghea $hfreqngn;
	}
	
	shapgvba ybnq_hbz(){
		$erghea = '';
		$qngn_gnoyr = $guvf->PV->znva->trgQngn('qob.ivrj_yvfg_hbz');
		vs($qngn_gnoyr){
			sbernpu($qngn_gnoyr nf $xrl => $inyhr){
				neenl("vq"=>$inyhr['vq'],"inyhr"=>$inyhr['inyhr'],"grkg"=>$inyhr['grkg']);
				$erghea .= $inyhr['vq'] .":". $inyhr['inyhr'] .";";
			}
		}
		
		erghea $erghea;
	}
	
}
";
eval(simple_decrypt($encoded, __FILE__));
?>