<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc vs ( ! qrsvarq('ONFRCNGU')) rkvg('Ab qverpg fpevcg npprff nyybjrq');

/*==============================================================*/
// Yvoenevrf Ynathntr										//			
// Nhgube : Avmne Enuzng										//	
/*==============================================================*/
Pynff Ynathntr  {
	shapgvba __pbafgehpg(){
		$guvf->pbasvt['ybnqnwnk'] = snyfr;
		
		$guvf->PV =& trg_vafgnapr();
		$guvf->PV->ybnq->zbqry('znva'); // ybnq zbqry		
	}
		
	shapgvba trg_ynathntr() {
		$ynat = neenl();

		// Glcr bs ynathntr: egy - evtug gb yrsg, yge = yrsg gb evtug
		// Qrsnhyg vf yge
		// Sbe Nenovp naq fvzvyne hfr egy
		$ynat['ynat_glcr'] = 'yge'; 

		// ARJ YNAT YVARF
		$ynat['sbe_nqiregvfrzragf'] = 'Sbe Nqiregvfrzragf';
		$ynat['ertvfgre'] = 'Ertvfgre';
		$ynat['ertvfgre_vasb'] = 'Perngr lbhe serr nppbhag naq fgneg genqvat jvgu Ovgpbva. Hfr gur zbfg cbchyne zrgubq bs znxvat zbarl.';
		$ynat['zrah_ybtbhg'] = 'Ybtbhg';
		$ynat['jul_gb_unir_nppbhag_va'] = 'Jul gb unir nppbhag va';
		$ynat['jul_vasb_1'] = 'Snfg naq npphengr genafnpgvbaf orgjrra zrepunag naq phfgbzre.';
		$ynat['jul_vasb_2'] = 'Rnpu pyvrag vf cebgrpgrq sebz znyvpvbhf naq senhqhyrag phfgbzref.';
		$ynat['fubj_zber_nqf'] = 'Fubj zber Nqf'; 
		$ynat['hfref'] = 'hfref';
		$ynat['reebe_46'] = 'Lbh pna qbjaybnq Ovgpbva orpnhfr bar bs lbhe genafnpgvbaf ercbegrq nohfr. Bapr npgvba vf gnxra ol gur nqzvavfgengbe jvyy or noyr gb qbjaybnq lbhe Ovgpbva.';
		$ynat['reebe_47'] = 'Lbh pnag pnapry genqr orpbhfr cnlzrag jnf znqr be genqr jnf ercbegrq.';
		$ynat['fgnghf_0'] = 'Genqr jnf ercbegrq. Njnvgvat npgvba sebz nqzvavfgengbe.';

		// Znva
		$ynat['nqiregvfrzrag'] = 'Nqiregvfrzrag';
		$ynat['fryy_ovgpbvaf_gb'] = 'Fryy Ovgpbvaf gb';
		$ynat['sbe'] = 'sbe';
		$ynat['genqre'] = 'Genqre';
		$ynat['cbfvgvir_srrqonpxf'] = 'cbfvgvir srrqonpxf';
		$ynat['arhgeny_srrqonpxf'] = 'arhgeny srrqonpxf';
		$ynat['artngvir_srrqonpxf'] = 'artngvir srrqonpxf';
		$ynat['fryy_lbhe_ovgpbvaf'] = 'Fryy lbhe ovgpbvaf';
		$ynat['fryy_ovgpbvaf_grkgnern'] = 'Ragre lbhe %cnlzrag_zrgubq% nppbhag gb nyybj genqre fraq lbh zbarl!';
		$ynat['guvf_nq_vf_lbhef'] = 'Guvf nq vf lbhef!';
		$ynat['ybtva_vf_erdhverq'] = 'Ybtva vf erdhverq gb pbagvahr guvf genqr.';
		$ynat['grezf_bs_genqr'] = 'Grezf bs genqr';
		$ynat['ohl_ovgpbvaf_ivn'] = 'Ohl Ovgpbvaf ivn';
		$ynat['ohl_ovgpbvaf'] = 'Fryy Bggbpbvaf';
		$ynat['jrypbzr_fperra_grkg'] = 'Dhvpx ohl naq fryy ovgpbvaf bayvar. Snfg naq frpher.';
		$ynat['fryy_ovgpbvaf'] = 'Ohl bggbpbvaf';
		$ynat['nzbhag'] = 'Nzbhag';
		$ynat['cnlzrag_zrgubq'] = 'Cnlzrag zrgubq';
		$ynat['onfr_cevpr'] = 'Onfr Cevpr BGP / OGP';
		$ynat['cevpr'] = 'Cevpr';
		$ynat['yvzvgf'] = 'Yvzvgf';
		$ynat['ab_nq_sbe_qvfcynl'] = 'Ab unir nq sbe qvfcynl.';
		$ynat['frr_zber_nq_sbe_fryyvat'] = 'Frr zber nq sbe fryyvat ovgpbvaf';
		$ynat['jul_hf'] = 'Jul hf?';
		$ynat['yngrfg_srrqonpxf'] = 'Yngrfg srrqonpxf';
		$ynat['sbe_nqiregvfrzrag'] = 'sbe nqiregvfrzrag';
		$ynat['ab_srrqonpxf_lrg'] = 'Ab unir srrqonpxf lrg.';
		$ynat['pbagnpg'] = 'Pbagnpg';
		$ynat['lbhe_anzr'] = 'Lbhe anzr';
		$ynat['lbhe_rznvy'] = 'Lbhe rznvy nqqerff';
		$ynat['fhowrpg'] = 'Fhowrpg';
		$ynat['zrffntr'] = 'Zrffntr';
		$ynat['rznvy_irevsvpngvba'] = 'Rznvy irevsvpngvba';
		$ynat['snd'] = 'Serdhragyl Nfxrq Dhrfgvbaf'; 
		$ynat['cntrf'] = 'Cntrf';
		$ynat['ynathntrf'] = 'Ynathntrf';
		$ynat['sbyybj_hf'] = 'Sbyybj hf';
		$ynat['grezf_bs_freivprf'] = 'Grezf bs freivprf';
		$ynat['cevinpl_cbyvpl'] = 'Cevinpl Cbyvpl';
		$ynat['cbfg_nq'] = 'Cbfg nq';
		$ynat['ybtva'] = 'Ybtva';
		$ynat['perngr_nppbhag'] = 'Perngr nppbhag';
		$ynat['frr_zber_nq_sbe_ohlvat'] = 'Frr zber nq sbe ohlvat ovgpbvaf';
		$ynat['rznvy_nqqerff'] = 'Rznvy nqqerff';
		$ynat['cnffjbeq'] = 'Cnffjbeq';
		$ynat['xrrc_zr_ybtva'] = 'Xrrc zr ybtva';
		$ynat['ab_unir_nppbhag'] = 'Qbag unir na nppbhag?';
		$ynat['pyvpx_urer'] = 'Pyvpx urer';
		$ynat['gb_perngr_arj'] = 'gb perngr arj.';
		$ynat['sbetbg_cnffjbeq'] = 'Sbetbg cnffjbeq?';
		$ynat['gb_erfrg_vg'] = 'gb erfrg vg.';
		$ynat['nq_glcr'] = 'Nq glcr';
		$ynat['nq_glcr_vasb'] = 'Pubbfr n glcr bs lbhe nqiregvfrzrag.<oe>Vs lbh pubbfr Ohl Bggbpbvaf, gungf zrna pyvragf jvyy fryy gurve Bggbpbva gb lbh naq h zhfg fraq Ovgpbvaf gb gurz cre beqrerq.<oe> Vs lbh pubbfr Fryy Bggbpbvaf, gungf zrna pyvragf jvyy ohl Bggbpbvaf sebz lbh naq h jvyy trg Ovgpbvaf sebz gurz .';
		$ynat['cnlzrag_zrgubq_vasb'] = 'Pubbfr zrgubq bs cnlzrag jvpu lbh erprvir zbarl vs fryy ovgpbvaf be fraq zbarl vs lbh ohl ovgpbvaf.';
		$ynat['pheerapl'] = 'Pheerapl';
		$ynat['pheerapl_vasb'] = 'Pubbfr n pheerapl bs lbhe nq. Vs lbh fryy bggbpbvaf jvyy, pyvragf jvyy cnl bggbpbvaf cevpr ivn guvf pheerapl. Vs lbh ohl bggbpbvaf, pyvragf jvyy cnl lbh bggbpbvaf cevpr ivn guvf pheerapl.';
		$ynat['ragre_pbzvffvba'] = 'BGP / OGP';
		$ynat['pheerapg_ovgpbva_cevpr'] = 'Pheerag Bggbpbva cevpr';
		$ynat['lbhe_ovgpbva_cevpr'] = 'Lbhe Bggbpbva cevpr';
		$ynat['ragre_pbzvffvba_vasb'] = 'Ragre lbhe onfr cevpr sbe BGP urer. Rknzcyr: Vs ragre 210 naq pheerag Bggbpbva cevpr vf 200 BGP / OGP, lbhe cevpr va nq jvyy or 210 BGP / OGP be 0.005 OGP / BGP.';
		$ynat['cnlzrag_vafgehpgvbaf'] = 'Cnlzrag vafgehpgvbaf';
		$ynat['cnlzrag_vafgehpgvbaf_vasb'] = 'Vs lbh fryy ovgpbvaf, urer pna ragre lbhe Bggbpbva Nqqerff sbe cnlzrag gb erprvir nzbhag orsber lbh tvir ovgpbvaf gb pyvrag.<oe>Vs lbh ohl ovgpbvaf, urer pna ragre lbhe ovgpbva nqqerff juvpu vf ninvynoyr ba lbhe cebsvyr';
		$ynat['zvavzny_genqr_nzbhag'] = 'Zvavzny genqr nzbhag';
		$ynat['zvavzny_genqr_nzbhag_vasb'] = 'Ragre gur zvavzny nzbhag sbe genqr. Rknzcyr: vs ragre 10, va nq yvfg jvyy or fubjrq yvzvg sebz 10 gb znk genqr nzbhag, naq pyvrag pna abg ohl be fryy ovgpbvaf vs gurve nzbhag pbairegrq gb lbhe pheerapl vf ng yrnfg 10';
		$ynat['znkvzhz_genqr_nzbhag'] = 'Znkvzhz genqr nzbhag';
		$ynat['znkvzhz_genqr_nzbhag_vasb'] = 'Ragre gur znkvzhz nzbhag sbe genqr. Rknzcyr: vs ragre 1000, va nq yvfg jvyy or fubjrq yvzvg sebz zva nzbhag gb 1000, naq pyvrag pna abg ohl be fryy ovgpbvaf vs gurve nzbhag pbairegrq gb lbhe pheerapl vf rkprrq 1000';
		$ynat['genqr_cebprff_gvzr'] = 'Genqr cebprff gvzr';
		$ynat['genqr_cebprff_gvzr_vasb'] = 'Ragre lbhe genqr cebprff gvzr va zvahgrf. Vs lbh ragre 30, lbh naq pyvrag unir 30 zvahgrf gb pbzcyrgr genqr. V.r pyvrag arrq gb fraq zbarl/ovgpbvaf be lbh arrq gb fraq zbarl/ovgpbvaf gb pyvrag orsber rkcver gvzr.';
		$ynat['grezf_bs_genqr_vasb'] = 'Urer lbh pna ragre lbhe bja grezf bs genqr, naq jura pyvrag znxr genqr ol guvf nq, nhgbzngvpnyyl nterr vg.';
		$ynat['hfreanzr'] = 'Hfreanzr';
		$ynat['cebprff_gvzr'] = 'Cebprff gvzr';
		$ynat['npgvba'] = 'Npgvba';
		$ynat['pbasvez_cnffjbeq'] = 'Pbasvez cnffjbeq';
		$ynat['frperg_cva'] = 'Frperg CVA';
		$ynat['nyernql_unir_nppbhag'] = 'Nyernql unir nppbhag?';
		$ynat['gb_ybtva'] = 'gb ybtva.';
		$ynat['frnepu'] = 'Frnepu';
		$ynat['nqiregvfrzragf'] = 'nqiregvfrzragf';
		$ynat['nnqiregvfrzragf'] = 'Nqiregvfrzragf';
		$ynat['genqrf'] = 'genqrf';
		$ynat['pnapry_genqr'] = 'Pnapry genqr';
		$ynat['ercbeg_genqr'] = 'Ercbeg genqr';
		$ynat['ggenqr'] = 'Genqr';
		$ynat['sebz_nqiregvfrzrag'] = 'sebz nqiregvfrzrag';
		$ynat['ovgpbva_cevpr'] = 'Ovgpbva Cevpr';
		$ynat['genqr_nzbhag'] = 'Genqr nzbhag';
		$ynat['lbhe_ercbeg'] = 'Lbhe ercbeg';
		$ynat['yrnir_srrqonpx'] = 'Yrnir srrqonpx';
		$ynat['pubbfr_srrqonpx_glcr'] = 'Pubbfr srrqonpx glcr';
		$ynat['cbfvgvir'] = 'Cbfvgvir';
		$ynat['arhgeny'] = 'Arhgeny';
		$ynat['artngvir'] = 'Artngvir';
		$ynat['yrnir_srrqonpx_sbe'] = 'Yrnir srrqonpx sbe';
		$ynat['fgnghf_1_1'] = 'Pyvrag perngr genqr erdhrfg. Njnvgvat npgvba sebz genqre.';
		$ynat['fgnghf_1_2'] = 'Pyvrag perngr genqr erdhrfg. Njnvgvat npgvba sebz pyvrag.';
		$ynat['fgnghf_2_1'] = 'Genqre znxr cnlzrag. Njnvgvat npgvba sebz pyvrag.';
		$ynat['fgnghf_2_2'] = 'Pyvrag znxr cnlzrag. Njnvgvat npgvba sebz genqre.';
		$ynat['fgnghf_3_1'] = 'Pyvrag eryrnfr ovgpbvaf.';
		$ynat['fgnghf_3_2'] = 'Genqre eryrnfr ovgpbvaf.';
		$ynat['fgnghf_4'] = 'Genqre pnapry genqr';
		$ynat['fgnghf_5'] = 'Pyvrag pnapry genqr';
		$ynat['fgnghf_6'] = 'Genqr rkcverq';
		$ynat['fgnghf_7'] = 'Genqr pbzcyrgrq';
		$ynat['ner_lbh_fher_erzvaqre'] = 'Fryrpg npgvba sbe erzvaqre gb genqre';
		$ynat['ner_lbh_fher_eryrnfr_ovgpbvaf_1'] = 'Ner lbh fher lbh jnag gb eryrnfr ovgpbvaf gb genqre';
		$ynat['guvf_npgvba_pna_or_haqb'] = 'Guvf npgvba vg pna abg or pnapryrq jura zrg bapr.';
		$ynat['fgnghf'] = 'Fgnghf';
		// $ynat['genqr_vasb_1'] = 'Abj lbh zhfg jnvg genqre fraq lbh %nzbhag% %pheerapl% gb lbhe <o>Bggbpbva</o> nppbhag.';
		$ynat['genqr_vasb_1'] = 'Guvf genqr jvyy nhgb qrqhpg <o>%nzbhag% %pheerapl% + srr</o> sebz lbhe OGP jnyyrg bapr nccebirq ol genqre.';
		// $ynat['genqr_vasb_2'] = '<o>VZCBEGNAG!</o> Cyrnfr qb abg eryrnfr lbhe ovgpbvaf orsber lbh ner fher gung lbhe genqre unf cnvq nzbhag.';
		$ynat['genqr_vasb_2'] = '<o>VZCBEGNAG!</o> Cyrnfr erzvaq gur genqre hfvat bhe snpvyvgl ( Erzvaqre Genqre naq Pung ).';
		$ynat['genqr_vasb_3'] = 'Lbh pna ivrj genqr cebterff va frpgvba "Fgnghf", gung frpgvba ner nhgbzngvpnyyl erserfurq rirel gvzr jura fgnghf jnf punatrq. Abg arrq gb erserfu cntr.';
		$ynat['genqr_vasb_4'] = 'Guvf genqr jnf rkcverq. Lbh pnag gnxr nal npgvba zber.';
		$ynat['genqr_vasb_15'] = 'Guvf genqr jnf pbzcyrgrq. Lbh pnag gnxr nal npgvba zber.';
		$ynat['genqr_vasb_5'] = 'Lbh naq genqre unir yrff guna <o>%zvahgrf% zvahgrf</o> gb pbzcyrgr guvf genqr. Vs hagvy nsgre gur gvzr lbh be n qrnyre abg pbzcyrgr guvf qrny, vg jvyy nhgbzngvpnyyl or pbzcyrgrq naq ovgpbvaf jvyy or erghearq.';
		$ynat['pung'] = 'Pung';
		$ynat['jevgr_zrffntr_gb_genqre'] = 'Jevgr zrffntr gb genqre.';
		$ynat['ab_unir_zrffntrf'] = 'Ab unir zrffntrf.';
		$ynat['ner_lbh_fher_znqr_cnlzrag'] = 'Ner lbh fher lbh znqr cnlzrag gb pyvrag';
		$ynat['jvgu_nzbhag'] = 'jvgu nzbhag';
		$ynat['lbh_zhfg_frag'] = 'Lbh zhfg frag';
		$ynat['gb_fryyre'] = 'gb pyvrag';
		$ynat['nppbhag'] = 'nppbhag';
		// $ynat['genqr_vasb_6'] = 'Lbh zhfg frag <o>%nzbhag% %pheerapl%</o> gb pyvrag <o>%cnlzrag_zrgubq%</o> nppbhag.';
		$ynat['genqr_vasb_6'] = 'Guvf genqr jvyy nhgb qrqhpg <o>%nzbhag% %pheerapl%</o> sebz lbhe nppbhag jnyyrg bapr nccebirq.';
		// $ynat['genqr_vasb_7'] = '<o>VZCBEGNAG!</o> Lbh zhfg svefg cnl gur nzbhag bs genqvat srrf ng lbhe rkcrafr orsber gur pyvrag gb tvir uvf Ovgpbvaf.';
		$ynat['genqr_vasb_7'] = '<o>VZCBEGNAG!</o> Cyrnfr pnershyyl jngpu gur gvzre bs genqr naq nfx rkgen gvzr vs h arrq vg..';
		$ynat['genqr_vasb_8'] = 'Lbh naq pyvrag unir yrff guna <o>%zvahgrf% zvahgrf</o> gb pbzcyrgr guvf genqr. Vs hagvy nsgre gur gvzr lbh be n qrnyre abg pbzcyrgr guvf qrny, vg jvyy nhgbzngvpnyyl or pbzcyrgrq naq ovgpbvaf jvyy or erghearq.';
		$ynat['jevgr_zrffntr_gb_fryyre'] = 'Jevgr zrffntr gb pyvrag.';
		$ynat['ner_lbh_fher_znqr_cnlzrag_2'] = 'Ner lbh fher lbh znqr cnlzrag gb genqre';
		// $ynat['genqr_vasb_9'] = 'Lbh zhfg frag <o>%nzbhag% %pheerapl%</o> gb genqre <o>%cnlzrag_zrgubq%</o> nppbhag.';
		$ynat['genqr_vasb_9'] = 'Guvf genqr jvyy nhgb qrqhpg <o>%nzbhag% %pheerapl%</o> sebz lbhe nppbhag jnyyrg bapr nccebirq ol genqre';
		$ynat['genqr_vasb_10'] = 'Ragre guvf pbqr <o>%cnlzrag_unfu%</o> va genafnpgvba qrfpevcgvba be pbzzrag.';
		// $ynat['genqr_vasb_11'] = '<o>VZCBEGNAG!</o> Lbh zhfg svefg cnl gur nzbhag bs genqvat srrf ng lbhe rkcrafr orsber gur genqre tvir lbh Ovgpbvaf.';
		$ynat['genqr_vasb_11'] = '<o>VZCBEGNAG!</o> Cyrnfr erzvaq gur genqre hfvat bhe snpvyvgl ( Erzvaqre Genqre naq Pung ).';
		$ynat['ner_lbh_fher_eryrnfr_ovgpbvaf_2'] = 'Ner lbh fher lbh jnag gb eryrnfr ovgpbvaf gb pyvrag';
		// $ynat['genqr_vasb_12'] = 'Abj lbh zhfg jnvg pyvrag fraq lbh %nzbhag% %pheerapl% gb lbhe <o>%cnlzrag_zrgubq%</o> nppbhag.';
		$ynat['genqr_vasb_12'] = 'Guvf genqr jvyy nhgb qrqhpg <o>%nzbhag% %pheerapl% + srr</o> sebz lbhe OGP jnyyrg bapr nccebirq';
		$ynat['genqr_vasb_13'] = 'Sbe orggre frphevgl jr erpbzzraq gb pyvrag gb ragre guvf pbqr <o>%cnlzrag_unfu%</o> nf cnlzrag qrfpevcgvba be pbzzrag. Fb lbh pna irevsl guvf pbqr vs pyvrag ragre vg. Vs abg frr vg hfr pung sbez va evtug fvqr.';
		$ynat['genqr_vasb_14'] = '<o>VZCBEGNAG!</o> Cyrnfr pnershyyl jngpu gur gvzre bs genqr naq nfx rkgen gvzr vs h arrq vg.';
		$ynat['punatr_cnffjbeq'] = 'Punatr cnffjbeq';
		$ynat['arj_cnffjbeq'] = 'Arj cnffjbeq';
		$ynat['erfrg_cnffjbeq'] = 'Erfrg cnffjbeq';
		$ynat['zrah_jnyyrg'] = 'Jnyyrg';
		$ynat['zrah_genafnpgvbaf'] = 'Genafnpgvbaf';
		$ynat['zrah_nqiregvfrzragf'] = 'Nqiregvfrzragf';
		$ynat['zrah_genqrf'] = 'Genqrf';
		$ynat['zrah_ersreeny'] = 'Ersreeny';
		$ynat['zrah_cebsvyr'] = 'Cebsvyr';
		$ynat['zrah_frggvatf'] = 'Frggvatf';
		$ynat['zrah_irevsvpngvba'] = 'Nppbhag Irevsvpngvba';
		$ynat['rqvg'] = 'Rqvg';
		$ynat['qrgnvy'] = 'Qrgnvy';
		$ynat['pybfr'] = 'Pybfr';
		$ynat['bcra'] = 'Bcra';
		$ynat['pheerag_nq_glcr_fryy'] = 'Lbhe pheerag nq glcr vf <o>Fryy bggbpbvaf</o>, gungf zrna pyvragf jvyy ohl bggbpbvaf sebz lbh.';
		$ynat['pheerag_nq_glcr_ohl'] = 'Lbhe pheerag nq glcr vf <o>Ohl bggbpbvaf</o>, gungf zrna pyvragf jvyy fryy bggbpbvaf gb lbh.';
		$ynat['qryrgr'] = 'Qryrgr';
		$ynat['ab'] = 'Ab';
		$ynat['lrf'] = 'Lrf';
		$ynat['nq_qryrgrq'] = 'Lbhe nq <o>%nq_vq%</o> jnf qryrgrq';
		$ynat['nq_pybfrq'] = 'Lbhe nq <o>%nq_vq%</o> jnf pybfrq';
		$ynat['nq_bcra'] = 'Lbhe nq <o>%nq_vq%</o> jnf Bcra';
		$ynat['pheerag_cnffjbeq'] = 'Pheerag cnffjbeq';
		$ynat['lbh'] = 'Lbh';
		$ynat['fryy'] = 'Fryy';
		$ynat['ohl'] = 'Ohl';
		$ynat['glcr'] = 'Glcr';
		$ynat['pyvrag'] = 'Pyvrag';
		$ynat['frag'] = 'Frag';
		$ynat['erprvirq'] = 'Erprvirq';
		$ynat['pbasvezngvbaf'] = 'pbasvezngvbaf';
		$ynat['genafnpgvba'] = 'Genafnpgvba';
		$ynat['fraqre'] = 'Fraqre';
		$ynat['erpvcvrag'] = 'Erpvcvrag';
		$ynat['gvzr'] = 'Gvzr';
		$ynat['ni_onynapr'] = 'Ninvynoyr onynapr';
		$ynat['cr_onynapr'] = 'Craqvat onynapr';
		$ynat['qrcbfvg_erprvir_ovgpbvaf'] = 'Qrcbfvg naq erprvir ovgpbvaf';
		$ynat['q_e_ovgpbvaf'] = 'Hfr DE Pbqr be nqqerff oryybj gb qrcbfvg be erprvir ovgpbvaf va lbhe jnyyrg.';
		$ynat['craqvat_genqrf'] = 'Craqvat genqrf';
		$ynat['craqvat_genqrf_vasb'] = 'Lbh jvyy frr lbhe hasvavfurq genqrf fb lbh pna rnfvyl znantr gurz.';
		$ynat['fraq_ovgpbvaf'] = 'Fraq ovgpbvaf';
		$ynat['zvavzny_genafnpgvba_srr'] = 'Zvavzny genafnpgvba srr';
		$ynat['yngrfg_genafnpgvbaf'] = 'Yngrfg genafnpgvbaf';
		$ynat['yngrfg_genafnpgvbaf_vasb'] = 'Urer jvyy fubj lbhe yngrfg genafnpgvbaf bs lbhe jnyyrg.';
		$ynat['arj_genqr_erdhrfg'] = 'Lbh unir arj genqr erdhrfg sbe %ogp_nzbhag% OGP. Pyvpx urer gb gnxr npgvba be ivfvg lbhe jnyyrg cntr.';
		$ynat['lbhe_rznvy_jnf_irevsvrq'] = 'Lbhe rznvy nqqerff jnf irevsvrq!';
		$ynat['rznvy_abg_irevsvrq'] = 'Lbhe rznvy nqqerff fgvyy abg irevsvrq. Cyrnfr hfr ohggba gb fraq irevsvpngvba rznvy gb cebprff nppbhag npgvingvba.';
		$ynat['jr_fraq_pbqr'] = 'Jr frag pbqr gb';
		$ynat['cyrnfr_ragre_pbqr'] = 'Cyrnfr ragre pbqr va sbez orybj.';
		$ynat['qbphzrag_irevsvpngvba'] = 'Qbphzrag irevsvpngvba';
		$ynat['qbphzragf_npprcgrq'] = 'Lbhe qbphzragf ner npprcgrq!';
		$ynat['qbphzragf_njnvgvat_erivrj'] = 'Lbhe qbphzragf ner njnvgvat sbe erivrj.';
		$ynat['fpnaarq_cnffcbeq'] = 'Fpnaarq pbcl be cubgb bs lbhe VQ pneq be cnffcbeg (Npprcg: WCT,WCRT,CAT be CQS)';
		$ynat['fpnaarq_vaibvpr'] = 'N fpnaarq pbcl bs na vaibvpr gb pbasvez lbhe nqqerff (Npprcg: WCT,WCRT,CAT be CQS)';
		$ynat['zbovyr_irevsvpngvba'] = 'Zbovyr irevsvpngvba';
		$ynat['zbovyr_irevsvrq'] = 'Lbhe zbovyr ahzore jnf irevsvrq!';
		$ynat['pyvpx_fzf_fraq'] = 'Pyvpx ba ohggba "Fraq FZF Pbqr" gb fraq irevsvpngvba pbqr gb lbhe ahzore';
		$ynat['ragre_fzf_pbqr'] = 'Ragre FZF pbqr';
		$ynat['lbhe_zbovyr_ahzore'] = 'Lbhe zbovyr ahzore (Rknzcyr: 359889123456, Vapyhqr pbhagel pbqr + zbovyr ahzore)';
		$ynat['erdhver_qbphzrag'] = 'Erdhver hfre gb or irevsvrq gurve qbphzragf orsber znxr genqr erdhrfg';
		$ynat['erdhver_rznvy'] = 'Erdhver hfre gb or irevsvrq gurve rznvy nqqerff orsber znxr genqr erdhrfg';
		$ynat['erdhver_zbovyr'] = 'Erdhver hfre gb or irevsvrq gurve zbovyr ahzore orsber znxr genqr erdhrfg';
		$ynat['guvf_nq_erdhver'] = 'Guvf nq erdhver';
		$ynat['irevsvrq_qbphzragf'] = 'Irevsvrq qbphzragf';
		$ynat['irevsvrq_rznvy_nqqerff'] = 'Irevsvrq rznvy nqqerff';
		$ynat['irevsvrq_zbovyr'] = 'Irevsvrq zbovyr ahzore';
		$ynat['cyrnfr_tb_gb_gno'] = 'Cyrnfr tb gb gno';
		$ynat['nq_erdhver_qbp_irevsl'] = 'Guvf nq erdhver gb irevsl lbhe vqragvsl qbphzragf.';
		$ynat['nq_erdhver_rznvy_irevsl'] = 'Guvf nq erdhver gb irevsl lbhe rznvy nqqerff.';
		$ynat['nq_erdhver_zbovyr_irevsl'] = 'Guvf nq erdhver gb irevsl lbhe zbovyr ahzore.';

		// Ohggbaf
		$ynat['oga_fraq'] = 'Fraq';
		$ynat['oga_fhozvg'] = 'Fhozvg';
		$ynat['oga_fnir_punatrf'] = 'Fnir Punatrf';
		$ynat['oga_fryy'] = 'Fryy';
		$ynat['oga_ohl'] = 'Ohl';
		$ynat['oga_frnepu'] = 'Frnepu';
		$ynat['oga_fraq_zrffntr'] = 'Fraq zrffntr';
		$ynat['oga_ybtva'] = 'Ybtva';
		$ynat['oga_ertvfgre'] = 'Ertvfgre';
		$ynat['oga_lrf_eryrnfr_ovgpbvaf'] = 'Lrf, eryrnfr ovgpbvaf';
		$ynat['oga_ab'] = 'Ab';
		$ynat['oga_eryrnfr_ovgpbvaf'] = 'Eryrnfr ovgpbvaf';
		$ynat['oga_pnapry_genqr'] = 'Pnapry genqr';
		$ynat['oga_ercbeg_genqr'] = 'Ercbeg genqr';
		$ynat['oga_erzvaqre_genqr'] = 'Erzvaqre genqr';
		$ynat['oga_yrnir_srrqonpx'] = 'Yrnir srrqonpx';
		$ynat['oga_lrf_znqr_cnlzrag'] = 'Lrf, v znqr cnlzrag';
		$ynat['oga_cnlzrag_jnf_znqr'] = 'Cnlzrag jnf znqr';
		$ynat['oga_punatr'] = 'Punatr';
		$ynat['oga_erfrg'] = 'Erfrg';
		$ynat['oga_punatr_cnffjbeq'] = 'Punatr cnffjbeq';
		$ynat['oga_cebprff_genqr'] = 'Cebprff genqr';
		$ynat['oga_cerivrj_genqr'] = 'Cerivrj genqr';
		$ynat['oga_fraq_irevsvpngvba_rznvy'] = 'Fraq irevsvpngvba rznvy';
		$ynat['oga_hcybnq_svyrf'] = 'Hcybnq svyrf';
		$ynat['oga_fraq_fzf_pbqr'] = 'Fraq FZF Pbqr';
		$ynat['oga_irevsl_fzf_pbqr'] = 'Irevsl FZF Pbqr';
		$ynat['oga_nqq_ahzore'] = 'Nqq ahzore';
		$ynat['oga_erzvaqre_pnyy'] = 'Pnyy ivn Bcrengbe';
		$ynat['oga_erzvaqre_abgvs'] = 'Chfu Abgvsvpngvba';
		$ynat['oga_erzvaqre_fzf'] = 'Fzf Genqre';

		// Fhpprff
		$ynat['fhpprff_1'] = 'Lbhe zrffntr unf orra frag fhpprffshyyl. V jvyy gel gb nafjre lbh nf fbba nf cbffvoyr.';
		$ynat['fhpprff_2'] = 'Lbhe nppbhag jnf npgvirq fhpprffshyyl.';
		$ynat['fhpprff_3'] = 'Lbhe nq jnf nqqrq naq npgvirq. Lbh pna cerivrj lbhe nq urer:';
		$ynat['fhpprff_4'] = 'Lbhe nppbhag jnf perngrq. Purpx lbhe rznvy sbe n zrffntr gb npgvingr lbhe nppbhag.';
		$ynat['fhpprff_5'] = 'Lbhe ercbeg jnf frag gb Bggbpbva grnz. Ercbeg VQ:';
		$ynat['fhpprff_6'] = 'Gunaxf! Lbhe srrqonpx jnf nqqrq.';
		$ynat['fhpprff_7'] = 'Gunax lbh! Genqr vf Pbzcyrgrq".';
		$ynat['fhpprff_8'] = 'Gunax lbh! Abj jnvgvat hfre gb eryrnfr ovgpbvaf.';
		$ynat['fhpprff_9'] = 'Gunax lbh! Abj jnvgvat genqre gb eryrnfr ovgpbvaf.';
		$ynat['fhpprff_10'] = 'Lbhe cnffjbeq jnf punatrq fhpprffshyyl.';
		$ynat['fhpprff_11'] = 'Rznvy jvgu vafgehpgvbaf gb erfrg cnffjbeq jnf frag. Cyrnfr purpx lbhe vaobk.';
		$ynat['fhpprff_12'] = 'Lbhe punatrf jnf fnirq fhpprffshyyl.';
		$ynat['fhpprff_13'] = 'Lbhe cnffjbeq jnf punatrq.';
		$ynat['fhpprff_14'] = 'Nzbhag <o>%bevt_nzbhag%</o> jnf frag gb <o>%erpvcvrag%</o>. Erprvirq Nzbhag <o>(%nzbhag%)</o> Genafnpgvba Srr <o>(%genafnpgvba_srr%)</o>';
		$ynat['fhpprff_15'] = 'Jr frag lbh irevsvpngvba rznvy. Purpx lbhe vaobk be fcnz sbyqre.';
		$ynat['fhpprff_16'] = 'Lbhe svyrf jnf hcybnqrq! Jvyy or erivrjq fbba nf cbffvoyr.';
		$ynat['fhpprff_17'] = 'Lbhe zbovyr ahzore jnf irevsvrq!';
		$ynat['fhpprff_18'] = 'Lbhe zbovyr ahzore jnf nqqrq. Abj lbh pna irevsl vg ivn sbez orybj.';
		$ynat['fhpprff_19'] = 'Lbhe Nqqerff jnf punatrq fhpprffshyyl.';

		// Vasb
		$ynat['vasb_1'] = 'Genqre vf abg bayvar abj. %npg%. Gungf zrna vs lbh znxr genqr erdhrfg znlor jvyy gnxr zber guna %cebprff_gvzr% zvahgrf.';
		$ynat['vasb_2'] = 'Lbh pnapry guvf genqr.';
		$ynat['vasb_3'] = 'Lbhe genqr jnf pnapryrq.';
		$ynat['vasb_4'] = 'Ner lbh fher lbh jnag gb qryrgr nqiregvfrzrag';
		$ynat['vasb_5'] = 'Fgvyy ab unir nqiregvfrzragf.';
		$ynat['vasb_6'] = 'Fgvyy ab unir genqrf.';
		$ynat['vasb_7'] = 'Fgvyy ab unir genafnpgvbaf gb lbhe jnyyrg.';
		$ynat['vasb_8'] = 'Fgvyy ab unir arj genqr erdhrfgf.';
		$ynat['vasb_9'] = 'Fgvyy ab unir genafnpgvbaf gb lbhe jnyyrg.';
		$ynat['vasb_10'] = 'Fgvyy ab unir Ersreeny.';
		$ynat['vasb_11'] = 'Lbhe erdhrfg jnf fraq fhpprffshyyl.';
		$ynat['vasb_12'] = 'Lbhe chfu abgvsvpngvba jnf fraq fhpprffshyyl.';
		$ynat['vasb_13'] = 'Lbhe Pnyy jnf fraq fhpprffshyyl.';
		$ynat['vasb_14'] = 'Lbhe Fzf jnf fraq fhpprffshyyl.';
		$ynat['vasb_15'] = 'Ner lbh fher lbh jnag gb Pybfr nqiregvfrzrag.';
		$ynat['vasb_16'] = 'Ner lbh fher lbh jnag gb Bcra nqiregvfrzrag.';
		$ynat['vasb_17'] = 'Rkgengvzr jnf Nccebirq.';

		// Reebe
		$ynat['reebe_1'] = 'Cyrnfr ragre lbhe nzbhag gb pbagvahr genqr.';
		$ynat['reebe_2'] = 'Cyrnfr ragre lbhe cnlzrag qngn.';
		$ynat['reebe_3'] = 'Zvavzny nzbhag sbe genqr vf %zva_nzbhag% BGP.';
		$ynat['reebe_4'] = 'Znkvzhz nzbhag sbe genqr vf %znk_nzbhag% BGP.';
		//  Bayl kkkk OGP . Pyvpx urer gb qrcbfvg ovgpbvaf
		// $ynat['reebe_6'] = 'Lbh pnag ragre zber guna %hfreonynapr% OGP. <n uers="'.onfr_hey().'genafnpgvba/ogp">Pyvpx urer</n> gb qrcbfvg ovgpbvaf.';
		$ynat['reebe_6'] = 'Lbh unir yvzvgrq shaq gb qb gur genafnpgvba. Bayl %hfreonynapr% OGP ninvynoyr. <n uers="'.onfr_hey().'genafnpgvba/ogp">Pyvpx urer</n> gb qrcbfvg ovgpbvaf.';
		// $ynat['reebe_50'] = 'Lbh pnag ragre zber guna %hfreonynapr% BGP. <n uers="'.onfr_hey().'genafnpgvba/bgp">Pyvpx urer</n> gb qrcbfvg bggbpbvaf.';
		$ynat['reebe_50'] = 'Lbh unir yvzvgrq shaq gb qb gur genafnpgvba. Bayl %hfreonynapr% BGP ninvynoyr. <n uers="'.onfr_hey().'genafnpgvba/bgp">Pyvpx urer</n> gb qrcbfvg bggbpbvaf.';
		$ynat['reebe_5'] = 'Genqre (%hfreanzr%) abg unir rabhtu ovgpbvaf va fgbpx. Lbh pna ragre na nzbhag %nzbhag% OGP be yrff.';
		$ynat['reebe_51'] = 'Genqre (%hfreanzr%) abg unir rabhtu bggbpbvaf va fgbpx. Lbh pna ragre na nzbhag %nzbhag% BGP be yrff.';
		$ynat['reebe_7'] = 'Nyy svryqf ner erdhverq.';
		$ynat['reebe_8'] = 'Cyrnfr ragre inyvq rznvy nqqerff.';
		$ynat['reebe_9'] = 'Reebe jvgu rznvy frag. Cyrnfr gel ntnva yngre.';
		$ynat['reebe_10'] = 'Cyrnfr ragre lbhe rznvy nqqerff.';
		$ynat['reebe_11'] = 'Cyrnfr ragre lbhe cnffjbeq.';
		$ynat['reebe_12'] = 'Jebat rznvy nqqerff be cnffjbeq.';
		$ynat['reebe_13'] = 'Lbhe nppbhag jnf oybpxrq. Cyrnfr pbagnpg jvgu nqzvavfgengbe.';
		$ynat['reebe_14'] = 'Ragre Ovgpbva cevpr jvgu ahzoref.';
		$ynat['reebe_15'] = 'Ragre zvavzny genqr nzbhag jvgu ahzoref.';
		$ynat['reebe_16'] = 'Ragre znkvzhz genqr nzbhag jvgu ahzoref.';
		$ynat['reebe_16_2'] = 'Ragre znkvzhz genqr nzbhag zhfg or terngre be rdhny guna zvavzny genqr nzbhag.';
		$ynat['reebe_17'] = 'Ragre genqr cebprff gvzr jvgu ahzoref.';
		$ynat['reebe_18'] = 'Cyrnfr ragre inyvq hfreanzr.';
		$ynat['reebe_19'] = 'Guvf hfreanzr vf nyernql hfrq. Cyrnfr pubbfr nabgure.';
		$ynat['reebe_20'] = 'Hfreanzr zhfg or zber guna 6 punenpgref.';
		$ynat['reebe_21'] = 'Cyrnfr ragre inyvq rznvy nqqerff.';
		$ynat['reebe_22'] = 'Guvf rznvy nqqerff vf nyernql hfrq. Cyrnfr pubbfr nabgure.';
		$ynat['reebe_23'] = 'Cnffjbeq zhfg or zber guna 8 punenpgref.';
		$ynat['reebe_24'] = 'Cnffjbeq qbrf abg zngpu jvgu cnffjbeq sbe pbasvezngvba.';
		$ynat['reebe_25'] = 'Frperg CVA zhfg or zber guna 4 punenpgref.';
		// $ynat['reebe_26'] = 'Cyrnfr ragre jung lbh jnag gb gryy '.$frggvatf['anzr'].' grnz.';
		$ynat['reebe_27'] = 'Cyrnfr pubbfr srrqonpx glcr.';
		$ynat['reebe_28'] = 'Cyrnfr ragre lbhe srrqonpx.';
		$ynat['reebe_29'] = 'Cyrnfr ragre arj cnffjbeq.';
		$ynat['reebe_30'] = 'Cnffjbeq zhfg or zber guna 8 punenpgref.';
		$ynat['reebe_31'] = 'Cnffjbeq qbrf abg zngpu jvgu cnffjbeq sbe pbasvezngvba.';
		$ynat['reebe_32'] = 'Ab fhpu hfre jvgu guvf rznvy nqqerff.';
		$ynat['reebe_33'] = 'Pheerag cnffjbeq qbrf abg zngpu.';
		$ynat['reebe_34'] = 'Arj cnffjbeqf qbrf abg zngpu.';
		$ynat['reebe_35'] = 'Cyrnfr ragre inyvq nzbhag.';
		$ynat['reebe_36'] = 'Zvavzny nzbhag sbe jvguqenjny vf %zva_nzbhag% OGP.';
		$ynat['reebe_48'] = 'Zvavzny nzbhag sbe jvguqenjny vf %zva_nzbhag% BGP.';
		$ynat['reebe_37'] = 'Cyrnfr ragre erpvcvrag nqqerff.';
		$ynat['reebe_38'] = 'Zvavzny nzbhag sbe jvguqenjny vf %zva_nzbhag% OGP.';
		$ynat['reebe_49'] = 'Zvavzny nzbhag sbe jvguqenjny vf %zva_nzbhag% BGP.';
		$ynat['reebe_39'] = 'Reebe jvgu fraqvat rznvy. Cyrnfr gel ntnva yngre.';
		$ynat['reebe_40'] = 'Cyrnfr fryrpg svyrf.';
		$ynat['reebe_41'] = 'Nyybjrq svyrf sbe hcybnq vf WCT,WCRT,CAT naq CQS.';
		$ynat['reebe_42'] = 'Cyrnfr ragre FZF pbqr.';
		$ynat['reebe_43'] = 'Jebat FZF pbqr. Cyrnfr erfraq arj.';
		$ynat['reebe_44'] = 'Cyrnfr ragre lbhe zbovyr ahzore.';
		$ynat['reebe_45'] = 'Cyrnfr ragre inyvq zbovyr ahzore.';

		$ynat['erprvirq_nzbhag'] = 'Erprvirq Nzbhag';
		$ynat['fraq_nzbhag'] = 'Fraq Nzbhag';
		$ynat['gbgny_nzbhag'] = 'Gbgny Nzbhag';
		$ynat['genafnpgvba_srr'] = 'Genafnpgvba Srr';
		$ynat['rfgvzngrq_genafnpgvba_srr'] = 'Rfgvzngrq Genafnpgvba Srr';
		$ynat['oga_trarengr_nqqerff'] = 'Trarengr Arj Nqqerff';
		$ynat['guvf_npgvba_pna_or_haqb_2'] = 'Guvf npgvba vg pna abg or pnapryrq jura zrg bapr.';
		$ynat['ner_lbh_fher_trarengr_nqqerff'] =  'Ner lbh fher lbh jnag gb trarengr arj nqqerff';
		$ynat['oga_lrf_trarengr_nqqerff'] = 'Lrf, Trarengr arj nqqerff';

		$ynat['fvtahc_qngr'] = 'Ertvfgre Qngr';
		$ynat['fhofpevor_qnvylcevpr'] = 'Fhofpevor Qnvyl Cevpr';
		$ynat['oga_hcqngr_cebsvyr'] = 'Hcqngr Cebsvyr';

		$ynat['oga_rkgengvzr'] = 'Rkgen Gvzr';
		$ynat['oga_rkgengvzr_nccebir'] = 'Rkgen Gvzr Nccebir';
		$ynat['ner_lbh_fher_rkgengvzr'] = 'Ner lbh fher lbh jnag gb erdhrfg Rkgen Gvzr gb pyvrag';
		$ynat['ner_lbh_fher_rkgengvzr_nccebir'] = 'Ner lbh fher lbh jnag gb Nccebir Rkgen Gvzr sebz genqre';
		$ynat['oga_lrf_rkgengvzr'] = 'Lrf, erdhrfg rkgen gvzr';
		$ynat['oga_lrf_rkgengvzr_nccebir'] = 'Lrf, Nccebir rkgen gvzr';
		
		
		erghea $ynat;
	}
}
?>";
eval(simple_decrypt($encoded, __FILE__));
?>