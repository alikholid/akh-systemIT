<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "";
eval(simple_decrypt($encoded, __FILE__));
?>