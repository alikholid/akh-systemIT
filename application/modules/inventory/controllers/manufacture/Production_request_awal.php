<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc vs ( ! qrsvarq('ONFRCNGU')) rkvg('Ab qverpg fpevcg npprff nyybjrq');
Pynff Cebqhpgvba_erdhrfg rkgraqf PV_Pbagebyyre { 
	shapgvba __pbafgehpg(){ 		cnerag::__pbafgehpg(); 				$guvf->qngn_erdhrfg = $_ERDHRFG;				$zbqhyr = $guvf->ebhgre->zbqhyr;		$qverpgbel = $guvf->ebhgre->qverpgbel;		$pynff = $guvf->ebhgre->pynff;		$zrgubq = $guvf->ebhgre->zrgubq;		$qverpgbel = gevz(fge_ercynpr('../zbqhyrf/'.$zbqhyr ,'',fge_ercynpr('/pbagebyyref/','',$qverpgbel)),'/');				$guvf->zbqhyr = $zbqhyr;		vs(gevz($qverpgbel) != ''){			$guvf->qverpgbel = $qverpgbel;		} ryfr {			$guvf->qverpgbel = '0';			$guvf->qverpgbel2 = '';		}		$guvf->pynff = $pynff;		$guvf->zrgubq = $zrgubq;	}		shapgvba jbex_beqre_erdhrfg_gnoyr() {		$ivrj = 'ivrj_jbex_beqre_erdhrfg';		$trg_svryq = $guvf->rpp_yvoenel->trg_svryq($ivrj);				$trg_svryq['e1']['uvqqra'] = gehr;		$trg_svryq['e11']['uvqqra'] = gehr;		$trg_svryq['e12']['uvqqra'] = gehr;		$trg_svryq['e13']['uvqqra'] = gehr;		erghea $trg_svryq;	}		shapgvba jbex_beqre_erdhrfg_yvfg_gnoyr() {		$ivrj = 'ivrj_jbex_beqre_erdhrfg_yvfg';		$trg_svryq = $guvf->rpp_yvoenel->trg_svryq($ivrj);				$trg_svryq['e1']['uvqqra'] = gehr;		$trg_svryq['e2']['uvqqra'] = gehr;		// $trg_svryq['e2']['uvqqra'] = gehr;		// $trg_svryq['e9']['uvqqra'] = gehr;		// $trg_svryq['e10']['uvqqra'] = gehr;		// $trg_svryq['e11']['uvqqra'] = gehr;						erghea $trg_svryq;	}		shapgvba jbex_beqre_erdhrfg_obz_gnoyr() {		$ivrj = 'ivrj_jbex_beqre_erdhrfg_obz';		$trg_svryq = $guvf->rpp_yvoenel->trg_svryq($ivrj);				erghea $trg_svryq;	}		shapgvba vaqrk(){		$guvf->ybnq->zbqry('znva');		$pbzcbarag['ybnqynlbhg'] = gehr;		$pbzcbarag['ivrj_ybnq'] = 'znahsnpgher/cebqhpgvba_erdhrfg/ivrj';		$pbzcbarag['ivrj_ybnq_sbez'] = 'znahsnpgher/cebqhpgvba_erdhrfg/sbez';		$pbzcbarag['ybnq_wf'][] = 'znahsnpgher/cebqhpgvba_erdhrfg/ivrj';		$pbzcbarag['ybnq_wf'][] = 'znahsnpgher/cebqhpgvba_erdhrfg/sbez';				$pbzcbarag['cntr_gvgyr'] = "Cebqhpgvba Erdhrfg";				$qnfuobneq_gnoyr = neenl();				$ani_ohggba = neenl();		$ani_ohggba[] = neenl('zrgubq_vq' => 500,'gvgyr' => 'Nqq', 'vpba' => 'sn sn-cyhf', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_nqq');		$ani_ohggba[] = neenl('zrgubq_vq' => 501,'gvgyr' => 'Rqvg', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_rqvg');		$ani_ohggba[] = neenl('zrgubq_vq' => 504,'gvgyr' => 'Nccebir', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_nccebir');		$ani_ohggba[] = neenl('zrgubq_vq' => 503,'gvgyr' => 'Qryrgr', 'vpba' => 'sn sn-genfu-b', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_qryrgr');		$ani_ohggba[] = neenl('zrgubq_vq' => 772,'gvgyr' => 'Pnapry Nccebir', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_pnapry_nccebir');		$ani_ohggba[] = neenl('zrgubq_vq' => 803,'gvgyr' => 'Cevag', 'vpba' => 'sn sn-cevag', 'ybnq' => 'znahsnpgher/cebqhpgvba_erdhrfg/shapgvba_cevag');      		$svryq = $guvf->jbex_beqre_erdhrfg_gnoyr();		// $svryq_qrgnvy = $guvf->jbex_beqre_erdhrfg_qrgnvy_gnoyr();		$svryq_qrgnvy_gbgny = $guvf->jbex_beqre_erdhrfg_yvfg_gnoyr();				$qnfuobneq_gnoyr['ani_ohggba'] = $ani_ohggba;		$qnfuobneq_gnoyr['svryq'] = $svryq;		// $qnfuobneq_gnoyr['svryq_qrgnvy'] = $svryq_qrgnvy;		// $qnfuobneq_gnoyr['svryq_qrgnvy_ybnqqngn'] = 'ybnqqngn_qrgnvy';		$qnfuobneq_gnoyr['svryq_qrgnvy_gbgny'] = $svryq_qrgnvy_gbgny;		$qnfuobneq_gnoyr['svryq_qrgnvy_gbgny_ybnqqngn'] = 'ybnqqngn_qrgnvy_gbgny';				$pbzcbarag['qnfuobneq_gnoyr'] = $qnfuobneq_gnoyr;				$guvf->nhguragvpngvba->nwnkynlbhg($pbzcbarag);	}		shapgvba ybnqqngn() {		$guvf->nhguragvpngvba->cynvaynlbhg();				$ivrj = 'ivrj_jbex_beqre_erdhrfg';		$svryq = $guvf->jbex_beqre_erdhrfg_gnoyr();				$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe"; 		$ybnqqngn = $guvf->rpp_yvoenel->trg_svryq_qngn($ivrj,$svryq);					rpub $ybnqqngn;	}			shapgvba nccebir(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($jbex_beqre_erdhrfg_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_nccebir");				$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba pnapry_nccebir(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($jbex_beqre_erdhrfg_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_pnapry_nccebir");				$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}			shapgvba qryrgr(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($jbex_beqre_erdhrfg_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_qryrgr");				$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba cbfg_nqq_rqvg(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();										$jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : '';		$jbex_beqre_erdhrfg_ab = vffrg($_CBFG['jbex_beqre_erdhrfg_ab']) ? $_CBFG['jbex_beqre_erdhrfg_ab'] : '';		$jbex_beqre_erdhrfg_qngr = vffrg($_CBFG['jbex_beqre_erdhrfg_qngr']) ? $_CBFG['jbex_beqre_erdhrfg_qngr'] : '';		$jbex_beqre_cyna_vq = vffrg($_CBFG['jbex_beqre_cyna_vq']) ? $_CBFG['jbex_beqre_cyna_vq'] : '';		$jbex_cebprff_vq = vffrg($_CBFG['jbex_cebprff_vq']) ? $_CBFG['jbex_cebprff_vq'] : '';						$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){			vs($jbex_beqre_erdhrfg_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_rqvg");				$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);			} ryfr {				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_nqq");			}						$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_ab',$jbex_beqre_erdhrfg_ab);			$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_qngr',$jbex_beqre_erdhrfg_qngr);			$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_cyna_vq',$jbex_beqre_cyna_vq);			$guvf->ecp_freivpr->nqqSvryq('jbex_cebprff_vq',$jbex_cebprff_vq);									$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();									$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$qngn = wfba_qrpbqr($erfhyg['qngn'],GEHR);							$jbex_beqre_erdhrfg_vq = $qngn['jbex_beqre_erdhrfg_vq'];														$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];							$erghea['jbex_beqre_erdhrfg_vq'] = $jbex_beqre_erdhrfg_vq;						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba ybnqqngn_obz(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$erghea = neenl();				$svryq = $guvf->jbex_beqre_erdhrfg_obz_gnoyr();				$obz_vq = vffrg($_CBFG['obz_vq']) ? vf_ahzrevp($_CBFG['obz_vq']) ? $_CBFG['obz_vq'] : -1: -1;		$jbex_beqre_qrgnvy_vq = vffrg($_CBFG['jbex_beqre_qrgnvy_vq']) ? vf_ahzrevp($_CBFG['jbex_beqre_qrgnvy_vq']) ? $_CBFG['jbex_beqre_qrgnvy_vq'] : -1: -1;		$dhnagvgl_erdhrfg = vffrg($_CBFG['dhnagvgl_erdhrfg']) ? vf_ahzrevp($_CBFG['dhnagvgl_erdhrfg']) ? $_CBFG['dhnagvgl_erdhrfg'] : 0: 0;				$cntr = vffrg($_CBFG['cntr'])?$_CBFG['cntr']:1; // trg gur erdhrfgrq cntr         $ebjf = vffrg($_CBFG['ebjf'])?$_CBFG['ebjf']:10; // trg ubj znal ebjf jr jnag gb unir vagb gur tevq         $fvqk = vffrg($_CBFG['fvqk'])?$_CBFG['fvqk']:'e1'; // trg vaqrk ebj - v.r. hfre pyvpx gb fbeg         $fbeq = vffrg($_CBFG['fbeq'])?$_CBFG['fbeq']:'nfp'; // trg gur qverpgvba 		$frnepu = gehr; 		$svygreEhyrf =  vffrg($_CBFG['svygref'])?$_CBFG['svygref']:snyfr;				$qrpbqr_svygreEhyrf = wfba_qrpbqr($svygreEhyrf,gehr);				vs(vffrg($qrpbqr_svygreEhyrf)){			vs(vffrg($qrpbqr_svygreEhyrf['ehyrf'])){				$ehyrf = $qrpbqr_svygreEhyrf['ehyrf'];			} ryfr {				$ehyrf = neenl();			}		} ryfr {			$qrpbqr_svygreEhyrf['tebhcBc'] = 'NAQ';			$ehyrf = neenl();		}						$rkgen_cnenz = neenl();		$rkgen_cnenz['jurer']['0']['svryq'] = 'e7';		$rkgen_cnenz['jurer']['0']['qngn'] = $jbex_beqre_qrgnvy_vq;		$rkgen_cnenz['jurer']['1']['svryq'] = 'e2';		$rkgen_cnenz['jurer']['1']['qngn'] = $obz_vq;						vs(vffrg($rkgen_cnenz['jurer'])){			sbernpu($rkgen_cnenz['jurer'] nf $qg_jurer){				$unir_xrl = snyfr;								sbernpu($ehyrf nf $xrl => $inyhr){					vs($inyhr['svryq'] == $qg_jurer['svryq']){						$unir_xrl = gehr;						$ehyrf[$xrl]['qngn'] = $qg_jurer['qngn'];						oernx;					}				}								vs(!$unir_xrl){					$qngn_jurer = neenl();					$qngn_jurer['svryq'] = $qg_jurer['svryq'];					$qngn_jurer['bc'] = 'rd';					$qngn_jurer['qngn'] = $qg_jurer['qngn'];					$ehyrf[] = $qngn_jurer;				}			}		}				$qrpbqr_svygreEhyrf['ehyrf'] = $ehyrf;		$svygreEhyrf = wfba_rapbqr($qrpbqr_svygreEhyrf);				$yvzvg =  $ebjf;		$bssfrg =  $ebjf * ($cntr - 1);				$beqre = vffrg($_ERDHRFG['beqre']) ? $_ERDHRFG['beqre'] : neenl();				vs($fbeq == 'nfp'){			$fbeq = 1;		} ryfr {			$fbeq = 2;		}				$fbeg =	$fvqk. '='.$fbeq;								$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe";							$fc = "qob.fc_rpp_ybnq_ivrj_qngn";			$guvf->ecp_freivpr_cbegny->frgFC($fc);		$guvf->ecp_freivpr_cbegny->nqqSvryq('ivrj','ivrj_jbex_beqre_erdhrfg_obz');		$guvf->ecp_freivpr_cbegny->nqqSvryq('fbeg',$fbeg);		$guvf->ecp_freivpr_cbegny->nqqSvryq('yvzvg',$yvzvg);		$guvf->ecp_freivpr_cbegny->nqqSvryq('bssfrg',$bssfrg);				$guvf->ecp_freivpr_cbegny->frgJurer($frnepu,$svygreEhyrf,$svryq);				$erfhyg = $guvf->ecp_freivpr_cbegny->erfhygWFBA();			$qngn_erfhyg = wfba_qrpbqr($erfhyg['qngn'],gehr);				vs(vffrg($qngn_erfhyg['qrgnvy']['erfhyg_pbhag'])){			$erpbeqf = $qngn_erfhyg['qrgnvy']['erfhyg_pbhag'];			$gbgny = prvy($qngn_erfhyg['qrgnvy']['erfhyg_pbhag'] / $yvzvg);		} ryfr {			$erpbeqf = 0;			$gbgny = 0;		}				$erfcbapr = arj fgqpynff();		$erfcbapr->cntr = $cntr;		$erfcbapr->erpbeqf = $erpbeqf;		$erfcbapr->gbgny = $gbgny;		$v=0; 		vs($qngn_erfhyg){			vs(vffrg($qngn_erfhyg['kebj'])){				sbernpu($qngn_erfhyg['kebj'] nf $xrl=>$inyhr){					sbernpu ($inyhr nf $x => $i) {						vs($x == 'e5'){							vs(vffrg($inyhr['e8'])){								$erfcbapr->ebjf[$v][$x] = ($i * $dhnagvgl_erdhrfg) * (1 + ($inyhr['e8']/100));							} ryfr {								$erfcbapr->ebjf[$v][$x] = ($i * $dhnagvgl_erdhrfg);							}													} ryfr {							$erfcbapr->ebjf[$v][$x] = $i;						}					} 															$v++;				}			}		}					$erghea = wfba_rapbqr($erfcbapr);					rpub $erghea;	}		shapgvba ybnqqngn_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();				$jbex_beqre_erdhrfg_vq = vffrg($_ERDHRFG['jbex_beqre_erdhrfg_vq']) ? vf_ahzrevp($_ERDHRFG['jbex_beqre_erdhrfg_vq']) ? $_ERDHRFG['jbex_beqre_erdhrfg_vq']  : -1 : -1;		$zrgubqvq = vffrg($_ERDHRFG['zrgubqvq']) ? vf_ahzrevp($_ERDHRFG['zrgubqvq']) ? $_ERDHRFG['zrgubqvq']  : -1 : -1;				$ivrj = 'ivrj_jbex_beqre_erdhrfg_qrgnvy';		$svryq = $guvf->jbex_beqre_erdhrfg_qrgnvy_gnoyr();				$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				$rkgen_cnenz = neenl();		$rkgen_cnenz['jurer']['0']['svryq'] = 'e2';		$rkgen_cnenz['jurer']['0']['qngn'] = $jbex_beqre_erdhrfg_vq;		$rkgen_cnenz['zrgubqvq'] = $zrgubqvq;				$ybnqqngn = $guvf->rpp_yvoenel->trg_svryq_qngn($ivrj,$svryq,$rkgen_cnenz);					rpub $ybnqqngn;	}			shapgvba cbfg_nqq_rqvg_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();				$jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : snyfr;		$jbex_beqre_qrgnvy_vq = vffrg($_CBFG['jbex_beqre_qrgnvy_vq']) ? $_CBFG['jbex_beqre_qrgnvy_vq'] : snyfr;		$vgrz_vq = vffrg($_CBFG['vgrz_vq']) ? $_CBFG['vgrz_vq'] : '';		$obz_vq = vffrg($_CBFG['obz_vq']) ? $_CBFG['obz_vq'] : '';		$dhnagvgl_erdhrfg = vffrg($_CBFG['dhnagvgl_erdhrfg']) ? $_CBFG['dhnagvgl_erdhrfg'] : '';		$erdhrfg_yvfg = vffrg($_CBFG['erdhrfg_yvfg']) ? $_CBFG['erdhrfg_yvfg'] : neenl();		$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_yvfg_fhozvg");						$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);			$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_qrgnvy_vq',$jbex_beqre_qrgnvy_vq);			$guvf->ecp_freivpr->nqqSvryq('vgrz_vq',$vgrz_vq);			$guvf->ecp_freivpr->nqqSvryq('obz_vq',$obz_vq);			$guvf->ecp_freivpr->nqqSvryq('dhnagvgl_erdhrfg',$dhnagvgl_erdhrfg);						sbernpu($erdhrfg_yvfg nf $qg_qngn){				$guvf->ecp_freivpr->nqqNggevohgrPuvyq('qg' ,$qg_qngn);			}						$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){														$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];												}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba ybnqqngn_qrgnvy_gbgny(){		$guvf->nhguragvpngvba->cynvaynlbhg();				$jbex_beqre_erdhrfg_vq = vffrg($_ERDHRFG['jbex_beqre_erdhrfg_vq']) ? vf_ahzrevp($_ERDHRFG['jbex_beqre_erdhrfg_vq']) ? $_ERDHRFG['jbex_beqre_erdhrfg_vq']  : -1 : -1;		$zrgubqvq = vffrg($_ERDHRFG['zrgubqvq']) ? vf_ahzrevp($_ERDHRFG['zrgubqvq']) ? $_ERDHRFG['zrgubqvq']  : -1 : -1;				$ivrj = 'ivrj_jbex_beqre_erdhrfg_yvfg';		$svryq = $guvf->jbex_beqre_erdhrfg_yvfg_gnoyr();				$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				$rkgen_cnenz = neenl();		$rkgen_cnenz['jurer']['0']['svryq'] = 'e2';		$rkgen_cnenz['jurer']['0']['qngn'] = $jbex_beqre_erdhrfg_vq;		$rkgen_cnenz['zrgubqvq'] = $zrgubqvq;				$ybnqqngn = $guvf->rpp_yvoenel->trg_svryq_qngn($ivrj,$svryq,$rkgen_cnenz);					rpub $ybnqqngn;	}		shapgvba qryrgr_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				$jbex_beqre_erdhrfg_qrgnvy_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_qrgnvy_vq']) ? $_CBFG['jbex_beqre_erdhrfg_qrgnvy_vq'] : '';		$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				vs(pbhag($_CBFG) > 0){						vs($jbex_beqre_erdhrfg_qrgnvy_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_jbex_beqre_erdhrfg_qrgnvy_qryrgr");				$guvf->ecp_freivpr->nqqSvryq('jbex_beqre_erdhrfg_qrgnvy_vq',$jbex_beqre_erdhrfg_qrgnvy_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}      shapgvba cevag_cebqhpgvba_erdhrfg()   {      $jbex_beqre_erdhrfg_vq = vffrg($_CBFG['jbex_beqre_erdhrfg_vq']) ? $_CBFG['jbex_beqre_erdhrfg_vq'] : snyfr;      // $xrcnqn = vffrg($_CBFG['xrcnqn']) ? $_CBFG['xrcnqn'] : snyfr;      // $ab_jf = vffrg($_CBFG['ab_jf']) ? $_CBFG['ab_jf'] : snyfr;      // $xrgrenatna = vffrg($_CBFG['xrgrenatna']) ? $_CBFG['xrgrenatna'] : snyfr;      $sbezng = vffrg($_CBFG['sbezng']) ? $_CBFG['sbezng'] : 'kyfk';      $hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');           $fc = "qob.fc_ecg_fyvc_cebqhpgvba_erdhrfg";           $guvf->ecp_freivpr_cbegny->frgFC(neenl("fc"=>$fc,"zbqr"=>"2","qroht"=>"1"));      $guvf->ecp_freivpr_cbegny->nqqSvryq('jbex_beqre_erdhrfg_vq',$jbex_beqre_erdhrfg_vq);      // $guvf->ecp_freivpr_cbegny->nqqSvryq('xrcnqn',$xrcnqn);      // $guvf->ecp_freivpr_cbegny->nqqSvryq('ab_jf',$ab_jf);      // $guvf->ecp_freivpr_cbegny->nqqSvryq('xrgrenatna',$xrgrenatna);      $guvf->ecp_freivpr_cbegny->nqqSvryq('sbezng',$sbezng);      $guvf->ecp_freivpr_cbegny->nqqSvryq('grzc_sbyqre',flf_trg_grzc_qve());      $guvf->ecp_freivpr_cbegny->nqqSvryq('fbeg','qg_zfg_vgrz.vgrz_pbqr nfp');              $erfhyg = $guvf->ecp_freivpr_cbegny->erfhygCevag2();      rpub wfba_rapbqr($erfhyg);   }
}?>";
eval(simple_decrypt($encoded, __FILE__));
?>