<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');Class Purchase_order extends CI_Controller { 	function __construct()   { 		parent::__construct(); 				$this->data_request = $_REQUEST;				$module = $this->router->module;		$directory = $this->router->directory;		$class = $this->router->class;		$method = $this->router->method;		$directory = trim(str_replace('../modules/'.$module ,'',str_replace('/controllers/','',$directory)),'/');				$this->module = $module;		if(trim($directory) != ''){			$this->directory = $directory;		} else {			$this->directory = '0';			$this->directory2 = '';		}		$this->class = $class;		$this->method = $method;	}		function purchase_order_table() {		$view = 'view_purchase_order';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		// $get_field['r13']['hidden'] = true;		$get_field['r14']['hidden'] = true;		$get_field['r15']['hidden'] = true;		$get_field['r16']['hidden'] = true;		$get_field['r17']['hidden'] = true;		$get_field['r18']['hidden'] = true;		$get_field['r19']['hidden'] = true;		$get_field['r20']['hidden'] = true;		$get_field['r21']['hidden'] = true;		$get_field['r22']['hidden'] = true;		$get_field['r23']['hidden'] = true;		$get_field['r24']['hidden'] = true;		$get_field['r25']['hidden'] = true;		$get_field['r26']['hidden'] = true;		$get_field['r27']['hidden'] = true;		$get_field['r28']['hidden'] = true;		$get_field['r29']['hidden'] = true;		$get_field['r30']['hidden'] = true;      		$get_field['r2']['width'] = 200;      // $get_field['r3']['width'] = 170;      // $get_field['r4']['width'] = 170;      // $get_field['r5']['width'] = 170;      // $get_field['r6']['width'] = 210;      // $get_field['r9']['width'] = 170;				return $get_field;	}		function purchase_order_detail_table() {		$view = 'view_purchase_order_detail';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;				$get_field['r14']['hidden'] = true;		$get_field['r15']['hidden'] = true;		$get_field['r16']['hidden'] = true;		$get_field['r17']['hidden'] = true;		$get_field['r18']['hidden'] = true;		$get_field['r19']['hidden'] = true;		// $get_field['r20']['hidden'] = true;		// $get_field['r21']['hidden'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations';		$get_field['act']['width'] = 300;				return $get_field;	}		function purchase_order_request_table() {		$view = 'view_purchase_request_item';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;		$get_field['r18']['hidden'] = true;		$get_field['r19']['hidden'] = true;		$get_field['r20']['hidden'] = true;		$get_field['r21']['hidden'] = true;		$get_field['r22']['hidden'] = true;				$get_field['r13']['title'] = "Unit";				$get_field['r12']['editable'] = true;		$get_field['r13']['editable'] = true;		$get_field['r13']['edittype'] = 'select';		$get_field['r13']['formatter'] = 'select';				$array_test = array();		$array_test['value'] = $this->ecc_library->load_uom();				$get_field['r13']['editoptions'] = $array_test;				$get_field['r14']['editable'] = true;		$get_field['r15']['editable'] = true;		$get_field['r16']['editable'] = true;		$get_field['r17']['editable'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations2';		$get_field['act']['width'] = 300;				return $get_field;	}		function index() {		$this->load->model('main');		$component['loadlayout'] = true;		$component['view_load'] = 'purchase_order/view';		$component['view_load_form'] = 'purchase_order/form';		$component['load_js'][] = 'purchase_order/view';		$component['load_js'][] = 'purchase_order/form';				$component['page_title'] = "Purchase Order";				$dashboard_table = array();				$nav_button = array();		$nav_button[] = array('method_id' => 141,'title' => 'Add', 'icon' => 'fa fa-plus', 'load' => 'purchase_order/function_add');		$nav_button[] = array('method_id' => 149,'title' => 'Add From Request', 'icon' => 'fa fa-plus', 'load' => 'purchase_order/function_add_from_request');		$nav_button[] = array('method_id' => 142,'title' => 'Edit', 'icon' => 'fa fa-pencil', 'load' => 'purchase_order/function_edit');		$nav_button[] = array('method_id' => 144,'title' => 'Approve', 'icon' => 'fa fa-check', 'load' => 'purchase_order/function_approve');		$nav_button[] = array('method_id' => 143,'title' => 'Delete', 'icon' => 'fa fa-trash-o', 'load' => 'purchase_order/function_delete');		$nav_button[] = array('method_id' => 489,'title' => 'Print', 'icon' => 'fa fa-print', 'load' => 'purchase_order/function_print');		$nav_button[] = array('method_id' => 743,'title' => 'Cancel Approve', 'icon' => 'fa fa-cross', 'load' => 'purchase_order/function_cancel_approve');				$field = $this->purchase_order_table();		$field_detail = $this->purchase_order_detail_table();		$field_purchase_request = $this->purchase_order_request_table();				$dashboard_table['nav_button'] = $nav_button;		$dashboard_table['field'] = $field;		$dashboard_table['field_detail'] = $field_detail;		$dashboard_table['field_detail_loaddata'] = 'loaddata_detail';		$dashboard_table['field_purchase_request'] = $field_purchase_request;		$dashboard_table['field_purchase_request_loaddata'] = 'loaddata_request_item';				$component['dashboard_table'] = $dashboard_table;				$this->authentication->ajaxlayout($component);	}		function loaddata()   {		$this->authentication->plainlayout();				$view = 'view_purchase_order';		$field = $this->purchase_order_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error"; 		$loaddata = $this->ecc_library->get_field_data($view,$field);					echo $loaddata;	}	function approve()   {		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($purchase_order_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_approve");				$this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);			}								$result = $this->rpc_service_portal->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function cancel_approve()   {		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($purchase_order_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_cancel_approve");				$this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);			}								$result = $this->rpc_service_portal->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function delete()   {		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($purchase_order_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_delete");				$this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);			}								$result = $this->rpc_service_portal->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}			function post_add_edit() {		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : '';		$purchase_order_no = isset($_POST['purchase_order_no']) ? $_POST['purchase_order_no'] : '';		$purchase_order_date = isset($_POST['purchase_order_date']) ? $_POST['purchase_order_date'] : '';		$partner_id = isset($_POST['partner_id']) ? $_POST['partner_id'] : '';		$currencies_id = isset($_POST['currencies_id']) ? $_POST['currencies_id'] : '';		$purchase_type_id = isset($_POST['purchase_type_id']) ? $_POST['purchase_type_id'] : '';		$this_memo = isset($_POST['this_memo']) ? $_POST['this_memo'] : '';		$purchase_order_type_id = isset($_POST['purchase_order_type_id']) ? $_POST['purchase_order_type_id'] : '';		$purchase_order_memo = isset($_POST['purchase_order_memo']) ? $_POST['purchase_order_memo'] : '';		$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($purchase_order_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_edit");				$this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);			} else {				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_add");			}									$this->rpc_service_portal->addField('purchase_order_no',$purchase_order_no);			$this->rpc_service_portal->addField('purchase_order_date',$purchase_order_date);			$this->rpc_service_portal->addField('partner_id',$partner_id);			$this->rpc_service_portal->addField('currencies_id',$currencies_id);			$this->rpc_service_portal->addField('purchase_type_id',$purchase_type_id);			$this->rpc_service_portal->addField('this_memo',$this_memo);			$this->rpc_service_portal->addField('purchase_order_type_id',$purchase_order_type_id);			$this->rpc_service_portal->addField('purchase_order_memo',$purchase_order_memo);						$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data_result = json_decode($result['data'],true);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];							$return['purchase_order_id'] = $data_result['purchase_order_id'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function loaddata_detail() {		$this->authentication->plainlayout();				$purchase_order_id = isset($_REQUEST['purchase_order_id']) ? is_numeric($_REQUEST['purchase_order_id']) ? $_REQUEST['purchase_order_id']  : -1 : -1;		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$view = 'view_purchase_order_detail';		$field = $this->purchase_order_detail_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		$extra_param['where']['0']['field'] = 'r2';		$extra_param['where']['0']['data'] = $purchase_order_id;		$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function post_add_edit_detail() {		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : 0;		$purchase_order_detail_id = isset($_POST['purchase_order_detail_id']) ? $_POST['purchase_order_detail_id'] : '';		$item_id = isset($_POST['item_id']) ? $_POST['item_id'] : '';		$quantity_ordered = isset($_POST['quantity_ordered']) ? $_POST['quantity_ordered'] : '';		$order_delivery_date = isset($_POST['order_delivery_date']) ? $_POST['order_delivery_date'] : '';		$purchase_order_detail_memo = isset($_POST['purchase_order_detail_memo']) ? $_POST['purchase_order_detail_memo'] : '';		$uom_id = isset($_POST['uom_id']) ? $_POST['uom_id'] : '';		$conversion = isset($_POST['conversion']) ? $_POST['conversion'] : '';		$unit_price = isset($_POST['unit_price']) ? $_POST['unit_price'] : '';		$trans_type = isset($_POST['trans_type']) ? $_POST['trans_type'] : 1;		$purchase_request_detail_id = isset($_POST['purchase_request_detail_id']) ? $_POST['purchase_request_detail_id'] : '';				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($purchase_order_detail_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_detail_edit");				$this->rpc_service_portal->addField('purchase_order_detail_id',$purchase_order_detail_id);			} else {				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_detail_add");			}						$this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);			$this->rpc_service_portal->addField('item_id',$item_id);			$this->rpc_service_portal->addField('quantity_ordered',$quantity_ordered);			$this->rpc_service_portal->addField('uom_id',$uom_id);			$this->rpc_service_portal->addField('conversion',$conversion);			$this->rpc_service_portal->addField('unit_price',$unit_price);			$this->rpc_service_portal->addField('order_delivery_date',$order_delivery_date);			$this->rpc_service_portal->addField('purchase_order_detail_memo',$purchase_order_detail_memo);			$this->rpc_service_portal->addField('purchase_request_detail_id',$purchase_request_detail_id);			$this->rpc_service_portal->addField('trans_type',$trans_type);						$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data = json_decode($result['data'],TRUE);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}						echo json_encode($return);	}		function delete_detail() {		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				$purchase_order_detail_id = isset($_POST['purchase_order_detail_id']) ? $_POST['purchase_order_detail_id'] : '';		$user_id = $this->session->userdata('user_id');						if(count($_POST) > 0){						if($purchase_order_detail_id){				$this->rpc_service_portal->setSP("dbo.sp_purchase_order_detail_delete");				$this->rpc_service_portal->addField('purchase_order_detail_id',$purchase_order_detail_id);			}								$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}		echo json_encode($return);			}		function loaddata_request_item() {		$this->authentication->plainlayout();				$purchase_order_detail_id = isset($_POST['purchase_order_detail_id']) ? $_POST['purchase_order_detail_id'] : '';		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$field = $this->purchase_order_request_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		if($purchase_order_detail_id){			$view = 'view_purchase_order_detail_request';			$extra_param['where']['0']['field'] = 'r22';			$extra_param['where']['0']['data'] = $purchase_order_detail_id;		} else {			$view = 'view_purchase_request_item';		}				$extra_param['field']['rh_id'] = $purchase_order_detail_id;						$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function loaddata_request_item2() {		$this->authentication->plainlayout();				$field = array();		$field[] = array('field' => 'purchase_request_detail_id', 'title' => 'purchase_request_detail_id');		$field[] = array('field' => 'purchase_request_id', 'title' => 'purchase_request_id');		$field[] = array('field' => 'purchase_request_date', 'title' => 'purchase_request_date');		$field[] = array('field' => 'purchase_request_no', 'title' => 'purchase_request_no');		$field[] = array('field' => 'item', 'title' => 'item');		$field[] = array('field' => 'quantity_requested', 'title' => 'quantity_requested');		$field[] = array('field' => 'quantity_ordered', 'title' => 'quantity_ordered');		$field[] = array('field' => 'unit', 'title' => 'TOTAL');		$field[] = array('field' => 'purchase_request_status_id', 'title' => 'purchase_request_status_id');		$field[] = array('field' => 'item_id', 'title' => 'item_id');		$field[] = array('field' => 'request_delivery_date', 'title' => 'request_delivery_date');		$field[] = array('field' => 'outstanding_qty', 'title' => 'outstanding_qty');		$field[] = array('field' => 'uom_id', 'title' => 'uom_id');		$field[] = array('field' => 'memo', 'title' => 'memo');		$field[] = array('field' => 'request_delivery_date', 'title' => 'request_delivery_date');			$new_purchase_order = isset($_POST['new_purchase_order']) ? $_POST['new_purchase_order'] : 0;		$purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : 0;		$lock_data = isset($_POST['lock_data']) ? $_POST['lock_data'] : 0;				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";		$loaddata_table = array();				if($lock_data == 0){			$view = 'dbo.view_purchase_request_item';			$loaddata = $this->ecc_library->loaddata($view,$field);							foreach($loaddata['data'] as $key => $value){				$this_order[$key] = 0;								$new_row = array();				$new_row[] = $value[0];				$new_row[] = $value[3];				$new_row[] = $value[2];				$new_row[] = $value[4];				$new_row[] = $this->mainconfig->get_decimal_format($value[5],12);				$new_row[] = $this->mainconfig->get_decimal_format($value[6],12);				$new_row[] = $value[7];				$new_row[] = "<input class=\"form-control\" name=\"quantity_ordered[". $value[0] ."]\" type=\"text\" placeholder=\"This Order\" value=\"". $this_order[$key] ."\" />";				$select = "<select class=\"form-control search_uom\" name=\"uom_id[". $value[0] ."]\" style=\"width:150px\">";				$select .= "<option value=\"".$value[12]."\" selected=\"selectted\">". $value[7]."</option>";				$select .= "</select>";								$new_row[] = $select;				$new_row[] = "<input class=\"form-control\" name=\"conversion[". $value[0] ."]\" type=\"text\" placeholder=\"Conversion\" value=\"1\" />";				$new_row[] = "				<input name=\"item_id[". $value[0] ."]\" type=\"hidden\" value=\"". $value[9] ."\" /><input class=\"form-control\" name=\"unit_price[". $value[0] ."]\" type=\"text\" placeholder=\"Unit Price\" value=\"1\" />";				$new_row[] = "";												$loaddata_table[$value[0]] = $new_row;			}		}				if($new_purchase_order == '0')      {			$view = 'dbo.view_purchase_order_detail_request';						$field = array();			$field[] = array('field' => 'purchase_request_detail_id', 'title' => 'purchase_request_detail_id');			$field[] = array('field' => 'purchase_request_id', 'title' => 'purchase_request_id');			$field[] = array('field' => 'purchase_request_date', 'title' => 'purchase_request_date');			$field[] = array('field' => 'purchase_request_no', 'title' => 'purchase_request_no');			$field[] = array('field' => 'item', 'title' => 'item');			$field[] = array('field' => 'quantity_requested', 'title' => 'quantity_requested');			$field[] = array('field' => 'quantity_ordered', 'title' => 'quantity_ordered');			$field[] = array('field' => 'unit', 'title' => 'TOTAL');			$field[] = array('field' => 'purchase_request_status_id', 'title' => 'purchase_request_status_id');			$field[] = array('field' => 'item_id', 'title' => 'item_id');			$field[] = array('field' => 'request_delivery_date', 'title' => 'request_delivery_date');			$field[] = array('field' => 'outstanding_qty', 'title' => 'outstanding_qty');			$field[] = array('field' => 'uom_id', 'title' => 'uom_id');			$field[] = array('field' => 'request_delivery_date', 'title' => 'request_delivery_date');			$field[] = array('field' => 'conversion', 'title' => 'conversion');			$field[] = array('field' => 'unit_price', 'title' => 'unit_price');			$field[] = array('field' => 'unit_order', 'title' => 'unit_order');						$where = array();			$where['purchase_order_id'] = $purchase_order_id;			$loaddata_purchase = $this->ecc_library->loaddata($view,$field,$where);									foreach($loaddata_purchase['data'] as $key => $value){				if($lock_data == 0){										$loaddata_table[$value[0]][7] = "<input class=\"form-control\" name=\"quantity_ordered[". $value[0] ."]\" type=\"text\" placeholder=\"This Order\" value=\"". $this->mainconfig->get_decimal_format2($value[11],12) ."\" />";					$select = "<select class=\"form-control search_uom\" name=\"uom_id[". $value[0] ."]\" style=\"width:150px\">";					$select .= "<option value=\"".$value[12]."\" selected=\"selectted\">". $value[16]."</option>";					$select .= "</select>";					$loaddata_table[$value[0]][8] = $select;					$loaddata_table[$value[0]][9] = "<input class=\"form-control\" name=\"conversion[". $value[0] ."]\" type=\"text\" placeholder=\"Conversion\" value=\"". $this->mainconfig->get_decimal_format2($value[14],12) ."\" />";					$loaddata_table[$value[0]][10] = "<input name=\"item_id[". $value[0] ."]\" type=\"hidden\" value=\"". $value[9] ."\" /><input class=\"form-control\" name=\"unit_price[". $value[0] ."]\" type=\"text\" placeholder=\"Unit Price\" value=\"". $this->mainconfig->get_decimal_format2($value[15],12) ."\" />";									} else {					$this_order[$value[0]] = $value[11];					$new_row = array();					$new_row[] = $value[0];					$new_row[] = $value[3];					$new_row[] = $value[2];					$new_row[] = $value[4];					$new_row[] = $this->mainconfig->get_decimal_format($value[5],12);					$new_row[] = $this->mainconfig->get_decimal_format($value[6],12);					$new_row[] = $value[7];					$new_row[] = $this->mainconfig->get_decimal_format($value[11],12);					$new_row[] = $value[16];					$new_row[] = $this->mainconfig->get_decimal_format($value[14],12);					$new_row[] = $this->mainconfig->get_decimal_format($value[15],12);					$new_row[] = "";										$loaddata_table[$value[0]] = $new_row;				}							}				}				$loaddata['data'] = array();		foreach($loaddata_table as $value){						$data = array();			$data[] = $value[0];			$data[] = $value[1];			$data[] = $value[2];			$data[] = $value[3];			$data[] = $value[4];			$data[] = $value[5];			$data[] = $value[6];			$data[] = $value[7];			$data[] = $value[8];			$data[] = $value[9];			$data[] = $value[10];			$data[] = $value[11];						$loaddata['data'][] = $data;		}				echo json_encode($loaddata);	}		function print_purchase_order() {            $purchase_order_id = isset($_POST['purchase_order_id']) ? $_POST['purchase_order_id'] : false;      $format = isset($_POST['format']) ? $_POST['format'] : 'pdf';      $user_id = $this->session->userdata('user_id');            $sp = "dbo.sp_rpt_purchase_order";      $this->Rpc_service_portal->setSP(array("sp"=>$sp,"mode"=>"2","debug"=>"1"));    //  $this->rpc_service_portal->addField('purchase_order_id',$purchase_order_id);      $this->rpc_service_portal->addField('format',$format);      $this->rpc_service_portal->addField('temp_folder',sys_get_temp_dir());      $this->rpc_service_portal->addField('sort','e.item_code asc');  	        $result = $this->rpc_service_portal->resultPrint2();      echo json_encode($result);	}}?>