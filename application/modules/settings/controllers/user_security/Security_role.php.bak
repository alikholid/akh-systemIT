<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
Class Security_role extends CI_Controller { 
	function __construct(){ 		parent::__construct(); 				$this->data_request = $_REQUEST;				$module = $this->router->module;		$directory = $this->router->directory;		$class = $this->router->class;		$method = $this->router->method;		$directory = trim(str_replace('../modules/'.$module ,'',str_replace('/controllers/','',$directory)),'/');				$this->module = $module;		if(trim($directory) != ''){			$this->directory = $directory;		} else {			$this->directory = '0';			$this->directory2 = '';		}		$this->class = $class;		$this->method = $method;	}		function security_role_table(){		$view = 'view_security_role';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r7']['hidden'] = true;		$get_field['r8']['hidden'] = true;		$get_field['r2']['width'] = 150;		$get_field['r4']['width'] = 170;		$get_field['r6']['width'] = 170;				return $get_field;	}		function index(){		$this->load->model('main');		$component['loadlayout'] = true;		$component['view_load'] = 'user_security/security_role/view';		$component['view_load_form'] = 'user_security/security_role/form';		$component['load_js'][] = 'user_security/security_role/view';		$component['load_js'][] = 'user_security/security_role/form';				$component['page_title'] = 'Security Role';				$dashboard_table = array();				$nav_button = array();		$nav_button[] = array('method_id' => 547,'title' => 'Add', 'icon' => 'fa fa-plus', 'load' => 'user_security/security_role/function_add');		$nav_button[] = array('method_id' => 548,'title' => 'Edit', 'icon' => 'fa fa-pencil', 'load' => 'user_security/security_role/function_edit');		$nav_button[] = array('method_id' => 549,'title' => 'Delete', 'icon' => 'fa fa-trash-o', 'load' => 'user_security/security_role/function_delete');				$field = $this->security_role_table();				$dashboard_table['nav_button'] = $nav_button;		$dashboard_table['field'] = $field;				$component['dashboard_table'] = $dashboard_table;				$token_list = array();		$order = "token asc";		//$data_table = $this->main->getData('dbo.view_security_token', null, null, null, $order);		$data_table = $this->main->getData_pop('dbo.view_security_token', null, null, null, $order);		//var_dump($data_table);		if($data_table){			foreach($data_table as $dt_table){				$row = array();				foreach($dt_table as $key=>$value){					$row[$key] = $value;				}								$token_list[] = $row;			}		}				$newdata = array(			'token_list'  => $token_list		);		$this->session->set_userdata($newdata);					$this->authentication->ajaxlayout($component);	}		function loaddata(){		$this->authentication->plainlayout();				$view = 'view_security_role';		$field = $this->security_role_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error"; 		$loaddata = $this->ecc_library->get_field_data($view,$field);					echo $loaddata;	}		function post_add_edit(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();		var_dump($_POST);die();				$role_id = isset($_POST['role_id']) ? $_POST['role_id'] : null;		$role = isset($_POST['role']) ? $_POST['role'] : '';		$token_id = isset($_POST['token_id']) ? $_POST['token_id'] : array();				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";		//var_dump($token_id);		if(count($_POST) > 0){			if($role_id){				$this->rpc_service->setSP("dbo.sp_security_role_edit");				$this->rpc_service->addField('role_id',$role_id);			} else {				$this->rpc_service->setSP("dbo.sp_security_role_add");			}						foreach($token_id as $key=>$value){				if($value > 0){					$data = array();					$data['token_id'] = $key;										$this->rpc_service->addAttributeChild('dt' ,$data);				}			}						$this->rpc_service->addField('role',$role);			$result = $this->rpc_service->resultJSON();		//	$result = $this->rpc_service->resultJSON_pop();			//print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];														$data_result = json_decode($result['data'],true);							$data_role = array();							foreach($data_result as $key=>$value){								$data_role[$value['role_id']][$value['token_id']] = 1;															}														$myfile = fopen("bricks_data/role_config.json", "w");							$txt = json_encode($data_role, JSON_PRETTY_PRINT);							fwrite($myfile, $txt);							fclose($myfile);													}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function delete(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$role_id = isset($_POST['role_id']) ? $_POST['role_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($role_id){				$this->rpc_service->setSP("dbo.sp_security_role_delete");				$this->rpc_service->addField('role_id',$role_id);			}								$result = $this->rpc_service->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}
}?>