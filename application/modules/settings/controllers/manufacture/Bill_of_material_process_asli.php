<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc vs ( ! qrsvarq('ONFRCNGU')) rkvg('Ab qverpg fpevcg npprff nyybjrq');
Pynff Ovyy_bs_zngrevny_cebprff rkgraqf PV_Pbagebyyre { 
	shapgvba __pbafgehpg(){ 		cnerag::__pbafgehpg(); 				$guvf->qngn_erdhrfg = $_ERDHRFG;				$zbqhyr = $guvf->ebhgre->zbqhyr;		$qverpgbel = $guvf->ebhgre->qverpgbel;		$pynff = $guvf->ebhgre->pynff;		$zrgubq = $guvf->ebhgre->zrgubq;		$qverpgbel = gevz(fge_ercynpr('../zbqhyrf/'.$zbqhyr ,'',fge_ercynpr('/pbagebyyref/','',$qverpgbel)),'/');				$guvf->zbqhyr = $zbqhyr;		vs(gevz($qverpgbel) != ''){			$guvf->qverpgbel = $qverpgbel;		} ryfr {			$guvf->qverpgbel = '0';			$guvf->qverpgbel2 = '';		}		$guvf->pynff = $pynff;		$guvf->zrgubq = $zrgubq;	}		shapgvba obz_cebprff_gnoyr(){		$ivrj = 'ivrj_obz_cebprff';		$trg_svryq = $guvf->rpp_yvoenel->trg_svryq($ivrj);				$trg_svryq['e1']['uvqqra'] = gehr;		$trg_svryq['e10']['uvqqra'] = gehr;		$trg_svryq['e11']['uvqqra'] = gehr;		$trg_svryq['e12']['uvqqra'] = gehr;		$trg_svryq['e13']['uvqqra'] = gehr;		$trg_svryq['e14']['uvqqra'] = gehr;		$trg_svryq['e15']['uvqqra'] = gehr;				$trg_svryq['e2']['jvqgu'] = 150;		$trg_svryq['e3']['jvqgu'] = 200;		$trg_svryq['e4']['jvqgu'] = 200;		$trg_svryq['e7']['jvqgu'] = 170;		$trg_svryq['e9']['jvqgu'] = 170;				erghea $trg_svryq;	}		shapgvba obz_cebprff_qrgnvy_gnoyr() {		$ivrj = 'ivrj_obz_cebprff_qrgnvy';		$trg_svryq = $guvf->rpp_yvoenel->trg_svryq($ivrj);				$trg_svryq['e1']['uvqqra'] = gehr;		$trg_svryq['e2']['uvqqra'] = gehr;		$trg_svryq['e6']['uvqqra'] = gehr;		$trg_svryq['e7']['uvqqra'] = gehr;		$trg_svryq['e8']['uvqqra'] = gehr;				$trg_svryq['npg']['fp'] = 'npg';		$trg_svryq['npg']['gvgyr'] = '#';		$trg_svryq['npg']['olcnffinyhr'] = '';		$trg_svryq['npg']['pglcr'] = 'grkg';		$trg_svryq['npg']['nyvta'] = 'pragre';		$trg_svryq['npg']['frnepu'] = snyfr;		$trg_svryq['npg']['fbegnoyr'] = snyfr;		$trg_svryq['npg']['sbeznggre'] = 'sbezngBcrengvbaf';		$trg_svryq['npg']['jvqgu'] = 300;				erghea $trg_svryq;	}		shapgvba vaqrk(){		$guvf->ybnq->zbqry('znva');		$pbzcbarag['ybnqynlbhg'] = gehr;		$pbzcbarag['ivrj_ybnq'] = 'znahsnpgher/ovyy_bs_zngrevny_cebprff/ivrj';		$pbzcbarag['ivrj_ybnq_sbez'] = 'znahsnpgher/ovyy_bs_zngrevny_cebprff/sbez';		$pbzcbarag['ybnq_wf'][] = 'znahsnpgher/ovyy_bs_zngrevny_cebprff/ivrj';		$pbzcbarag['ybnq_wf'][] = 'znahsnpgher/ovyy_bs_zngrevny_cebprff/sbez';				$pbzcbarag['cntr_gvgyr'] = 'Ovyy Bs Zngrevny Cebprff';				$qnfuobneq_gnoyr = neenl();				$ani_ohggba = neenl();		$ani_ohggba[] = neenl('zrgubq_vq' => 428,'gvgyr' => 'Nqq', 'vpba' => 'sn sn-cyhf', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_nqq');		$ani_ohggba[] = neenl('zrgubq_vq' => 429,'gvgyr' => 'Rqvg', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_rqvg');		$ani_ohggba[] = neenl('zrgubq_vq' => 418,'gvgyr' => 'Nccebir', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_nccebir');		$ani_ohggba[] = neenl('zrgubq_vq' => 559,'gvgyr' => 'Frg Qrsnhyg', 'vpba' => 'sn sn-purpx', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_frg_qrsnhyg');		$ani_ohggba[] = neenl('zrgubq_vq' => 431,'gvgyr' => 'Qryrgr', 'vpba' => 'sn sn-genfu-b', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_qryrgr');		$ani_ohggba[] = neenl('zrgubq_vq' => 797,'gvgyr' => 'Pnapry Nccebir', 'vpba' => 'sn sn-crapvy', 'ybnq' => 'znahsnpgher/ovyy_bs_zngrevny_cebprff/shapgvba_pnapry_nccebir');				$svryq = $guvf->obz_cebprff_gnoyr();		$svryq_qrgnvy = $guvf->obz_cebprff_qrgnvy_gnoyr();				$qnfuobneq_gnoyr['ani_ohggba'] = $ani_ohggba;		$qnfuobneq_gnoyr['svryq'] = $svryq;		$qnfuobneq_gnoyr['svryq_qrgnvy'] = $svryq_qrgnvy;		$qnfuobneq_gnoyr['svryq_qrgnvy_ybnqqngn'] = 'ybnqqngn_qrgnvy';		$pbzcbarag['qnfuobneq_gnoyr'] = $qnfuobneq_gnoyr;				$guvf->nhguragvpngvba->nwnkynlbhg($pbzcbarag);	}		shapgvba ybnqqngn(){		$guvf->nhguragvpngvba->cynvaynlbhg();				$ivrj = 'ivrj_obz_cebprff';		$svryq = $guvf->obz_cebprff_gnoyr();				$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe"; 		$ybnqqngn = $guvf->rpp_yvoenel->trg_svryq_qngn($ivrj,$svryq);					rpub $ybnqqngn;	}		shapgvba cbfg_nqq_rqvg(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : '';		$obz_cebprff_pbqr = vffrg($_CBFG['obz_cebprff_pbqr']) ? $_CBFG['obz_cebprff_pbqr'] : '';		$obz_cebprff_anzr = vffrg($_CBFG['obz_cebprff_anzr']) ? $_CBFG['obz_cebprff_anzr'] : '';				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){			vs($obz_cebprff_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_rqvg");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			} ryfr {				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_nqq");			}						$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_pbqr',$obz_cebprff_pbqr);			$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_anzr',$obz_cebprff_anzr);									$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();									$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$qngn_erfhyg = wfba_qrpbqr($erfhyg['qngn'],gehr);														$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];														$erghea['obz_cebprff_vq'] = $qngn_erfhyg['obz_cebprff_vq'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba nccebir(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($obz_cebprff_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_nccebir");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba pnapry_nccebir(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($obz_cebprff_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_pnapry_nccebir");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba qryrgr(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($obz_cebprff_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_qryrgr");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba ybnqqngn_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();				$obz_cebprff_vq = vffrg($_ERDHRFG['obz_cebprff_vq']) ? vf_ahzrevp($_ERDHRFG['obz_cebprff_vq']) ? $_ERDHRFG['obz_cebprff_vq']  : -1 : -1;		$zrgubqvq = vffrg($_ERDHRFG['zrgubqvq']) ? vf_ahzrevp($_ERDHRFG['zrgubqvq']) ? $_ERDHRFG['zrgubqvq']  : -1 : -1;				$ivrj = 'ivrj_obz_cebprff_qrgnvy';		$svryq = $guvf->obz_cebprff_qrgnvy_gnoyr();				$erghea = neenl();		$erghea['inyvq'] = snyfr;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				$rkgen_cnenz = neenl();		$rkgen_cnenz['jurer']['0']['svryq'] = 'e2';		$rkgen_cnenz['jurer']['0']['qngn'] = $obz_cebprff_vq;		$rkgen_cnenz['zrgubqvq'] = $zrgubqvq;				$ybnqqngn = $guvf->rpp_yvoenel->trg_svryq_qngn($ivrj,$svryq,$rkgen_cnenz);					rpub $ybnqqngn;	}		shapgvba cbfg_nqq_rqvg_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();				$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : 0;		$obz_cebprff_qrgnvy_vq = vffrg($_CBFG['obz_cebprff_qrgnvy_vq']) ? $_CBFG['obz_cebprff_qrgnvy_vq'] : '';		$jbex_cebprff_vq = vffrg($_CBFG['jbex_cebprff_vq']) ? $_CBFG['jbex_cebprff_vq'] : '';		$obz_vq = vffrg($_CBFG['obz_vq']) ? $_CBFG['obz_vq'] : '';				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){			vs($obz_cebprff_qrgnvy_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_qrgnvy_rqvg");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_qrgnvy_vq',$obz_cebprff_qrgnvy_vq);			} ryfr {				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_qrgnvy_nqq");			}						$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			$guvf->ecp_freivpr->nqqSvryq('jbex_cebprff_vq',$jbex_cebprff_vq);			$guvf->ecp_freivpr->nqqSvryq('obz_vq',$obz_vq);						$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$qngn = wfba_qrpbqr($erfhyg['qngn'],GEHR);							$obz_cebprff_vq = $qngn['obz_cebprff_vq'];							$obz_cebprff_qrgnvy_vq = $qngn['obz_cebprff_qrgnvy_vq'];							$obz_cebprff_grkg = $qngn['obz_cebprff'];							$obz = $qngn['obz'];							$vgrz = $qngn['vgrz'];							$jbex_cebprff_vq = $qngn['jbex_cebprff_vq'];							$obz_vq = $qngn['obz_vq'];														$obz_cebprff = $guvf->frffvba->hfreqngn('obz_cebprff');														$ebj = neenl();							//$ebj['obz_cebprff_vaqrk'] = $frd;							$ebj['obz_cebprff'] = $obz_cebprff_grkg;							$ebj['vgrz'] = $vgrz;							$ebj['obz'] = $obz;							$ebj['jbex_cebprff_vq'] = $jbex_cebprff_vq;							$ebj['obz_vq'] = $obz_vq;							$ebj['obz_cebprff_qrgnvy_vq'] = $obz_cebprff_qrgnvy_vq;							$ebj['obz_cebprff_vq'] = $obz_cebprff_vq;														//$obz_cebprff[$frd] = $ebj;							$arjqngn = neenl(								'obz_cebprff'  => $obz_cebprff				///							);							$guvf->frffvba->frg_hfreqngn($arjqngn);															$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];												}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}		shapgvba qryrgr_qrgnvy(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";						$obz_cebprff_qrgnvy_vq = vffrg($_CBFG['obz_cebprff_qrgnvy_vq']) ? $_CBFG['obz_cebprff_qrgnvy_vq'] : '';		$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				vs(pbhag($_CBFG) > 0){						vs($obz_cebprff_qrgnvy_vq){				$guvf->ecp_freivpr_cbegny->frgFC("qob.fc_obz_cebprff_qrgnvy_qryrgr");				$guvf->ecp_freivpr_cbegny->nqqSvryq('obz_cebprff_qrgnvy_vq',$obz_cebprff_qrgnvy_vq);			}								$erfhyg = $guvf->ecp_freivpr_cbegny->erfhygWFBA();						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}		rpub wfba_rapbqr($erghea);	}		shapgvba frg_qrsnhyg(){		$guvf->nhguragvpngvba->cynvaynlbhg();		$cnenzrgre = neenl();		$erghea = neenl();						$obz_cebprff_vq = vffrg($_CBFG['obz_cebprff_vq']) ? $_CBFG['obz_cebprff_vq'] : snyfr;				$hfre_vq = $guvf->frffvba->hfreqngn('hfre_vq');				$erfhyg = neenl();		$erghea['inyvq'] = snyfr;		$erghea['fgnghf_pbqr'] = 501;		$erghea['zrffntr'] = "Vagreany Freire Reebe";				vs(pbhag($_CBFG) > 0){						vs($obz_cebprff_vq){				$guvf->ecp_freivpr->frgFC("qob.fc_obz_cebprff_frg_qrsnhyg");				$guvf->ecp_freivpr->nqqSvryq('obz_cebprff_vq',$obz_cebprff_vq);			}								$erfhyg = $guvf->ecp_freivpr->erfhygWFBA();			// cevag_e($erfhyg);						$qngn = neenl();			vs(vffrg($erfhyg)){				vs(vffrg($erfhyg['inyvq'])){					vs($erfhyg['inyvq']){						vs(vffrg($erfhyg['qngn'])){							$erghea['inyvq'] = $erfhyg['inyvq'];							$erghea['fgnghf_pbqr'] = $erfhyg['ab'];							$erghea['zrffntr'] = $erfhyg['qrf'];						}					} ryfr {						$erghea['fgnghf_pbqr'] = $erfhyg['ab'];						$erghea['zrffntr'] = $erfhyg['qrf'];					}				}			}					} ryfr {			$erghea['inyvq'] = snyfr;			$erghea['zrffntr'] = "Frffvba rkcverq";		}				rpub wfba_rapbqr($erghea);	}	
}?>";
eval(simple_decrypt($encoded, __FILE__));
?>