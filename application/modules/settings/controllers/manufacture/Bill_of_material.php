<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
Class Bill_of_material extends CI_Controller { 
	function __construct(){ 		parent::__construct(); 				$this->data_request = $_REQUEST;				$module = $this->router->module;		$directory = $this->router->directory;		$class = $this->router->class;		$method = $this->router->method;		$directory = trim(str_replace('../modules/'.$module ,'',str_replace('/controllers/','',$directory)),'/');				$this->module = $module;	//	var_dump($directory);		if(trim($directory) != ''){			$this->directory = $directory;		} else {			$this->directory = '0';			$this->directory2 = '';		}		$this->class = $class;		$this->method = $method;	}		function bom_table(){		$view = 'view_bom';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r10']['hidden'] = true;		$get_field['r11']['hidden'] = true;		$get_field['r12']['hidden'] = true;		$get_field['r13']['hidden'] = true;		$get_field['r14']['hidden'] = true;		$get_field['r15']['hidden'] = true;		$get_field['r16']['hidden'] = true;				$get_field['r2']['width'] = 150;		$get_field['r3']['width'] = 200;		$get_field['r4']['width'] = 200;		$get_field['r7']['width'] = 170;		$get_field['r9']['width'] = 170;				return $get_field;	}		function bom_detail_table() {		$view = 'view_bom_detail';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;		$get_field['r6']['hidden'] = true;		$get_field['r7']['hidden'] = true;		$get_field['r8']['hidden'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations';		$get_field['act']['width'] = 300;				return $get_field;	}		function assets_detail_table() {		$view = 'view_data_assets';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;		$get_field['r3']['hidden'] = true;		$get_field['r4']['hidden'] = true;		$get_field['r5']['hidden'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations';		$get_field['act']['width'] = 300;				return $get_field;	}		function index(){		$this->load->model('main');		$component['loadlayout'] = true;		$component['view_load'] = 'manufacture/bill_of_material/view';		$component['view_load_form'] = 'manufacture/bill_of_material/form';		$component['load_js'][] = 'manufacture/bill_of_material/view';		$component['load_js'][] = 'manufacture/bill_of_material/form';				$component['page_title'] = 'Bill Of Material';				$dashboard_table = array();				$nav_button = array();		$nav_button[] = array('method_id' => 420,'title' => 'Add', 'icon' => 'fa fa-plus', 'load' => 'manufacture/bill_of_material/function_add');		$nav_button[] = array('method_id' => 421,'title' => 'Edit', 'icon' => 'fa fa-pencil', 'load' => 'manufacture/bill_of_material/function_edit');		$nav_button[] = array('method_id' => 412,'title' => 'Approve', 'icon' => 'fa fa-pencil', 'load' => 'manufacture/bill_of_material/function_approve');		$nav_button[] = array('method_id' => 423,'title' => 'Delete', 'icon' => 'fa fa-trash-o', 'load' => 'manufacture/bill_of_material/function_delete');		$nav_button[] = array('method_id' => 796,'title' => 'Cancel Approve', 'icon' => 'fa fa-pencil', 'load' => 'manufacture/bill_of_material/function_cancel_approve');		$nav_button[] = array('method_id' => 833,'title' => 'Copy BOM', 'icon' => 'fa fa-pencil', 'load' => 'manufacture/bill_of_material/function_copy_bom');				$field = $this->bom_table();		$field_detail = $this->bom_detail_table();		//$field_assets = $this->assets_detail_table();				$dashboard_table['nav_button'] = $nav_button;		$dashboard_table['field'] = $field;		$dashboard_table['field_detail'] = $field_detail;		$dashboard_table['field_detail_loaddata'] = 'loaddata_detail';		//$dashboard_table['field_assets'] = $field_assets;		//$dashboard_table['field_assets_loaddata'] = 'loaddata_asset';		$component['dashboard_table'] = $dashboard_table;				$this->authentication->ajaxlayout($component);	}		function loaddata(){		$this->authentication->plainlayout();				$view = 'view_bom';		$field = $this->bom_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error"; 		$loaddata = $this->ecc_library->get_field_data($view,$field);					echo $loaddata;	}		function post_add_edit(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : '';		$bom_code = isset($_POST['bom_code']) ? $_POST['bom_code'] : '';		$bom_name = isset($_POST['bom_name']) ? $_POST['bom_name'] : '';		$fg_item_id = isset($_POST['fg_item_id']) ? $_POST['fg_item_id'] : '';				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($bom_id){				$this->rpc_service->setSP("dbo.sp_bom_edit");				$this->rpc_service->addField('bom_id',$bom_id);			} else {				$this->rpc_service->setSP("dbo.sp_bom_add");			}						$this->rpc_service->addField('bom_code',$bom_code);			$this->rpc_service->addField('bom_name',$bom_name);			$this->rpc_service->addField('fg_item_id',$fg_item_id);											$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data_result = json_decode($result['data'],true);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];														$return['bom_id'] = $data_result['bom_id'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function approve(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($bom_id){				$this->rpc_service->setSP("dbo.sp_bom_approve");				$this->rpc_service->addField('bom_id',$bom_id);			}								$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function cancel_approve(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($bom_id){				$this->rpc_service->setSP("dbo.sp_bom_cancel_approve");				$this->rpc_service->addField('bom_id',$bom_id);			}								$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function copy_bom(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($bom_id){				$this->rpc_service->setSP("dbo.sp_bom_copy");				$this->rpc_service->addField('bom_id',$bom_id);			}								$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function delete(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($bom_id){				$this->rpc_service->setSP("dbo.sp_bom_delete");				$this->rpc_service->addField('bom_id',$bom_id);			}								$result = $this->rpc_service->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function loaddata_detail(){		$this->authentication->plainlayout();				$bom_id = isset($_REQUEST['bom_id']) ? is_numeric($_REQUEST['bom_id']) ? $_REQUEST['bom_id']  : -1 : -1;		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$view = 'view_bom_detail';		$field = $this->bom_detail_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		$extra_param['where']['0']['field'] = 'r2';		$extra_param['where']['0']['data'] = $bom_id;		$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function post_add_edit_detail(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();		//var_dump($_POST);		$bom_id = isset($_POST['bom_id']) ? $_POST['bom_id'] : 0;		$bom_detail_id = isset($_POST['bom_detail_id']) ? $_POST['bom_detail_id'] : '';		$mat_item_id = isset($_POST['mat_item_id']) ? $_POST['mat_item_id'] : '';		$mat_quantity = isset($_POST['mat_quantity']) ? $_POST['mat_quantity'] : '';				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($bom_detail_id){				$this->rpc_service->setSP("dbo.sp_bom_detail_edit");				$this->rpc_service->addField('bom_detail_id',$bom_detail_id);			} else {				$this->rpc_service->setSP("dbo.sp_bom_detail_add");			}						$this->rpc_service->addField('bom_id',$bom_id);			$this->rpc_service->addField('mat_item_id',$mat_item_id);			$this->rpc_service->addField('mat_quantity',$mat_quantity);						$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data = json_decode($result['data'],TRUE);							$bom_id = $data['bom_id'];							$bom_detail_id = $data['bom_detail_id'];							$material = $data['material'];							$unit = $data['unit'];							$mat_item_id = $data['mat_item_id'];														$bom = $this->session->userdata('bom');														$row = array();							// $row['bom_index'] = $seq;							$row['material'] = $material;							$row['mat_quantity'] = $mat_quantity;							$row['unit'] = $unit;							$row['mat_item_id'] = $mat_item_id;							$row['bom_detail_id'] = $bom_detail_id;							$row['bom_id'] = $bom_id;														// $bom[$seq] = $row;							$newdata = array(								'bom'  => $bom								// ,'bom_seq'  => $seq							);							$this->session->set_userdata($newdata);															$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];												}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}	function loaddata_asset(){		//$this->authentication->plainlayout();		$this->load->model('main');		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				//var_dump($_SERVER);		//var_dump($_POST['mat_item_id']);		$item_id = isset($_POST['mat_item_id']) ? $_POST['mat_item_id'] : '';		$user_id = $this->session->userdata('user_id');		$return['info'] ="test";		$return['message']= "coba";				echo json_encode($return);	}	function cek_assetxx(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;	    $return['message'] = "Internal Server Error";				$item_id = isset($_POST['mat_item_id']) ? $_POST['mat_item_id'] : '';		$user_id = $this->session->userdata('user_id');					//$this->rpc_service->setSP("dbo.sp_assets_item_category");			//sp_assets_item_category						$view = 'view_data_assets';	    	$field = $this->assets_detail_table();	//	$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;						$extra_param = array();		$extra_param['where']['0']['field'] = 'r1';		$extra_param['where']['0']['data'] = $item_id;		$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;				//	echo json_encode($return);		//print_r($item_id);	//	var_dump($item_id);	}		function delete_detail(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";						$bom_detail_id = isset($_POST['bom_detail_id']) ? $_POST['bom_detail_id'] : '';		$user_id = $this->session->userdata('user_id');				if(count($_POST) > 0){						if($bom_detail_id){				$this->rpc_service->setSP("dbo.sp_bom_detail_delete");				$this->rpc_service->addField('bom_detail_id',$bom_detail_id);			}								$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}		echo json_encode($return);	}
}?>