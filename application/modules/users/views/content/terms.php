<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><qvi pynff="pbagrag pbagrag-shyy pbagrag-obkrq">
	<qvi pynff="oybpx oybpx-obeqrerq oybpx-ebhaqrq">
		<qvi pynff="oybpx-pbagrag oybpx-pbagrag-shyy">
			<c>Guvf nterrzrag vf orgjrra lbh naq gur freivpr bcrengbe, FrpherPybhqArg. 
			Ol hfvat nal freivprf znqr ninvynoyr guebhtu gur FrpherPybhqArg jrofvgr (<n uers="uggcf://jjj.frpherpybhqarg.bet" gnetrg="_oynax">frpherpybhqarg.bet</n>), be <n uers="<?cuc rpub onfr_hey() ?>" gnetrg="_oynax">FrpherPybhqArg Rkpunatr</n>, lbh nterr gung lbh unir ernq, haqrefgbbq naq npprcgrq nyy bs gur grezf naq pbaqvgvbaf pbagnvarq va guvf Grezf bs Hfr nterrzrag, nf jryy nf bhe Cevinpl Cbyvpl naq Pbafrag Sbez juvpu unir vapbecbengrq gur Trareny Qngn Cebgrpgvba Erthyngvba (TQCE) erthyngvba. Nf guvf vf n yrtnyyl ovaqvat pbagenpg, cyrnfr pnershyyl ernq guebhtu guvf nterrzrag naq eryngrq abgvprf orsber hfvat nal bs bhe Freivprf. Ol ertvfgrevat, npprffvat be hfvat FrpherPybhqArg Rkpunatr, lbh unir nterrq gb gur grezf naq pbaqvgvbaf nf ynvq bhg va guvf Hfre Nterrzrag. Fubhyq lbh qvfnterr gb guvf Hfre Nterrzrag, cyrnfr cebprrq gb vavgvngr gur nppbhag ybpx shapgvba (sbe rkvfgvat hfref) naq fgbc gur hfntr bs FrpherPybhqArg Rkpunatr naq nal bs vgf freivprf.
			<oe><oe>Sbe zber vasbezngvba ba FrpherPybhqArg Rkpunatr, lbh pna ersre gb gur FrpherPybhqArg jrofvgr <n uers="uggcf://jjj.frpherpybhqarg.bet" gnetrg="_oynax">frpherpybhqarg.bet</n>. Vs lbh unir guvf nterrzrag, cyrnfr srry serr gb pbagnpg FrpherPybhqArg Rkpunatr sbe pynevsvpngvba ivn bhe Phfgbzre Fhccbeg grnz (<n uers="znvygb:nqzva@frpherpybhqarg.bet">Nqzva@frpherpybhqarg.bet</n>)
			</c>
			
			<u3>Nterrzrag Pbaqvgvbaf</u3>
			
			<c>
				FrpherPybhqArg Rkpunatr erfreirf gur evtug gb zbqvsl be punatr gur grezf naq pbaqvgvbaf bs gur nterrzrag ng nal gvzr naq ng vgf fbyr qvfpergvba. FrpherPybhqArg Rkpunatr jvyy cebivqr abgvpr bs gurfr punatrf ol hcqngvat gur erivfrq Grezf bs Hfr ba gur jrocntr (FrpherPybhqarg.bet) naq punatvat gur “[Ynfg erivfrq: ]” qngr ba guvf cntr. Nal naq nyy zbqvsvpngvbaf be punatrf gb gur Grezf bs Hfr jvyy or rssrpgvir vzzrqvngryl hcba orvat naabhaprq ba gur jrofvgr be eryrnfrq gb hfref. Nf fhpu, lbhe pbagvahrq hfr bs FrpherPybhqArg Rkpunatr’f freivprf npgf nf npprcgnapr bs gur nzraqrq nterrzrag naq ehyrf.
			</c>
			
			<u3>Ryvtvovyvgl</u3>
			
			<c>
				Ol ertvfgrevat gb hfr n FrpherPybhqArg Rkpunatr Nppbhag, lbh unir nssvezrq gung lbh ner ng yrnfg 18 lrnef byq naq ner na vaqvivqhny, yrtny crefba be bgure betnavmngvba jvgu shyy yrtny pncnpvgl gb ragre vagb guvf Hfre Nterrzrag orgjrra lbh naq FrpherPybhqArg Rkpunatr. Vs lbh ner abg, lbh naq lbhe thneqvna funyy haqregnxr nyy pbafrdhraprf erfhygvat sebz lbhe npgvbaf naq FrpherPybhqArg Rkpunatr funyy unir gur evtug gb pnapry be serrmr lbhe nppbhag va nqqvgvba gb svyvat pynvzf ntnvafg lbh naq lbhe thneqvna sbe pbzcrafngvba.
			</c>
			
			<u3>Cebuvovgvba bs hfr</u3>
			
			<c>
				Ol npprffvat naq hfvat FrpherPybhqArg Rkpunatr naq nal bs vgf freivprf, lbh npxabjyrqtr naq qrpyner gung lbh ner abg ba nal genqr be rpbabzvp fnapgvbaf yvfgf, fhpu nf gur HA Frphevgl Pbhapvy Fnapgvbaf yvfg be BSNP (Bssvpr bs Sbervta Nffrgf Pbageby bs gur H.F. Gernfhel Qrcnegzrag). FrpherPybhqArg Rkpunatr znvagnvaf gur evtug gb fryrpg vgf znexrgf naq whevfqvpgvbaf gb bcrengr naq znl erfgevpg be qral vgf freivprf gb pregnva pbhagevrf. Gur pbagrag bs guvf Nterrzrag funyy abg or rkpyhqrq sebz gur ynjf bs gur pbhagel haqre juvpu gur hfre orybatf. FrpherPybhqArg Rkpunatr znvagnvaf vgf fgnapr gung cebuvovgrq hfref ner abg gb hfr be npprff FrpherPybhqArg Rkpunatr naq nal bs vgf freivprf.
			</c>
			
			<u3>Qrfpevcgvba bs freivprf</u3>
			<c>
				FrpherPybhqArg Rkpunatr cebivqrf na bayvar qvtvgny nffrg genqvat cyngsbez (pelcgb gb pelcgb) sbe cebqhpgf pbzzbayl xabja nf pelcgbtencuvp gbxraf, qvtvgny gbxraf be pelcgbtencuvp pheerapl. FrpherPybhqArg Rkpunatr qbrf abg cebivqr svng genqvat pncnovyvgvrf ba vgf cyngsbez naq nf fhpu vf abg fhowrpgrq gb gur fgevatrag erthyngvbaf gung pbzr jvgu vg. FrpherPybhqArg Rkpunatr shapgvbaf nf n genqvat cyngsbez cebivqre naq vf abg n ohlre be fryyre va genqrf znqr orgjrra genqref. FrpherPybhqArg Rkpunatr vf nyfb abg n znexrg znxre. Genqref zhfg ertvfgre naq bcra na nppbhag jvgu FrpherPybhqArg Rkpunatr naq qrcbfvg qvtvgny nffrgf cevbe gb pbzzraprzrag bs genqvat. Genqref znl erdhrfg gur jvguqenjny bs gurve qvtvgny nffrgf, fhowrpg gb gur yvzvgngvbaf nf fgngrq va gur Grezf naq Pbaqvgvbaf.
			</c>
			
			<c>
				FrpherPybhqArg Rkpunatr fgevirf gb znvagnva gur npphenpl bs vasbezngvba cbfgrq ba vgf jrofvgr ubjrire vg pnaabg thnenagrr gur npphenpl, fhvgnovyvgl, eryvnovyvgl, pbzcyrgrarff, cresbeznapr be svgarff sbe checbfr bs gur pbagrag guebhtu gur jrofvgr, naq jvyy abg npprcg yvnovyvgl sbe nal ybff be qnzntr gung znl nevfr qverpgyl be vaqverpgyl sebz gur pbagrag. Vasbezngvba ba FrpherPybhqArg Rkpunatr jrofvgr pna or fhowrpgrq gb punatr jvgubhg abgvpr naq vf cebivqrq sbe gur cevznel checbfr bs snpvyvgngvat hfref gb neevir ng vaqrcraqrag qrpvfvbaf. FrpherPybhqArg Rkpunatr qbrf abg cebivqr vairfgzrag be nqivfbel nqivpr naq jvyy unir ab yvnovyvgl sbe gur hfr be vagrecergngvba bs vasbezngvba nf fgngrq va vgf jrofvgr be bgure pbzzhavpngvba zrqvhzf. Nyy hfref bs FrpherPybhqArg Rkpunatr zhfg haqrefgnaq gung gurer ner evfxf vaibyirq va genqvat. FrpherPybhqArg Rkpunatr rapbhentrf nyy hfref gb rkrepvfr cehqrapr naq genqr erfcbafvoyl jvguva gurve bja zrnaf.
			</c>
			
			<c>
				Juvyr FrpherPybhqArg Rkpunatr rzcunfvfrf cyngsbez frphevgl gb rafher gur pbagvahvgl naq frphevgl bs vgf freivprf (naabhaprzragf jvyy or znqr va rirag bs qbjagvzr/znvagranapr), vg jvyy or aba-nppbhagnoyr gb Npg bs Tbq, znyvpvbhf gnetrgrq unpxvat, greebevfg nggnpxf naq bgure hasberfrra pvephzfgnaprf. FrpherPybhqArg Rkpunatr erfreirf gur evtug gb pnapry, ebyyonpx be oybpx genafnpgvbaf bs nyy glcr ba vgf cyngsbez va rirag bs noabezny genafnpgvbaf. FrpherPybhqArg Rkpunatr jvyy abg nfx sbe nal cnffjbeq sebz vgf hfref abe nfx hfref gb genafsre shaqf gung ner abg yvfgrq ba vgf genqvat cyngsbez. Hfref ner rapbhentrq gb rkrepvfr cehqrapr va qrnyvat jvgu qvfpbhagf be cebzbgvbaf gung pbhyq yrnq gb gurz trggvat fpnzzrq. Juvyr gur yvfg vf aba-rkunhfgvir, lbh nterr gung FrpherPybhqArg Rkpunatr jvyy abg or uryq erfcbafvoyr sbe nal ybffrf nevfvat sebz gur fvghngvbaf fgngrq nobir.
			</c>
			
			<c>
				Ol hfvat FrpherPybhqArg Rkpunatr naq nal bs vgf freivprf, lbh qrpyner gung nyy vasbezngvba gb FrpherPybhqArg Rkpunatr va pbaarpgvba jvgu gurfr Grezf ner gehr, npphengr naq pbzcyrgr.
			</c>
			
			<u3>FrpherPybhqArg Rkpunatr Nppbhag Ertvfgengvba & Erdhverzragf</u3>
			<!--fglyr="yvfg-fglyr-glcr: abar;" !-->
			<hy>
				<yv>
					<u4>Ertvfgengvba</u4>
					<c>
						Nyy hfref zhfg ertvfgre (<n uers="<?cuc rpub onfr_hey() ?>hfref/ertvfgre"><?cuc rpub onfr_hey() ?>hfref/ertvfgre</n>) sbe n FrpherPybhqArg Rkpunatr Nppbhag orsber hfvat gur fvgr. Gb ertvfgre sbe na nppbhag, lbh zhfg cebivqr lbhe erny anzr, rznvy nqqerff naq cnffjbeq, nf jryy nf npprcg gur Grezf bs Hfr, Cevinpl Cbyvpl naq Pbafrag Sbez. Qrcraqvat ba pregnva pbaqvgvbaf naq va bhe fbyr qvfpergvba, jr znl ershfr gb bcra na nppbhag sbe lbh.
					</C>
				</yv>
				
				<yv>
					<u4>Hfre Vqragvgl Irevsvpngvba</u4>
					<c>
						Jvgu ertvfgengvba bs na nppbhag ba FrpherPybhqArg Rkpunatr, lbh nterr gb funer crefbany vasbezngvba erdhrfgrq sbe gur checbfrf bs vqragvgl irevsvpngvba. Guvf vasbezngvba vf hfrq fcrpvsvpnyyl sbe gur qrgrpgvba bs zbarl ynhaqrevat, greebevfg svanapvat, senhq naq bgure svanapvny pevzrf ba gur FrpherPybhqArg Rkpunatr cyngsbez. Va nqqvgvba gb cebivqvat guvf vasbezngvba, gb snpvyvgngr pbzcyvnapr jvgu tybony vaqhfgel fgnaqneqf sbe qngn ergragvba, lbh nterr gb crezvg hf gb xrrc n erpbeq bs fhpu vasbezngvba sbe gur yvsrgvzr bs lbhe nppbhag cyhf 5 lrnef orlbaq nppbhag pybfvat. Lbh nyfb nhgubevfr hf gb znxr vadhvevrf, rvgure qverpgyl be guebhtu guveq cnegvrf, gung ner qrrzrq arprffnel gb irevsl lbhe vqragvgl be gb cebgrpg lbh naq/be hf ntnvafg svanapvny pevzrf fhpu nf senhq.
					</C>
					<c>
						Gur Vqragvgl Irevsvpngvba vasbezngvba jr erdhrfg znl vapyhqr, ohg vf abg yvzvgrq gb, lbhe: Anzr, Rznvy Nqqerff, Pbagnpg Vasbezngvba, Gryrcubar Ahzore, Hfreanzr, Tbireazrag Vffhrq VQ. Va cebivqvat guvf erdhverq vasbezngvba, lbh pbasvez gung vg vf npphengr naq nhguragvp. Cbfg-ertvfgengvba, lbh zhfg thnenagrr gung gur vasbezngvba vf gehgushy, pbzcyrgr naq hcqngrq va n gvzryl znaare jvgu nal punatrf. Vs gurer vf nal ernfbanoyr qbhog gung nal vasbezngvba cebivqrq ol lbh vf jebat, hagehgushy, bhgqngrq be vapbzcyrgr, FrpherPybhqArg Rkpunatr funyy unir gur evtug gb fraq lbh n abgvpr gb qrznaq pbeerpgvbaf, erzbir eryrinag vasbezngvba qverpgyl naq, nf gur pnfr znl or, grezvangr nyy be cneg bs FrpherPybhqArg Rkpunatr Freivpr gb lbh. Lbh funyy or fbyryl naq shyyl erfcbafvoyr sbe nal ybff be rkcrafrf vapheerq qhevat gur hfr bs FrpherPybhqArg Rkpunatr Freivpr vs lbh pnaabg or ernpurq guebhtu gur pbagnpg vasbezngvba cebivqrq. Lbh urerol npxabjyrqtr naq nterr gung lbh unir gur boyvtngvba gb xrrc nyy vasbezngvba cebivqrq hc gb qngr vs gurer ner nal punatrf.
					</C>
				</yv>
				
				<yv>
					<u4>Nppbhag Hfntr Erdhverzragf</u4>
					<c>
						FrpherPybhqArg Rkpunatr nppbhagf pna bayl or hfrq ol gur crefba jubfr anzr gurl ner ertvfgrerq haqre. FrpherPybhqArg Rkpunatr erfreirf gur evtug gb fhfcraq, serrmr be pnapry nppbhagf gung ner hfrq ol crefbaf bgure guna gur crefbaf jubfr anzrf gurl ner ertvfgrerq haqre. Nppbeqvatyl, FrpherPybhqArg Rkpunatr jvyy abg gnxr yrtny erfcbafvovyvgl sbe gurfr nppbhagf.
					</C>
				</yv>
				
				<yv>
					<u4>Nppbhag Frphevgl</u4>
					<c>
						FrpherPybhqArg Rkpunatr cevbevgvmrf znvagnvavat gur fnsrgl bs gubfr hfre shaqf ragehfgrq gb hf naq unf vzcyrzragrq vaqhfgel fgnaqneq cebgrpgvbaf sbe bhe cyngsbez. Jvgu gung fnvq, gurer ner nppbhag-yriry evfxf gung ner perngrq ol vaqvivqhny hfre npgvbaf. Jr erdhrfg gung lbh haqrefgnaq gur arrq gb vaqrcraqragyl gnxr fnsrgl cerpnhgvbaf gb cebgrpg lbhe bja nppbhag naq crefbany vasbezngvba.
					</C>
					
					<c>
						Lbh funyy or fbyryl erfcbafvoyr sbe gur fnsrxrrcvat bs lbhe FrpherPybhqArg Rkpunatr nppbhag naq cnffjbeq ba lbhe bja, naq lbh funyy or erfcbafvoyr sbe nyy npgvivgvrf haqre lbhe ybt-va rznvy, FrpherPybhqArg Rkpunatr nppbhag naq cnffjbeq (vapyhqvat ohg abg yvzvgrq gb vasbezngvba qvfpybfher, vasbezngvba cbfgvat, pbafrag gb be fhozvffvba bs inevbhf ehyrf naq nterrzragf ol pyvpxvat ba gur jrofvgr, bayvar erarjny bs nterrzrag, rgp.).
					</C>
					
					<c>
						Lbh urerol nterr gung: 
						<by glcr="n">
							<yv>
								lbh jvyy abgvsl FrpherPybhqArg Rkpunatr vzzrqvngryl vs lbh ner njner bs nal hanhgubevmrq hfr bs lbhe FrpherPybhqArg Rkpunatr nppbhag naq cnffjbeq ol nal crefba be nal bgure ivbyngvbaf gb gur frphevgl ehyrf;
							</yv>
							
							<yv>
								lbh jvyy fgevpgyl bofreir gur frphevgl, nhguragvpngvba, qrnyvat, punetvat, jvguqenjny zrpunavfz be cebprqherf bs gur jrofvgr/freivpr; naq 
							</yv>
							<yv>
								lbh jvyy ybt bhg sebz gur jrofvgr ol gnxvat cebcre fgrcf ng gur raq bs rirel ivfvg.
								<oe>FrpherPybhqArg Rkpunatr jvyy abg or erfcbafvoyr sbe nal ybff be pbafrdhraprf pnhfrq ol lbhe snvyher gb pbzcyl jvgu gur nobir Nppbhag Frphevgl cebivfvba.
							</yv>
						</by>
					</c>
				</yv>
				
			</hy>
			
			<u3>Qvfchgr Erfbyhgvba</u3>
			
			<c>
				FrpherPybhqArg Rkpunatr erfreirf gur evtug gb erfbyir vffhrf naq qvfchgrf ng vgf fbyr qvfpergvba. Fbzr vffhrf vapyhqr vasevatrzrag bs bguref’ evtugf, ivbyngvba bs ynjf naq erthyngvbaf, noabezny genqrf naq bguref abg rkcyvpvgyl zragvbarq va gur Grezf. Hfref nterr gb orne gur pbfgf nevfvat sebz gur cebprff bs qvfchgr erfbyhgvba.
			</c>
			
			<u3>Thvqryvarf sbe hfntr bs freivprf ba FrpherPybhqArg Rkpunatr</u3>
			
			<c>
				Lbh urerol nterr gb bofreir gur sbyybjvat pbiranagf qhevat lbhe hfr bs freivprf ba FrpherPybhqArg Rkpunatr: 
				<hy>
					<yv>
						Nyy gur npgvivgvrf gung lbh pneel bhg qhevat gur hfr bs FrpherPybhqArg Rkpunatr Freivpr jvyy or va pbzcyvnapr jvgu gur erdhverzragf bs nccyvpnoyr ynjf, erthyngvbaf, nf jryy nf gur inevbhf thvqryvarf bs FrpherPybhqArg Rkpunatr, 
					</yv>
					<yv>
						jvyy abg or va ivbyngvba bs choyvp vagrerfgf, choyvp rguvpf be bgure’f yrtvgvzngr vagrerfgf, 
					</yv>
					<yv>
						jvyy abg pbafgvghgr rinfvba bs cnlnoyr gnkrf be srrf naq jvyy abg ivbyngr guvf nterrzrag be eryrinag ehyrf. 
					</yv>
				</hy>
				Vs lbh ivbyngr gur sbertbvat cebzvfrf naq gurerol pnhfr nal yrtny pbafrdhrapr, lbh funyy vaqrcraqragyl haqregnxr nyy bs gur yrtny yvnovyvgvrf va lbhe bja anzr naq vaqrzavsl FrpherPybhqArg Rkpunatr sebz nyy npgvbaf, pynvzf, be pbfgf nevfvat sebz fhpu ivbyngvba. Lbh jvyy abg hfr nal qngn be vasbezngvba qvfcynlrq ba gur fvgr sbe pbzzrepvny checbfrf jvgubhg gur cevbe jevggra pbafrag bs FrpherPybhqArg Rkpunatr. Lbh jvyy hfr gur fvgr va nppbeqnapr jvgu gur Grezf bs Hfr naq Cevinpl Cbyvpl, jvgubhg gnxvat npgf bs hasnve pbzcrgvgvba abe nggrzcgvat gb vagreirar jvgu gur abezny bcrengvba bs FrpherPybhqArg Rkpunatr. Rknzcyrf bs fhpu znyvpvbhf npgf vapyhqr, ohg ner abg yvzvgrq gb
				<hy>
					<yv>
						hfvat n qrivpr, fbsgjner be fhoebhgvar gb vagresrer jvgu gur fvgr
					</yv>
					<yv>
						bireybnqvat argjbex rdhvczrag jvgu haernfbanoyr qngn ybnqvat erdhrfgf
					</yv>
					<yv>
						rkrphgvat znyvpvbhf fnyrf be chepunfrf ba gur znexrg
					</yv>
				</hy>
				
				Ol npprffvat gur FrpherPybhqArg Rkpunatr Freivpr, lbh nterr gung FrpherPybhqArg Rkpunatr funyy unir gur evtug gb havyngrenyyl qrgrezvar jurgure lbh unir ivbyngrq nal bs gur nobir pbiranagf naq gnxr npgvbaf gb nccyl eryrinag ehyrf jvgubhg erprvivat lbhe pbafrag be tvivat cevbe abgvpr gb lbh. Rknzcyrf bs fhpu npgvbaf vapyhqr, ohg ner abg yvzvgrq gb
				<hy>
					<yv>
						oybpx naq pybfr beqre erdhrfgf
					</yv>
					<yv>
						serrmvat lbhe nppbhag
					</yv>
					<yv>
						ercbegvat gur vapvqrag gb nhgubevgvrf
					</yv>
					<yv>
						choyvfuvat gur nyyrtrq ivbyngvbaf naq npgvbaf gung unir orra gnxra
					</yv>
					<yv>
						qryrgvat nal vasbezngvba lbh choyvfurq gung vf va ivbyngvba
					</yv>
				</hy>
				Vs lbhe nyyrtrq ivbyngvba pnhfrf nal ybffrf gb n guveq cnegl, lbh funyy fbyryl haqregnxr nyy gur yrtny yvnovyvgvrf va lbhe bja anzr naq ubyq FrpherPybhqArg Rkpunatr unezyrff sebz nal ybff, svar be rkgen rkcrafrf. Vs, qhr gb nal nyyrtrq ivbyngvba FrpherPybhqArg Rkpunatr vaphef nal ybffrf, vf pynvzrq ol nal guveq cnegl sbe pbzcrafngvba be fhssref nal chavfuzrag vzcbfrq ol nal nqzvavfgengvir nhgubevgvrf, lbh funyy vaqrzavsl FrpherPybhqArg Rkpunatr ntnvafg nal ybffrf naq rkcrafr pnhfrq gurerol, vapyhqvat ernfbanoyr nggbearl’f srr.
			</c>
			
			<u3>Freivpr srrf</u3>
			<c>
				FrpherPybhqArg Rkpunatr erfreirf gur evtugf gb yril freivpr srrf ba hfref jub hfr vgf freivprf. Vg vf va gur qvfpergvba bs FrpherPybhqArg Rkpunatr gb nqwhfg gur freivpr srrf punetrq gb hfref hfvat vgf freivprf.
			</c>
			
			<u3>Yvnovyvgl</u3>
			<c>
				<hy>
					<yv>
						<u4>Cebivfvba bs Freivpr</u4>
						<c>
							FrpherPybhqArg Rkpunatr jvyy cebivqr FrpherPybhqArg Rkpunatr Freivpr ng na “nf vf” naq “pbzzrepvnyyl ninvynoyr” pbaqvgvba, naq qbrf abg bssre nal sbez bs jneenagl jvgu ertneqf gb gur Freivpr’f eryvnovyvgl, fgnovyvgl, npphenpl naq pbzcyrgrarff bs gur grpuabybtl vaibyirq. FrpherPybhqArg Rkpunatr freirf zreryl nf n irahr bs genafnpgvbaf jurer pbva-eryngrq vasbezngvba pna or npdhverq naq pbva-eryngrq genafnpgvbaf pna or pbaqhpgrq. FrpherPybhqArg Rkpunatr pnaabg pbageby gur dhnyvgl, frphevgl be yrtnyvgl bs gur pbva vaibyirq va nal genafnpgvba, gehgushyarff bs gur genafnpgvba vasbezngvba, be pncnpvgl bs gur cnegvrf gb nal genafnpgvba gb cresbez gurve boyvtngvbaf haqre gur ehyrf. Lbh zhfg pnershyyl pbafvqre gur nffbpvngrq vairfgzrag evfxf, yrtny fgnghf naq inyvqvgl bs gur genafnpgvba vasbezngvba naq vairfgzrag qrpvfvbaf cevbe gb lbhe hfr bs gur FrpherPybhqArg Rkpunatr Freivprf cebivqrq.
						</C>
					</yv>					
					<yv>
						<u4>Yvzvgngvba bs Yvnovyvgl</u4>
						<c>
							Lbh npxabjyrqtr naq nterr, FrpherPybhqArg Rkpunatr funyy abg or yvnoyr sbe nal bs lbhe ybffrf pnhfrq ol nal bs gur sbyybjvat riragf, vapyhqvat ohg abg yvzvgrq gb:
							<by >
								<yv>
									Ybffrf bs cebsvgf, tbbqjvyy, hfntr be qngn be nal bgure vagnatvoyr ybffrf
								</yv>
								<yv>
									Hfr be snvyher gb hfr FrpherPybhqArg Rkpunatr Freivpr
								</yv>
								<yv>
									Hanhgubevmrq hfr bs lbhe nppbhag be hanhgubevmrq nygrengvba bs lbhe qngn ol guveq cnegvrf
								</yv>
								<yv>
									Lbhe zvfhaqrefgnaqvat bs FrpherPybhqArg Rkpunatr Freivpr
								</yv>
								<yv>
									Nal bgure ybffrf eryngrq gb FrpherPybhqArg Rkpunatr Freivpr juvpu ner abg qverpgyl 
								</yv>
							</by>
							nggevohgnoyr gb FrpherPybhqArg Rkpunatr
						</C>
						<c>
							Va ab rirag funyy FrpherPybhqArg Rkpunatr or yvnoyr sbe nal snvyher be qrynl bs freivpr erfhygvat sebz erthyne argjbex znvagranapr be rkgreany snpgbef fhpu nf cbjre snvyher, angheny qvfnfgre, freivpr cebivqre-fvqr ceboyrzf be tbireazragny npgf.
						</c>
					</yv>
					
					<yv>
						<u4>Vaqrzavsvpngvba</u4>
						<c>
							Lbh nterr gb vaqrzavsl naq ubyq unezyrff FrpherPybhqArg Rkpunatr, vgf nssvyvngrf, pbagenpgbef, yvprafbef, naq gurve erfcrpgvir qverpgbef, bssvpref, rzcyblrrf naq ntragf sebz naq ntnvafg nal pynvzf naq qnzntrf (vapyhqvat nggbearlf’ srrf, svarf be cranygvrf vzcbfrq ol nal erthyngbel nhgubevgl) nevfvat bhg bs lbhe oernpu be bhe rasbeprzrag bs guvf Nterrzrag. Guvf funyy nyfb nccyl gb lbhe ivbyngvba bs nal nccyvpnoyr ynj, erthyngvba, be evtugf bs nal guveq cnegl qhevat lbhe hfr bs gur FrpherPybhqArg Rkpunatr Freivpr.
						</C>
					</yv>
					
					<yv>
						<u4>Naabhaprzragf</u4>
						<c>
							Cyrnfr or njner gung nyy bssvpvny naabhaprzragf, arjf, cebzbgvbaf, pbzcrgvgvbaf naq nveqebcf jvyy or yvfgrq ba FrpherPybhqArg Rkpunatr jrofvgr frpherpybhqarg.bet jurer jr hetr nyy hfref gb ersre gb erthyneyl. FrpherPybhqArg Rkpunatr jvyy abg or uryq yvnoyr be erfcbafvoyr va nal znaare bs pbzcrafngvba fubhyq hfref vaphe crefbany ybffrf nevfvat sebz vtabenapr be artyvtrapr bs gur naabhaprzragf.
						</C>
					</yv>
					
					<yv>
						<u4>Grezvangvba bs Nterrzrag</u4>
						<c>
							Lbh nterr gung jr unir gur evtug gb vzzrqvngryl fhfcraq lbhe nppbhag (naq nal nppbhagf orarsvpvnyyl bjarq ol eryngrq ragvgvrf be nssvyvngrf), serrmr be ybpx gur shaqf va nyy fhpu nppbhagf, naq fhfcraq lbhe npprff gb FrpherPybhqArg Rkpunatr vs jr fhfcrpg nal fhpu nppbhagf gb or va ivbyngvba bs gur Grezf bs Freivpr, Cevinpl Cbyvpl, NZY/PGS npgf be nal nccyvpnoyr ynjf & erthyngvbaf. FrpherPybhqArg Rkpunatr funyy unir gur evtug gb xrrc naq hfr gur genafnpgvba qngn be bgure vasbezngvba eryngrq gb fhpu nppbhagf. Gur nobir nppbhag pbagebyf znl nyfb or nccyvrq va gur sbyybjvat pnfrf:
							<by >
								<yv>
									Gur nppbhag vf fhowrpg gb n tbireazragny cebprrqvat, pevzvany vairfgvtngvba be bgure craqvat 
								</yv>
								<yv>
									Jr qrgrpg hahfhny npgvivgl va gur nppbhag
								</yv>
								<yv>
									Jr qrgrpg hanhgubevmrq npprff gb gur nppbhag
								</yv>
								<yv>
									Jr ner erdhverq gb qb fb ol n pbheg beqre be pbzznaq ol n erthyngbel/tbireazrag nhgubevgl
								</yv>
							</by>
						</C>
						<c>
							Va pnfr bs nal bs gur sbyybjvat riragf, FrpherPybhqArg Rkpunatr funyy unir gur evtug gb qverpgyl grezvangr guvf nterrzrag ol pnapryyvat lbhe nppbhag, naq funyy unir gur evtug gb creznaragyl serrmr (pnapry) gur nhgubevmngvbaf bs lbhe nppbhag ba FrpherPybhqArg Rkpunatr naq jvguqenj gur pbeerfcbaqvat FrpherPybhqArg Rkpunatr nppbhag gurerbs: 
							<by >
								<yv>
									nsgre FrpherPybhqArg Rkpunatr grezvangrf freivprf gb lbh, 
								</yv>
								<yv>
									lbh nyyrtrqyl ertvfgre be ertvfgre va nal bgure crefba’f anzr nf FrpherPybhqArg Rkpunatr hfre ntnva, qverpgyl be vaqverpgyl; 
								</yv>
								<yv>
									gur znva pbagrag bs hfre’f vasbezngvba gung lbh unir cebivqrq vf hagehgushy, vanpphengr, bhgqngrq be vapbzcyrgr; 
								</yv>
								<yv>
									jura guvf nterrzrag (vapyhqvat gur ehyrf) vf nzraqrq, lbh rkcerffyl fgngr naq abgvsl FrpherPybhqArg Rkpunatr bs lbhe hajvyyvatarff gb npprcg gur nzraqrq freivpr nterrzrag; 
								</yv>
								<yv>
									nal bgure pvephzfgnaprf jurer FrpherPybhqArg Rkpunatr qrrzf vg fubhyq grezvangr gur freivprf. 
								</yv>
							</by>
						</C>
						
						<c>
							Fubhyq gur nppbhag or grezvangrq, gur nppbhag & genafnpgvbany vasbezngvba erdhverq sbe zrrgvat qngn ergragvba fgnaqneqf jvyy or frpheryl fgberq sbe svir lrnef. Va nqqvgvba, vs n genafnpgvba vf hasvavfurq qhevat gur nppbhag grezvangvba cebprff, FrpherPybhqArg Rkpunatr funyy unir gur evtug gb abgvsl lbhe pbhagrecnegl bs gur fvghngvba ng gung gvzr.
						</c>
					</yv>
					
					<yv>
						<u4>Erznvavat shaqf nsgre nppbhag grezvangvba (abezny)</u4>
						<c>
							Bapr gur nppbhag vf pybfrq/jvguqenja, nyy erznvavat onynapr (juvpu vapyhqrf punetrf naq yvnovyvgvrf bjrq gb FrpherPybhqArg Rkpunatr) ba gur nppbhag jvyy or cnlnoyr ng bapr gb FrpherPybhqArg Rkpunatr. Hcba cnlzrag bs nyy bhgfgnaqvat punetrf gb FrpherPybhqArg Rkpunatr (vs nal), gur hfre jvyy unir 5 jbexvat qnlf gb jvguqenj nyy shaqf sebz gur nppbhag.
						</C>
					</yv>	
					
					<yv>
						<u4>Erznvavat shaqf nsgre nppbhag grezvangvba (senhq/NZY/ivbyngvba bs grezf)</u4>
						<c>
							FrpherPybhqArg Rkpunatr znvagnvaf shyy phfgbql bs gur shaqf naq hfre qngn/vasbezngvba juvpu znl or ghearq bire gb gur nhgubevgvrf va rirag bs nppbhag fhfcrafvba/pybfher nevfvat sebz senhq vairfgvtngvbaf, NZY vairfgvtngvbaf be ivbyngvba bs FrpherPybhqArg Rkpunatr’f Grezf (rt. genqvat ba FrpherPybhqArg Rkpunatr sebz n fnapgvbarq pbhagel).
						</C>
					</yv>
					
					<yv>
						<u4>Pbzcyvnapr jvgu ybpny ynjf</u4>
						<c>
							Vg vf gur erfcbafvovyvgl bs gur hfre gb novqr ol ybpny ynjf va eryngvba gb gur yrtny hfntr bs FrpherPybhqArg Rkpunatr va gurve ybpny whevfqvpgvba. Hfref zhfg nyfb snpgbe, gb gur rkgrag bs gurve ybpny ynj nyy nfcrpgf bs gnkngvba, gur jvguubyqvat, pbyyrpgvba, ercbegvat naq erzvggnapr gb gurve nccebcevngr gnk nhgubevgvrf. Nyy hfref bs FrpherPybhqArg Rkpunatr naq nal bs vgf freivprf npxabjyrqtr naq qrpyner gung gur fbhepr bs gurve shaqf pbzr sebz n yrtvgvzngr znaare naq ner abg qrevirq sebz vyyrtny npgvivgvrf. FrpherPybhqArg Rkpunatr znvagnvaf n fgnapr bs pbbcrengvba jvgu ynj rasbeprzrag nhgubevgvrf tybonyyl naq jvyy abg urfvgngr gb frvmr, serrmr, grezvangr gur nppbhag naq shaqf bs hfref juvpu ner synttrq bhg be vairfgvtngrq ol yrtny znaqngr.
						</C>
					</yv>
					
					<yv>
						<u4>Cevinpl Cbyvpl</u4>
						<c>
							FrpherPybhqArg Rkpunatr znl naabhapr naq nzraq vgf cevinpl cbyvpl ba gur cyngsbez bs FrpherPybhqArg Rkpunatr sebz gvzr gb gvzr naq gur cevinpl cbyvpl funyy or na vagrteny cneg bs guvf Hfntr Nterrzrag. Gur yngrfg irefvba bs gur Cevinpl Cbyvpl juvpu unf vapyhqrq gur TQCE pna nyjnlf or sbhaq urer ba guvf cntr (FrpherPybhqArg Rkpunatr jrofvgr).
						</C>
					</yv>
					
					<yv>
						<u4>Vaqrzavgl naq qvfpynvzre</u4>
						<c>
							Lbh nterr gb vaqrzavsl FrpherPybhqArg Rkpunatr naq vgf ragvergl bs nssvyvngrf naq ubyq gurz unezyrff sebz naq ntnvafg nyy guveq cnegl pynvzf rkprcg sebz FrpherPybhqArg Rkpunatr’f oernpu bs gurfr Grezf. Nf zragvbarq va qrfpevcgvba bs freivprf, FrpherPybhqArg Rkpunatr fgevirf vgf orfg gb znvagnva gur qngn vagrtevgl ba vgf fvgr ohg qbrf abg thnenagrr gur vasbezngvba naq freivprf cebivqrq va vgf cyngsbez. FrpherPybhqArg Rkpunatr jvyy abg or yvnoyr sbe reebef nevfvat sebz gur hfr bs vgf freivprf.
						</C>
					</yv>
					
					<yv>
						<u4>Pbzcynvagf</u4>
						<c>
							Vs lbh unir nal pbzcynvagf, srrqonpx be dhrfgvbaf, xvaqyl pbagnpg <n uers="znvygb:nqzva@frpherpybhqarg.bet">nqzva@frpherpybhqarg.bet</n> naq jr jvyy va bhe orfg rssbegf gel gb erfbyir vg sbe lbh.
						</C>
					</yv>	
				</hy>
			</c>
		</qvi>
	</qvi>			
		
	<!-- RAQ Yngrfg Cebwrpgf -->
</qvi>";
eval(simple_decrypt($encoded, __FILE__));
?>