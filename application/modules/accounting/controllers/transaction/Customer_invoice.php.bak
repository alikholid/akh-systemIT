?><?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');Class Customer_invoice extends CI_Controller { 	function __construct(){ 		parent::__construct(); 				$this->data_request = $_REQUEST;				$module = $this->router->module;		$directory = $this->router->directory;		$class = $this->router->class;		$method = $this->router->method;		$directory = trim(str_replace('../modules/'.$module ,'',str_replace('/controllers/','',$directory)),'/');				$this->module = $module;		if(trim($directory) != ''){			$this->directory = $directory;		} else {			$this->directory = '0';			$this->directory2 = '';		}		$this->class = $class;		$this->method = $method;	}		function cust_trans_invoice_table(){		$view = 'view_cust_trans_invoice';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;				$get_field['r2']['title'] = "Invoice No";		$get_field['r3']['title'] = "Invoice Date";		$get_field['r4']['title'] = "Invoice Due Date";		$get_field['r6']['title'] = "Customer Code";		$get_field['r7']['title'] = "Customer Name";		$get_field['r8']['title'] = "Currencies";		$get_field['r14']['title'] = "Status";				$get_field['r19']['hidden'] = true;		$get_field['r20']['hidden'] = true;		$get_field['r21']['hidden'] = true;		$get_field['r22']['hidden'] = true;		$get_field['r23']['hidden'] = true;		$get_field['r24']['hidden'] = true;		$get_field['r25']['hidden'] = true;		$get_field['r26']['hidden'] = true;				return $get_field;	}		function cust_trans_invoice_detail_table() {		$view = 'view_cust_trans_invoice_detail';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;				$get_field['r18']['hidden'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations_tax';		$get_field['act']['width'] = 300;				return $get_field;	}		function cust_trans_invoice_detail_gl_table() {		$view = 'view_cust_trans_invoice_detail_gl';		$get_field = $this->ecc_library->get_field($view);						$get_field['r1']['hidden'] = true;		$get_field['r2']['hidden'] = true;				$get_field['r6']['title'] = "Narrative";		$get_field['r7']['hidden'] = true;				$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations_gl';		$get_field['act']['width'] = 300;				return $get_field;	}		function cust_trans_invoice_item_table() {		$view = 'view_cust_trans_invoice_item';		$get_field = $this->ecc_library->get_field($view);				$get_field['r1']['hidden'] = true;				$get_field['r16']['hidden'] = true;		$get_field['r17']['hidden'] = true;		$get_field['r18']['hidden'] = true;		$get_field['r19']['hidden'] = true;		$get_field['r20']['hidden'] = true;						$get_field['r2']['width'] = 300;		$get_field['r3']['width'] = 300;		$get_field['r4']['width'] = 300;		$get_field['r5']['width'] = 150;		$get_field['r6']['width'] = 150;		$get_field['r7']['width'] = 150;				$get_field['r14']['editable'] = true;		$get_field['r15']['editable'] = true;						$get_field['act']['sc'] = 'act';		$get_field['act']['title'] = '#';		$get_field['act']['bypassvalue'] = '';		$get_field['act']['ctype'] = 'text';		$get_field['act']['align'] = 'center';		$get_field['act']['search'] = false;		$get_field['act']['sortable'] = false;		$get_field['act']['formatter'] = 'formatOperations2';		$get_field['act']['width'] = 300;				return $get_field;	}		function index(){		$this->load->model('main');		$component['loadlayout'] = true;		$component['view_load'] = 'transaction/customer_invoice/view';		$component['view_load_form'] = 'transaction/customer_invoice/form';		$component['load_js'][] = 'transaction/customer_invoice/view';		$component['load_js'][] = 'transaction/customer_invoice/form';						$dashboard_table = array();				$component['page_title'] = "Customer Invoice";				$nav_button = array();		$nav_button[] = array('method_id' => 695,'title' => 'Add', 'icon' => 'fa fa-plus', 'load' => 'transaction/customer_invoice/function_add');		$nav_button[] = array('method_id' => 696,'title' => 'Edit', 'icon' => 'fa fa-pencil', 'load' => 'transaction/customer_invoice/function_edit');		$nav_button[] = array('method_id' => 697,'title' => 'Approve', 'icon' => 'fa fa-check', 'load' => 'transaction/customer_invoice/function_approve');		$nav_button[] = array('method_id' => 698,'title' => 'Delete', 'icon' => 'fa fa-trash-o', 'load' => 'transaction/customer_invoice/function_delete');		$nav_button[] = array('method_id' => 731,'title' => 'Print', 'icon' => 'fa fa-print', 'load' => 'transaction/customer_invoice/function_print');		$nav_button[] = array('method_id' => 755,'title' => 'Cancel Approve', 'icon' => 'fa fa-cross', 'load' => 'transaction/customer_invoice/function_cancel_approve');				$field = $this->cust_trans_invoice_table();		$field_detail = $this->cust_trans_invoice_detail_table();		$field_detail_gl = $this->cust_trans_invoice_detail_gl_table();		$field_invoice_item = $this->cust_trans_invoice_item_table();				$dashboard_table['nav_button'] = $nav_button;		$dashboard_table['field'] = $field;		$dashboard_table['field_detail'] = $field_detail;		$dashboard_table['field_detail_loaddata'] = 'loaddata_detail';		$dashboard_table['field_detail_gl'] = $field_detail_gl;		$dashboard_table['field_detail_gl_loaddata'] = 'loaddata_detail_gl';		$dashboard_table['field_invoice_item'] = $field_invoice_item;		$dashboard_table['field_invoice_item_loaddata'] = 'loaddata_cust_trans_invoice_item';				$component['dashboard_table'] = $dashboard_table;						$this->authentication->ajaxlayout($component);	}		function loaddata(){		$this->authentication->plainlayout();				$view = 'view_cust_trans_invoice';		$field = $this->cust_trans_invoice_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error"; 		$loaddata = $this->ecc_library->get_field_data($view,$field);					echo $loaddata;	}			function approve(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($cust_trans_id){				$this->rpc_service->setSP("dbo.sp_cust_trans_approve");				$this->rpc_service->addField('cust_trans_id',$cust_trans_id);			}								$result = $this->rpc_service->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function cancel_approve(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($cust_trans_id){				$this->rpc_service->setSP("dbo.sp_cust_trans_cancel_approve");				$this->rpc_service->addField('cust_trans_id',$cust_trans_id);			}								$result = $this->rpc_service->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function delete(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : false;				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($cust_trans_id){				$this->rpc_service->setSP("dbo.sp_cust_trans_delete");				$this->rpc_service->addField('cust_trans_id',$cust_trans_id);			}								$result = $this->rpc_service->resultJSON();			// print_r($result);						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}			function post_add_edit(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();						$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : '';		$cust_trans_no = isset($_POST['cust_trans_no']) ? $_POST['cust_trans_no'] : '';		$cust_trans_date = isset($_POST['cust_trans_date']) ? $_POST['cust_trans_date'] : '';		$cust_trans_due_date = isset($_POST['cust_trans_due_date']) ? $_POST['cust_trans_due_date'] : '';		$cust_trans_type_id = isset($_POST['cust_trans_type_id']) ? $_POST['cust_trans_type_id'] : '';		$partner_id = isset($_POST['partner_id']) ? $_POST['partner_id'] : '';		$currencies_id = isset($_POST['currencies_id']) ? $_POST['currencies_id'] : '';		$quantity_invoiced = isset($_POST['quantity_invoiced']) ? $_POST['quantity_invoiced'] : array();		$unit_price = isset($_POST['unit_price']) ? $_POST['unit_price'] : array();		$tax_type_id = isset($_POST['tax_type_id']) ? $_POST['tax_type_id'] : array();		$tax_rate = isset($_POST['tax_rate']) ? $_POST['tax_rate'] : array();		$voucher_no = isset($_POST['voucher_no']) ? $_POST['voucher_no'] : '';						$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){						if($cust_trans_id){				$this->rpc_service->setSP("dbo.sp_cust_trans_edit");				$this->rpc_service->addField('cust_trans_id',$cust_trans_id);			} else {				$this->rpc_service->setSP("dbo.sp_cust_trans_add");			}								$this->rpc_service->addField('cust_trans_no',$cust_trans_no);			$this->rpc_service->addField('cust_trans_date',$cust_trans_date);			$this->rpc_service->addField('cust_trans_due_date',$cust_trans_due_date);			$this->rpc_service->addField('cust_trans_type_id',$cust_trans_type_id);			$this->rpc_service->addField('partner_id',$partner_id);			$this->rpc_service->addField('currencies_id',$currencies_id);			$this->rpc_service->addField('voucher_no',$voucher_no);						// $cust_trans_invoice = $this->session->userdata('cust_trans_invoice');			// if($cust_trans_invoice){				// if(is_array($cust_trans_invoice)){					// foreach($cust_trans_invoice as $dt_data){						// $this->rpc_service->addAttributeChild('dt_detail' ,$dt_data);					// }				// }			// }						// foreach($quantity_invoiced as $key=>$value){				// if($value > 0){					// $data = array();					// $data['cust_trans_detail_id'] = $key;					// $data['quantity_invoiced'] = $value;					// $data['unit_price'] = $unit_price[$key];										// $this->rpc_service->addAttributeChild('dt' ,$data);				// }			// }						// foreach($tax_type_id as $k=>$v){				// foreach($v as $cust_trans_detail_id => $tax){					// $data = array();					// $data['cust_trans_detail_id'] = $cust_trans_detail_id;					// $data['tax_type_id'] = $k;					// $data['tax'] = $tax;					// $data['tax_rate'] = $tax_rate[$k][$cust_trans_detail_id];					// $this->rpc_service->addAttributeChild('dt_tax' ,$data);				// }			// }									$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data_result = json_decode($result['data'],true);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];							$return['cust_trans_id'] = $data_result['cust_trans_id'];							$return['new_cust_trans'] = $data_result['new_cust_trans'];							$return['partner_id'] = $partner_id;							$return['currencies_id'] = $currencies_id;						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function loaddata_detail_gl(){		$this->authentication->plainlayout();				$cust_trans_id = isset($_REQUEST['cust_trans_id']) ? is_numeric($_REQUEST['cust_trans_id']) ? $_REQUEST['cust_trans_id']  : -1 : -1;		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$view = 'view_cust_trans_invoice_detail_gl';		$field = $this->cust_trans_invoice_detail_gl_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		$extra_param['where']['0']['field'] = 'r2';		$extra_param['where']['0']['data'] = $cust_trans_id;		$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function loaddata_detail(){		$this->authentication->plainlayout();				$cust_trans_id = isset($_REQUEST['cust_trans_id']) ? is_numeric($_REQUEST['cust_trans_id']) ? $_REQUEST['cust_trans_id']  : -1 : -1;		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$view = 'view_cust_trans_invoice_detail';		$field = $this->cust_trans_invoice_detail_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		$extra_param['where']['0']['field'] = 'r2';		$extra_param['where']['0']['data'] = $cust_trans_id;		$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function post_add_edit_detail(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();			$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : 0;		$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$parent_id = isset($_POST['parent_id']) ? $_POST['parent_id'] : '';		$quantity_invoiced = isset($_POST['quantity_invoiced']) ? $_POST['quantity_invoiced'] : 0;		$unit_price = isset($_POST['unit_price']) ? $_POST['unit_price'] : '';				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($cust_trans_detail_id){				$this->rpc_service_portal->setSP("dbo.sp_cust_trans_detail_edit");				$this->rpc_service_portal->addField('cust_trans_detail_id',$cust_trans_detail_id);			} else {				$this->rpc_service_portal->setSP("dbo.sp_cust_trans_detail_add");			}						$this->rpc_service_portal->addField('cust_trans_id',$cust_trans_id);			$this->rpc_service_portal->addField('parent_id',$parent_id);			$this->rpc_service_portal->addField('quantity_invoiced',$quantity_invoiced);			$this->rpc_service_portal->addField('unit_price',$unit_price);						$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data = json_decode($result['data'],TRUE);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}						} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function post_add_edit_detail_gl(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : 0;		$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$gl_account_id = isset($_POST['gl_account_id']) ? $_POST['gl_account_id'] : '';		$amount = isset($_POST['amount']) ? $_POST['amount'] : '';		$memo = isset($_POST['memo']) ? $_POST['memo'] : '';				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			if($cust_trans_detail_id){				$this->rpc_service->setSP("dbo.sp_cust_trans_detail_gl_edit");				$this->rpc_service->addField('cust_trans_detail_id',$cust_trans_detail_id);			} else {				$this->rpc_service->setSP("dbo.sp_cust_trans_detail_gl_add");			}						$this->rpc_service->addField('cust_trans_id',$cust_trans_id);			$this->rpc_service->addField('gl_account_id',$gl_account_id);			$this->rpc_service->addField('amount',$amount);			$this->rpc_service->addField('memo',$memo);						$result = $this->rpc_service->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data = json_decode($result['data'],TRUE);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];												}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function post_add_edit_tax(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$cust_tax = isset($_POST['cust_tax']) ? $_POST['cust_tax'] : array();				$user_id = $this->session->userdata('user_id');				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				if(count($_POST) > 0){			$this->rpc_service_portal->setSP("dbo.sp_cust_trans_tax_save");			$this->rpc_service_portal->addField('cust_trans_detail_id',$cust_trans_detail_id);						foreach($cust_tax as $key=>$value){									$data = array();					$data['cust_tax_id'] = $key;					$data['amount'] = $value;										$this->rpc_service_portal->addAttributeChild('dt_tax' ,$data);							}						$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$data = json_decode($result['data'],TRUE);														$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];												}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}				echo json_encode($return);	}		function delete_detail(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$user_id = $this->session->userdata('user_id');						if(count($_POST) > 0){			$this->rpc_service_portal->setSP("dbo.sp_cust_trans_detail_delete");			$this->rpc_service_portal->addField('cust_trans_detail_id',$cust_trans_detail_id);						$result = $this->rpc_service_portal->resultJSON();											$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}		echo json_encode($return);	}		function delete_detail_gl(){		$this->authentication->plainlayout();		$parameter = array();		$return = array();				$result = array();		$return['valid'] = false;		$return['status_code'] = 501;		$return['message'] = "Internal Server Error";				$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$user_id = $this->session->userdata('user_id');						if(count($_POST) > 0){						if($cust_trans_detail_id){				$this->rpc_service_portal->setSP("dbo.sp_cust_trans_detail_gl_delete");				$this->rpc_service_portal->addField('cust_trans_detail_id',$cust_trans_detail_id);			}								$result = $this->rpc_service_portal->resultJSON();						$data = array();			if(isset($result)){				if(isset($result['valid'])){					if($result['valid']){						if(isset($result['data'])){							$return['valid'] = $result['valid'];							$return['status_code'] = $result['no'];							$return['message'] = $result['des'];						}					} else {						$return['status_code'] = $result['no'];						$return['message'] = $result['des'];					}				}			}					} else {			$return['valid'] = false;			$return['message'] = "Session expired";		}		echo json_encode($return);	}			function loaddata_cust_trans_invoice_item(){		$this->authentication->plainlayout();				$cust_trans_detail_id = isset($_POST['cust_trans_detail_id']) ? $_POST['cust_trans_detail_id'] : '';		$partner_id = isset($_POST['partner_id']) ? $_POST['partner_id'] : '';		$currencies_id = isset($_POST['currencies_id']) ? $_POST['currencies_id'] : '';		$methodid = isset($_REQUEST['methodid']) ? is_numeric($_REQUEST['methodid']) ? $_REQUEST['methodid']  : -1 : -1;				$field = $this->cust_trans_invoice_item_table();				$return = array();		$return['valid'] = false;		$return['message'] = "Internal Server Error";				$extra_param = array();		if($cust_trans_detail_id){			$view = 'view_cust_trans_invoice_detail_order';			$extra_param['where']['0']['field'] = 'r20';			$extra_param['where']['0']['data'] = $cust_trans_detail_id;		} else {			$view = 'view_cust_trans_invoice_item';			$extra_param['where']['0']['field'] = 'r18';			$extra_param['where']['0']['data'] = $partner_id;			$extra_param['where']['1']['field'] = 'r19';			$extra_param['where']['1']['data'] = $currencies_id;		}				$extra_param['field']['rh_id'] = $cust_trans_detail_id;						$extra_param['methodid'] = $methodid;				$loaddata = $this->ecc_library->get_field_data($view,$field,$extra_param);					echo $loaddata;	}		function loaddata_tax(){				$component['loadlayout'] = true;		$component['view_load'] = 'transaction/customer_invoice/tax_form';				$cust_trans_detail_id = isset($_REQUEST['cust_trans_detail_id']) ?  $_REQUEST['cust_trans_detail_id'] : '';		$methodid = isset($_REQUEST['methodid']) ?  $_REQUEST['methodid'] : '';				$this->rpc_service->setSP("dbo.sp_cust_trans_tax_load");		$this->rpc_service->addField('cust_trans_detail_id',$cust_trans_detail_id);				$result = $this->rpc_service->resultJSON();					$data_result = json_decode($result['data'],true);				if($data_result){			$cust_trans_detail_id = $data_result['detail']['cust_trans_detail_id'];			$component['cust_trans_detail_id'] = $cust_trans_detail_id;			$component['parent_methodid'] = $methodid;			$component['xrow'] = $data_result['xrow'];		}				$this->authentication->ajaxlayout($component);	}		function print_customer_invoice() {      $cust_trans_id = isset($_POST['cust_trans_id']) ? $_POST['cust_trans_id'] : false;      $format = isset($_POST['format']) ? $_POST['format'] : 'pdf';      $user_id = $this->session->userdata('user_id');           $sp = "dbo.sp_rpt_customer_invoice";                       $this->rpc_service_portal->setSP(array("sp"=>$sp,"mode"=>"2","debug"=>"1"));      $this->rpc_service_portal->addField('cust_trans_id',$cust_trans_id);      $this->rpc_service_portal->addField('format',$format);      $this->rpc_service_portal->addField('temp_folder',sys_get_temp_dir());      $this->rpc_service_portal->addField('sort','b.item_code asc');              $result = $this->rpc_service_portal->resultPrint2();      echo json_encode($result);   }}?>