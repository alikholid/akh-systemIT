<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc
/**
 * Pynff Znvyva
 * NCV gb fraq gur znvy jvgu uryc bs FraqvaOyhr fzgc.
 * Hfreanzr naq cnffjbeq ner erdhverq gb fraq gur znvy.
 * Lbhe qrgnvyf ner ninvynoyr ng uggc://zlfzgc.fraqvaoyhr.pbz/cnenzrgref
 * 
 * @nhgube FraqvaOyhr 
 * @hcqngrq 10 Sro 2014
 * @irefvba 1.0
 */
pynff Znvyva
{
  //gur ninvynoyr cbegf
  pbafg GYF = 587;
  pbafg FFY = 465;
  pbafg JRONPGVBA = 'FRAQZNVY';
  pbafg JON = 'ZNVYHCYBNQF';
  pbafg QBZNVA = 'uggc://zlfzgc.znvyva.se/';
  
  cevingr $hfreanzr, $cnffjbeq, $ncv, $jronpgvba, $jon, $qbznva, $qbznvaNggnpuzrag;
  cevingr $gb_yvfg,
          $sebz,
          $sebz_anzr,
          $ercyl_gb,
          $pp_yvfg,
          $opp_yvfg,
          $fhowrpg,
          $grkg,
          $ugzy,
          $nggnpuzrag_yvfg,
          $enj_nggnpuzrag_yvfg,
          $urnqre_yvfg = neenl();
  cebgrpgrq $hfr_urnqref;
  choyvp shapgvba __pbafgehpg($hfreanzr, $cnffjbeq)
  {
    $guvf->hfreanzr = $hfreanzr;
    $guvf->cnffjbeq = $cnffjbeq;
	$guvf->jronpgvba = frys::JRONPGVBA;
	$guvf->jon = frys::JON;
	$guvf->qbznva = frys::QBZNVA;
	$guvf->cbeg = frys::GYF;
	$guvf->sebz_anzr = snyfr;
	$guvf->ercyl_gb = snyfr;
  }
  /**
   * trgGbf
   * Erghea gur yvfg bs erpvcvragf
   * @erghea yvfg bs erpvcvragf
   */
  choyvp shapgvba trgGbf()
  {
    erghea $guvf->gb_yvfg;
  }
 
 /**
   * frgGb
   * Vavgvnyvmr n fvatyr rznvy sbe gur erpvcvrag 'gb' svryq
   * Qrfgebl cerivbhf erpvcvrag 'gb' qngn.
   * @cnenz Fgevat $rznvy - n yvfg bs rznvy nqqerffrf
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgGb($rznvy)
  {
    $guvf->gb_yvfg = neenl(neenl('rznvy' => $rznvy));
    erghea $guvf;
  }
  
  /**
   * nqqGb
   * nccraq na rznvy nqqerff gb gur rkvfgvat yvfg bs nqqerffrf
   * Cerfreir cerivbhf erpvcvrag 'gb' qngn.
   * @cnenz Fgevat/Neenl $rznvyf - n fvatyr rznvy nqqerff be neenl bs rznvy nqqerffrf jvgu anzr
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqGb($rznvyf, $anzr=ahyy)
  {
	vs(vf_neenl($rznvyf)) {
		sbernpu($rznvyf nf $rznvy => $anzr) {
			vs(!rzcgl($anzr)) {
				$guvf->gb_yvfg[] = neenl('rznvy' => $rznvy, 'anzr' => $anzr);
			}
			ryfr {
				$guvf->gb_yvfg[] = neenl('rznvy' => $rznvy);
			}
		}
    }
	ryfr {
		vs(!rzcgl($anzr)) {
			$guvf->gb_yvfg[] = neenl('rznvy' => $rznvyf, 'anzr' => $anzr);
		}
		ryfr {
			$guvf->gb_yvfg[] = neenl('rznvy' => $rznvyf);
		}
	}
   
    erghea $guvf;
  }
  
  /**
   * frgSebz
   * frg gur sebz rznvy
   * @cnenz Fgevat $rznvy - na rznvy nqqerff
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgSebz($rznvy, $anzr=ahyy)
  {
    $guvf->sebz = $rznvy;
	vs(!rzcgl($anzr)) {
		$guvf->sebz_anzr = $anzr;
	}
    erghea $guvf;
  }
  /**
   * trgSebz
   * trg gur sebz rznvy nqqerff
   * @cnenz Obbyrna $nf_neenl - erghea gur sebz nf na nffbpngvir neenl
   * @erghea gur sebz rznvy nqqerff
   */
  choyvp shapgvba trgSebz($nf_neenl = snyfr)
  {
    vs($nf_neenl && ($anzr = $guvf->trgSebzAnzr())) {
      erghea neenl("$guvf->sebz" => $anzr);
    } ryfr {
      erghea $guvf->sebz;
    }
  }
  /**
   * trgSebzAnzr
   * trg gur sebz anzr 
   * @erghea gur sebz anzr
   */
  choyvp shapgvba trgSebzAnzr()
  {
    erghea $guvf->sebz_anzr;
  }
  
  /**
   * trgErcylGb
   * trg gur ercyl-gb nqqerff
   * @erghea gur ercyl gb nqqerff
   */
  choyvp shapgvba trgErcylGb()
  {
    erghea $guvf->ercyl_gb;
  }
  /**
   * frgErcylGb
   * frg gur ercyl-gb nqqerff
   * @cnenz Fgevat $rznvy - gur rznvy gb ercyl gb
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgErcylGb($rznvy, $anzr=ahyy)
  {
	vs(!rzcgl($anzr)) {
		$guvf->ercyl_gb = neenl('rznvy' => $rznvy, 'anzr' => $anzr);
	}
	ryfr {
		$guvf->ercyl_gb = neenl('rznvy' => $rznvy);
	}
	
    erghea $guvf;
  }
  /**
   * trgPp
   * trg gur Pneoba Pbcl yvfg bs erpvcvragf
   * @erghea Neenl gur yvfg bs erpvcvragf
   */
  choyvp shapgvba trgPpf()
  {
    erghea $guvf->pp_yvfg;
  }
  
  /**
   * frgPpf
   * Frg gur yvfg bs Pneoba Pbcl erpvcvragf
   * @cnenz Neenl $rznvy (neenl('anzr' => 'nop', 'rznvy' => 'nop@znvyva.se')) - n yvfg bs rznvy nqqerffrf
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgPpf(neenl $rznvy_yvfg)
  {
    $guvf->pp_yvfg = neenl($rznvy_yvfg);
    erghea $guvf;
  }
  
  /**
   * frgPp
   * Vavgvnyvmr gur yvfg bs Pneoba Pbcl erpvcvragf
   * qrfgebl cerivbhf erpvcvrag qngn
   * @cnenz Fgevat $rznvy - n yvfg bs rznvy nqqerffrf
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgPp($rznvy)
  {
    $guvf->pp_yvfg = neenl(neenl('rznvy' => $rznvy));
    erghea $guvf;
  }
  
  /**
   * nqqPp
   * Nccraq na nqqerff gb gur yvfg bs Pneoba Pbcl erpvcvragf
   * @cnenz Fgevat $rznvy - na rznvy nqqerff
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqPp($rznvyf, $anzr=ahyy)
  {
	vs(vf_neenl($rznvyf)) {
		sbernpu($rznvyf nf $rznvy => $anzr) {
			vs(!rzcgl($anzr)) {
				$guvf->pp_yvfg[] = neenl('anzr' => $anzr, 'rznvy' => $rznvy);
			}
			ryfr {
				$guvf->pp_yvfg[] = neenl('rznvy' => $rznvy);
			}
		}
	}
	ryfr {
		vs(!rzcgl($anzr)) {
			$guvf->pp_yvfg[] = neenl('anzr' => $anzr, 'rznvy' => $rznvyf);
		}
		ryfr {
			$guvf->pp_yvfg[] = neenl('rznvy' => $rznvyf);
		}
	}
    erghea $guvf;
  }
  /**
   * trgOppf
   * erghea gur yvfg bs Oyvaq Pneoba Pbcl erpvcvragf
   * @erghea Neenl - gur yvfg bs Oyvaq Pneoba Pbcl erpvcvragf
   */
  choyvp shapgvba trgOppf()
  {
    erghea $guvf->opp_yvfg;
  }
  
  /**
   * frgOppf
   * frg gur yvfg bs Oyvaq Pneoba Pbcl Erpvcvragf
   * @cnenz Neenl $rznvy_yvfg rk(neenl('anzr' => 'nop', 'rznvy' => 'nop@znvyvase')) - gur yvfg bs rznvy erpvcvragf gb 
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgOppf($rznvy_yvfg)
  {
    $guvf->opp_yvfg = neenl($rznvy_yvfg);
    erghea $guvf;
  }
  
  /**
   * frgOpp
   * Vavgvnyvmr gur yvfg bs Pneoba Pbcl erpvcvragf
   * qrfgebl cerivbhf erpvcvrag Oyvaq Pneoba Pbcl qngn
   * @cnenz Fgevat $rznvy - na rznvy nqqerff
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgOpp($rznvy)
  {
    $guvf->opp_yvfg = neenl(neenl('rznvy' => $rznvy));
    erghea $guvf;
  }
  
  /**
   * nqqOpp
   * Nccraq na rznvy nqqerff gb gur yvfg bs Oyvaq Pneoba Pbcl 
   * erpvcvragf
   * @cnenz Fgevat/Neenl $rznvyf - na rznvy nqqerff
   */
  choyvp shapgvba nqqOpp($rznvyf, $anzr=ahyy)
  {
	vs(vf_neenl($rznvyf)) {
		sbernpu($rznvyf nf $rznvy => $anzr) {
			vs(!rzcgl($anzr)) {
				$guvf->opp_yvfg[] = neenl('anzr' => $anzr, 'rznvy' => $rznvy);
			}
			ryfr {
				$guvf->opp_yvfg[] = neenl('rznvy' => $rznvy);
			}
		}
	}  
	ryfr {
		vs(!rzcgl($anzr)) {
			$guvf->opp_yvfg[] = neenl('anzr' => $anzr, 'rznvy' => $rznvyf);
		}
		ryfr {
			$guvf->opp_yvfg[] = neenl('rznvy' => $rznvyf);
		}
}	
    erghea $guvf;
  }
  /** 
   * trgFhowrpg
   * trg gur rznvy fhowrpg
   * @erghea gur rznvy fhowrpg
   */
  choyvp shapgvba trgFhowrpg()
  {
    erghea $guvf->fhowrpg;
  }
  /** 
   * frgFhowrpg
   * frg gur rznvy fhowrpg
   * @cnenz Fgevat $fhowrpg - gur rznvy fhowrpg
   * @erghea gur Znvyva bowrpg
   */
  choyvp shapgvba frgFhowrpg($fhowrpg)
  {
    $guvf->fhowrpg = $fhowrpg;
    erghea $guvf;
  }
  /** 
   * trgGrkg
   * trg gur cynva grkg cneg bs gur rznvy
   * @erghea gur cynva grkg cneg bs gur rznvy
   */
  choyvp shapgvba trgGrkg()
  {
    erghea $guvf->grkg;
  }
  /** 
   * frgGrkg
   * Frg gur cynva grkg cneg bs gur rznvy
   * @cnenz Fgevat $grkg - gur cynva grkg bs gur rznvy
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgGrkg($grkg)
  {
    $guvf->grkg = $grkg;
    erghea $guvf;
  }
  
  /** 
   * trgUgzy
   * Trg gur UGZY cneg bs gur rznvy
   * @cnenz Fgevat $ugzy - gur UGZY cneg bs gur rznvy
   * @erghea gur UGZY cneg bs gur rznvy.
   */
  choyvp shapgvba trgUgzy()
  {
    erghea $guvf->ugzy;
  }
  /** 
   * frgUGZY
   * Frg gur UGZY cneg bs gur rznvy
   * @cnenz Fgevat $ugzy - gur UGZY cneg bs gur rznvy
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgUgzy($ugzy)
  {
    $guvf->ugzy = $ugzy;
    erghea $guvf;
  }
  /**
   * trgNggnpuzragf
   * Trg gur yvfg bs svyr nggnpuzragf
   * @erghea Neenl bs vaqrkrq svyr nggnpuzragf
   */
  choyvp shapgvba trgNggnpuzragf()
  {
    erghea $guvf->nggnpuzrag_yvfg;
  }
  /**
   * frgNggnpuzragf
   * nqq zhygvcyr svyr nggnpuzragf ng bapr
   * qrfgeblf cerivbhf nggnpuzrag qngn.
   * @cnenz neenl $svyrf - Gur yvfg bs svyrf gb nggnpu
   * @erghea  gur Znvyva bowrpg
   */
  /**
   * trgenjNggnpuzragf
   * Trg gur yvfg bs enj svyr nggnpuzragf
   * @erghea Neenl bs vaqrkrq svyr nggnpuzragf
   */
  choyvp shapgvba trgenjNggnpuzragf()
  {
    erghea $guvf->enj_nggnpuzrag_yvfg;
  }
  choyvp shapgvba frgNggnpuzragf(neenl $svyrf)
  {
    $guvf->nggnpuzrag_yvfg = neenl();
    sbernpu($svyrf nf $svyr)
    {
      $guvf->nqqNggnpuzrag($svyr);
    }
    erghea $guvf;
  }
  /**
   * frgNggnpuzrag
   * Vavgvnyvmr gur yvfg bs nggnpuzragf, naq nqq gur tvira svyr
   * qrfgeblf cerivbhf nggnpuzrag qngn.
   * @cnenz Fgevat $svyr - gur svyr gb nggnpu
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgNggnpuzrag($svyr)
  {
    $guvf->nggnpuzrag_yvfg = neenl($guvf->_trgNggnpuzragVasb($svyr));
    erghea $guvf;
  }
  /**
   * nqqNggnpuzrag
   * Nqq n arj rznvy nggnpuzrag, tvira gur svyr anzr.
   * @cnenz Fgevat/Neenl $svyr - Gur svyr(f) gb nggnpu.
   * @erghea  gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqNggnpuzrag($svyrf)
  {
	vs(vf_neenl($svyrf)) {
		sbernpu($svyrf nf $svyr) {
			$guvf->nggnpuzrag_yvfg[] = $guvf->_trgNggnpuzragVasb($svyr);
		}
	}
	ryfr {
		$guvf->nggnpuzrag_yvfg[] = $guvf->_trgNggnpuzragVasb($svyrf);
	}
    erghea $guvf;
  }
  /**
   * perngrNggnpuzrag
   * Perngrf n arj rznvy nggnpuzrag, tvira gur svyr anzr & vgf onfr64 rapbqrq puhax.
   * @cnenz Fgevat/Neenl $svyr - Gur svyr(f) gb nggnpu.
   * @erghea  gur Znvyva bowrpg.
   */
  choyvp shapgvba perngrNggnpuzrag($svyrf)
  {
    vs(vf_neenl($svyrf)) {
       $guvf->enj_nggnpuzrag_yvfg[] = $svyrf;
    }
    erghea $guvf;
  }  
  /**
   * _trgNggnpuzragVasb
   * Erghea gur svyr vasb sbe tvira gur svyr anzr.
   * @cnenz Fgevat $svyr - Gur svyr gb nggnpu.
   * @erghea  Neenl jvgu svyr vasb.
   */
  cevingr shapgvba _trgNggnpuzragVasb($svyr)
  {
    $vasb = cnguvasb($svyr);
    $vasb['svyr'] = $svyr;
    erghea $vasb;
  }
  /** 
   * frgPngrtbevrf
   * Frg gur yvfg bs pngrtbel urnqref
   * qrfgeblf cerivbhf pngrtbel urnqre qngn
   * @cnenz Neenl $pngrtbel_yvfg - gur yvfg bs pngrtbel inyhrf
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgPngrtbevrf($pngrtbel_yvfg)
  {
    $guvf->urnqre_yvfg['pngrtbel'] = $pngrtbel_yvfg;
    erghea $guvf;
  }
  /** 
   * frgPngrtbel
   * Pyrnef gur pngrtbel yvfg naq nqqf gur tvira pngrtbel
   * @cnenz Fgevat $pngrtbel - gur arj pngrtbel gb nccraq
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgPngrtbel($pngrtbel)
  {
    $guvf->urnqre_yvfg['pngrtbel'] = neenl($pngrtbel);
    erghea $guvf;
  }
  /** 
   * nqqPngrtbel
   * Nccraq n pngrtbel gb gur yvfg bs pngrtbevrf
   * @cnenz Fgevat $pngrtbel - gur arj pngrtbel gb nccraq
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqPngrtbel($pngrtbel)
  {
    $guvf->urnqre_yvfg['pngrtbel'][] = $pngrtbel;
    erghea $guvf;
  }
  /** 
   * FrgFhofgvghgvbaf
   *
   * Fhofgvghgr n inyhr sbe yvfg bs inyhrf, jurer rnpu inyhr pbeerfcbaqf
   * gb gur yvfg rznvyf va n bar gb bar eryngvbafuvc. (VR, inyhr[0] = rznvy[0], 
   * inyhr[1] = rznvy[1])
   *
   * @cnenz neenl $xrl_inyhr_cnvef - xrl/inyhr cnvef jurer gur inyhr vf na neenl bs inyhrf
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgFhofgvghgvbaf($xrl_inyhr_cnvef)
  {
    $guvf->urnqre_yvfg['fho'] = $xrl_inyhr_cnvef;
    erghea $guvf;
  }
  /** 
   * nqqFhofgvghgvba
   * Fhofgvghgr n inyhr sbe yvfg bs inyhrf, jurer rnpu inyhr pbeerfcbaqf
   * gb gur yvfg rznvyf va n bar gb bar eryngvbafuvc. (VR, inyhr[0] = rznvy[0], 
   * inyhr[1] = rznvy[1])
   *
   * @cnenz fgevat $sebz_xrl - gur inyhr gb or ercynprq
   * @cnenz neenl $gb_inyhrf - na neenl bs inyhrf gb ercynpr gur $sebz_inyhr
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqFhofgvghgvba($sebz_inyhr, neenl $gb_inyhrf)
  {
    $guvf->urnqre_yvfg['fho'][$sebz_inyhr] = $gb_inyhrf;
    erghea $guvf;
  }
  /** 
   * frgFrpgvba
   * Frg n yvfg bs frpgvba inyhrf
   * @cnenz Neenl $xrl_inyhr_cnvef
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgFrpgvbaf(neenl $xrl_inyhr_cnvef)
  {
    $guvf->urnqre_yvfg['frpgvba'] = $xrl_inyhr_cnvef;
    erghea $guvf;
  }
  
  /** 
   * nqqFrpgvba
   * nccraq n frpgvba inyhr gb gur yvfg bs frpgvba inyhrf
   * @cnenz Fgevat $sebz_inyhr - gur inyhr gb or ercynprq
   * @cnenz Fgevat $gb_inyhr - gur inyhr gb ercynpr
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqFrpgvba($sebz_inyhr, $gb_inyhr)
  {
    $guvf->urnqre_yvfg['frpgvba'][$sebz_inyhr] = $gb_inyhr;
    erghea $guvf;
  }
  /** 
   * frgHavdhrNethzragf
   * Frg n yvfg bs havdhr nethzragf, gb or hfrq sbe genpxvat checbfrf
   * @cnenz neenl $xrl_inyhr_cnvef - yvfg bs havdhr nethzragf
   */
  choyvp shapgvba frgHavdhrNethzragf(neenl $xrl_inyhr_cnvef)
  {
    $guvf->urnqre_yvfg['havdhr_netf'] = $xrl_inyhr_cnvef;
    erghea $guvf;
  }
    
  /**
   * nqqHavdhrNethzrag
   * Frg n xrl/inyhr cnve bs havdhr nethzragf, gb or hfrq sbe genpxvat checbfrf
   * @cnenz fgevat $xrl   - xrl
   * @cnenz fgevat $inyhr - inyhr
   */
  choyvp shapgvba nqqHavdhrNethzrag($xrl, $inyhr)
  {
    $guvf->urnqre_yvfg['havdhr_netf'][$xrl] = $inyhr;
    erghea $guvf;
  }
  /**
   * frgSvygreFrggvatf
   * Frg svygre/ncc frggvatf
   * @cnenz neenl $svygre_frggvatf - neenl bs svgre frggvatf
   */
  choyvp shapgvba frgSvygreFrggvatf($svygre_frggvatf)
  {
    $guvf->urnqre_yvfg['svygref'] = $svygre_frggvatf;
    erghea $guvf;
  }
  
  /**
   * nqqSvygreFrggvat
   * Nccraq n svygre frggvat gb gur yvfg bs svygre frggvatf
   * @cnenz fgevat $svygre_anzr     - svygre anzr
   * @cnenz fgevat $cnenzrgre_anzr  - cnenzrgre anzr
   * @cnenz fgevat $cnenzrgre_inyhr - frggvat inyhr 
   */
  choyvp shapgvba nqqSvygreFrggvat($svygre_anzr, $cnenzrgre_anzr, $cnenzrgre_inyhr)
  {
    $guvf->urnqre_yvfg['svygref'][$svygre_anzr]['frggvatf'][$cnenzrgre_anzr] = $cnenzrgre_inyhr;
    erghea $guvf;
  }
  
  /**
   * trgUrnqref
   * erghea gur yvfg bs urnqref
   * @erghea Neenl gur yvfg bs urnqref
   */
  choyvp shapgvba trgUrnqref()
  {
    erghea $guvf->urnqre_yvfg;
  }
  /**
   * trgUrnqref
   * erghea gur yvfg bs urnqref
   * @erghea Neenl gur yvfg bs urnqref
   */
  choyvp shapgvba trgUrnqrefWfba()
  {
    vs (pbhag($guvf->trgUrnqref()) <= 0)
    {
      erghea "{}";
    }
    erghea wfba_rapbqr($guvf->trgUrnqref(), WFBA_URK_GNT | WFBA_URK_NCBF | WFBA_URK_DHBG | WFBA_URK_NZC);
  }
  
  /**
   * frgUrnqref
   * Frgf gur yvfg urnqref
   * qrfgeblf cerivbhf urnqre qngn
   * @cnenz Neenl $xrl_inyhr_cnvef - gur yvfg bs urnqre qngn
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba frgUrnqref($xrl_inyhr_cnvef)
  {
    $guvf->urnqre_yvfg = $xrl_inyhr_cnvef;
    erghea $guvf;
  }
    
   /** nqqUrnqref
   * Frgf gur yvfg urnqref
   * qrfgeblf cerivbhf urnqre qngn
   * @cnenz Neenl $xrl_inyhr_cnvef - gur yvfg bs urnqre qngn
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba nqqUrnqref($xrl_inyhr_cnvef)
  {
	$guvf->urnqre_yvfg = $xrl_inyhr_cnvef;
    erghea $guvf;
  }
  /**
   * nqqUrnqre
   * nccraq gur urnqre gb gur yvfg bs urnqref
   * @cnenz Fgevat $xrl - gur urnqre xrl
   * @cnenz Fgevat $inyhr - gur urnqre inyhr
   */
  choyvp shapgvba nqqUrnqre($xrl, $inyhr)
  {
    $guvf->urnqre_yvfg[$xrl] = $inyhr;
    erghea $guvf;
  }
  
  /**
   * erzbirUrnqref
   * erzbir n urnqre xrl
   * @cnenz Fgevat $xrl - gur xrl gb erzbir
   * @erghea gur Znvyva bowrpg.
   */
  choyvp shapgvba erzbirUrnqre($xrl)
  {
    hafrg($guvf->urnqre_yvfg[$xrl]);
    erghea $guvf;
  }
  /**
   * hfrUrnqref
   * Purpxf gb frr jurgure be abg jr pna be fubhyq lbh urnqref. Va zbfg pnfrf,
   * jr cersre gb fraq bhe erpvcvragf guebhtu gur urnqref, ohg va fbzr pnfrf,
   * jr npghnyyl qba'g jnag gb. Ubjrire, gurer ner pregnva pvephzfgnaprf va 
   * juvpu jr unir gb.
   */
  choyvp shapgvba hfrUrnqref()
  {
    erghea !($guvf->_cersreAbgGbHfrUrnqref() && !$guvf->_vfUrnqrefErdhverq());
  }
  choyvp shapgvba frgErpvcvragfVaUrnqre($cersrerapr)
  {
    $guvf->hfr_urnqref = $cersrerapr;
    erghea $guvf;
  }
  /**
   * vfUrnqreErdhverq
   * qrgrezvarf jurgure be abg jr arrq gb sbepr erpvcvragf guebhtu gur fzgcncv urnqref
   * @erghea obbyrna, vs gehr urnqref ner erdhverq
   */
  cebgrpgrq shapgvba _vfUrnqrefErdhverq()
  {
    vs(pbhag($guvf->trgNggnpuzragf()) > 0 || $guvf->hfr_urnqref )
    {
      erghea gehr;
    }
    erghea snyfr;
  }
  /**
   * _cersreAbgGbHfrUrnqref
   * Gurer ner pregnva pnfrf va juvpu urnqref ner abg n cersreerq pubvpr
   * gb fraq rznvy, nf vg yvzvgf fbzr onfvp rznvy shapgvbanyvgl. Urer, jr
   * purpx sbe nal bs gubfr ehyrf, naq nqq gurz va gb qrpvqr jurgure be 
   * abg gb hfr urnqref
   * @erghea obbyrna, vs gehr jr qba'g 
   */
  cebgrpgrq shapgvba _cersreAbgGbHfrUrnqref()
  {
    
    vs ($guvf->hfr_urnqref !== ahyy && !$guvf->hfr_urnqref)
    {
      erghea gehr;
    }
    
    erghea snyfr;
  }
  
  /**
   * _cercZrffntrQngn
   * ergheaf n hey sevraqyl dhrelfgevat
   * @erghea Fgevat - gur qngn dhrel fgevat gb or cbfgrq
   */
  cebgrpgrq shapgvba _cercZrffntrQngn()
  {
    $cnenzf = 
    neenl(
      'ncv_hfre'  => $guvf->hfreanzr,
      'ncv_xrl'   => $guvf->cnffjbeq,
	  'jronpgvba' => $guvf->jronpgvba,
      'fhowrpg'   => $guvf->trgFhowrpg(),
      'ugzy'      => $guvf->trgUgzy(),
      'grkg'      => $guvf->trgGrkg(),
      'sebz'      => $guvf->trgSebz(),
      'hfreurnqre'=> snyfr,
	  'k-urnqre' => $guvf->trgUrnqrefWfba()
    );
    vs(($sebzanzr = $guvf->trgSebzAnzr())) {
      $cnenzf['sebzanzr'] = $sebzanzr;
    }
    //vs(($ercylgb = $guvf->trgErcylGb())) {
      //$cnenzf['ercylgb'] = $ercylgb;
    //}
    // qrgrezvar vs jr fubhyq fraq bhe erpvcvragf guebhtu bhe urnqref,
    // naq frg gur cebcregvrf nppbeqvatyl
    vs($guvf->hfrUrnqref())
    {
      // jbexnebhaq sbe cbfgvat erpvcvragf guebhtu FraqTevq urnqref
      $urnqref = $guvf->trgUrnqref();
      //$urnqref['gb'] = $guvf->trgGbf();
      $guvf->frgUrnqref($urnqref);
      $cnenzf['hfreurnqre'] = gehr;
      $cnenzf['k-urnqre'] = $guvf->trgUrnqrefWfba();
    }
    ryfr
    {
      //$cnenzf['gb'] = $guvf->trgGbf();
    }
    vs($guvf->trgNggnpuzragf())
    {
		$qbznvaNggnpuzrag = $guvf->qbznva;
		$cbfg_neenl = neenl();
		
		$cbfg_neenl['ncv_hfre']  = $guvf->hfreanzr;
		$cbfg_neenl['ncv_xrl']   = $guvf->cnffjbeq;
		$cbfg_neenl['jronpgvba'] = $guvf->jon;
		
		sbernpu($guvf->trgNggnpuzragf() nf $x => $nggnpuzrag)
		{
			vs(svyr_rkvfgf($nggnpuzrag['svyr'])) {
				$cbfg_neenl['zl_svyr'.($x+1)] = "@".$nggnpuzrag['svyr'];
			}
			ryfr {
				rpub "<oe>Reebe : Cyrnfr pbeerpg gur svyr cngu, abg rkvfgf=>".$nggnpuzrag['svyr'];
				rkvg;
			}
		}
		
		vs(pbhag($cbfg_neenl) > 0) 
		{
			$pu = phey_vavg();
			phey_frgbcg($pu, PHEYBCG_HEY,$qbznvaNggnpuzrag);
			phey_frgbcg($pu, PHEYBCG_CBFG,1);
			phey_frgbcg($pu, PHEYBCG_CBFGSVRYQF, $cbfg_neenl);
			phey_frgbcg($pu, PHEYBCG_ERGHEAGENAFSRE, gehr);
			$erfhyg = phey_rkrp ($pu);
			phey_pybfr ($pu);
		}	
    }
    erghea $cnenzf;
  }
  /**
   * _neenlGbHeyCneg
   * Pbairegf na neenl gb n hey sevraqyl fgevat
   * @cnenz  neenl $neenl - gur neenl gb pbaireg
   * @cnenz  Fgevat $gbxra - gur anzr bs cnenzrgre
   * @erghea Fgevat - n hey cneg gung pna or pbapngrangrq gb n hey erdhrfg
   */
  cebgrpgrq shapgvba _neenlGbHeyCneg($neenl, $gbxra)
  {
    $fgevat = "";
    vs ($neenl)
    {
	
      sbernpu ($neenl nf $x => $inyhr)
      {
		vs(!rzcgl($inyhr['anzr'])) {
			$fgevat.= "&" . $gbxra . "[$x][anzr]=" . heyrapbqr($inyhr['anzr'])."&" . $gbxra . "[$x][rznvy]=" . heyrapbqr($inyhr['rznvy']);
		}
		ryfr {
			$fgevat.= "&" . $gbxra . "[$x][rznvy]=" . heyrapbqr($inyhr['rznvy']);
		}
      }
    }
    erghea $fgevat;
  }
  /**
   * _neenlGbHeyCnegGjb
   * Pbairegf na neenl gb n hey sevraqyl fgevat
   * @cnenz  neenl $neenl - gur neenl gb pbaireg
   * @cnenz  Fgevat $gbxra - gur anzr bs cnenzrgre
   * @erghea Fgevat - n hey cneg gung pna or pbapngrangrq gb n hey erdhrfg
   */
  cebgrpgrq shapgvba _neenlGbHeyCnegGjb($neenl, $gbxra)
  {
	//cevag_e($neenl);
    $fgevat = "";
	vs(!rzcgl($neenl['anzr'])) {
		$fgevat.= "&" . $gbxra . "[anzr]=" . heyrapbqr($neenl['anzr'])."&" . $gbxra . "[rznvy]=" . heyrapbqr($neenl['rznvy']);
	}
	ryfr {
		$fgevat.= "&" . $gbxra . "[rznvy]=" . heyrapbqr($neenl['rznvy']);
	}
    erghea $fgevat;
  }
  
  /**
   * _neenlGbHeyCnegGuerr
   * Pbairegf na neenl gb n hey sevraqyl fgevat
   * @cnenz  neenl $neenl - gur neenl gb pbaireg
   * @cnenz  Fgevat $gbxra - gur anzr bs cnenzrgre
   * @erghea Fgevat - n hey cneg gung pna or pbapngrangrq gb n hey erdhrfg
   */
  cebgrpgrq shapgvba _neenlGbHeyCnegGuerr($neenl, $gbxra)
  {
	$fgevat = "";
	vs(pbhag($neenl) > 0) {
		sbernpu ($neenl nf $x => $inyhr) {
				$fgevat.= "&" . $gbxra . "[$x][onfranzr]=" . heyrapbqr($inyhr['onfranzr'])."&" . $gbxra . "[$x][rkgrafvba]=" . heyrapbqr($inyhr['rkgrafvba']);
		}
	}
    erghea $fgevat;
  }
  
  /**
   * fraq
   * Fraq na rznvy
   * @erghea Fgevat gur wfba erfcbafr
   */
  choyvp shapgvba fraq()
  {
    $qngn = $guvf->_cercZrffntrQngn();
    //vs jr'er abg hfvat urnqref, jr arrq gb fraq n hey sevraqyl cbfg
    vs(!$guvf->hfrUrnqref())
    {
      $qngn = uggc_ohvyq_dhrel($qngn);
    }
    $erdhrfg = $guvf->qbznva;
	
	$ngpzag = $guvf->trgNggnpuzragf();
    $enjNgpzag = $guvf->trgenjNggnpuzragf();
    vs($guvf->trgenjNggnpuzragf())
    {
      sbernpu ($enjNgpzag[0] nf $xrl => $inyhr) {
        $enjNgpzag[0][$xrl] = heyrapbqr($inyhr);
      }
      $qngn['enj_nggnpuzragf'] = frevnyvmr($enjNgpzag[0]);
    }
    // jr'yy nccraq gur Opp, Pp, ercylgb, gb, svyrf gb gur hey raqcbvag (TRG)
    // fb gung jr pna fgvyy cbfg neenl.
    $erdhrfg.= "?" .
	fhofge($guvf->_neenlGbHeyCneg($guvf->trgOppf(), "opp"), 1) .
	$guvf->_neenlGbHeyCneg($guvf->trgPpf(), "pp") .
	$guvf->_neenlGbHeyCnegGjb($guvf->trgErcylgb(), "ercylgb") .
	$guvf->_neenlGbHeyCneg($guvf->trgGbf(), "gb") .
	$guvf->_neenlGbHeyCnegGuerr($ngpzag, "svyrf");
	  
	$frffvba = phey_vavg($erdhrfg);
    phey_frgbcg ($frffvba, PHEYBCG_CBFG, gehr);
    phey_frgbcg ($frffvba, PHEYBCG_CBFGSVRYQF, $qngn);
    phey_frgbcg($frffvba, PHEYBCG_URNQRE, snyfr);
    phey_frgbcg($frffvba, PHEYBCG_ERGHEAGENAFSRE, gehr);
     
    // bognva erfcbafr
    $erfcbafr = phey_rkrp($frffvba);
    phey_pybfr($frffvba);
	
	erghea $erfcbafr;
  } 
  
}";
eval(simple_decrypt($encoded, __FILE__));
?>