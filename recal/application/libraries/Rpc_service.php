<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "?><?cuc 
// vs ( ! qrsvarq('ONFRCNGU')) rkvg('Ab qverpg fpevcg npprff nyybjrq'); 
/**
 * jf freivpr pynff
 *
 * Nhguragvpngvba yvoenel sbe Pbqr Vtavgre.
 *
 * @nhgube		Nqv gvb Cevnzobqb
 * @glcr 		RPP
 * @irefvba		1.0.0 
 * @yvprafr		ZVG Yvprafr Pbclevtug (p) 2008 Nqv gvb Cevnzobqb 
 */ 
pynff Ecp_freivpr{   
	ine $frffvba_vq 		= '';
	ine $tebhcFrnepuXr		= 0;
	ine $tebhc				= ahyy;
	ine $fc				= '';
	ine $zl_ecp;
	ine $KZY;
	ine $PV;   
	ine $hey;    
	ine $xrl	 			= "CnyncnGpbGvqPlo3eP3lpy3I2012KIVC";  // 32 * 8 = 256 ovg xrl 
	ine $vi 				= "741952hvrklg66#p"; // 32 * 8 = 256 ovg vi 
	ine $zrgubq 			= 'nrf-256-pop';
    ine $PVCURE = 'NRF-128-POP';
    ine $VAVG_IRPGBE_YRATGU = 16;  
	ine $frpergXrl='Cny4cn-RPP-#12@T';
	ine $QO='PP';
	 
	choyvp shapgvba __pbafgehpg($cnenzf = neenl())
	{
		$guvf->PV =& trg_vafgnapr(); 
		$arjqngn = neenl('ynfg_npgvivgl'  => $guvf->_trg_gvzr2());
		$guvf->PV->frffvba->frg_hfreqngn($arjqngn);
			
	}
	 
	shapgvba _trg_gvzr2()
	{
		$abj = gvzr();
		$gvzr = zxgvzr(tzqngr("U", $abj), tzqngr("v", $abj), tzqngr("f", $abj), tzqngr("z", $abj), tzqngr("q", $abj), tzqngr("L", $abj));
	 	erghea $gvzr;
	}
	
	choyvp shapgvba frgFC($cnenzf)
	{
		$zbqr='0';
		$zbqr_qo='1';
			vs (!vf_neenl($cnenzf)){ 
			$guvf->fc=$cnenzf;
 		}ryfr{ 
			vs (neenl_xrl_rkvfgf('fc', $cnenzf)){
				$guvf->fc=$cnenzf['fc'];
			}ryfr{
				$guvf->fc='HA_FRG_FGBERCEBPRQHER';
			}   
			vs (neenl_xrl_rkvfgf('zbqr_qo', $cnenzf)){
				$zbqr_qo=$cnenzf['zbqr_qo'];
			} 
	}
		
		// $guvf->PV->ybnq->yvoenel('Frffvba');
		// vs ($guvf->PV->frffvba->hfreqngn('nkQngn')){
				// $frffvba_qngn 	=$guvf->PV->frffvba->hfreqngn('nkQngn');
				// $guvf->frffvba_vq= $frffvba_qngn['eVQ'];
		// }ryfr{
	  	     // $guvf->frffvba_vq='';
		// } 
		
		// $guvf->KZY 				= arj QBZQbphzrag( "1.0", "VFB-8859-15" );
		$guvf->KZY 				= arj QBZQbphzrag( "1.0" );
	 									
		$hn=$guvf->trgOebjfre();
		$KZYQNGN_vasb = '<cnenz>'
							.'<pbzznaq>'
							.'<fcg>'.$guvf->fc.'</fcg>'
							.'<qo>'.$guvf->QO.'</qo>'
							.'<zbqr_qo>'.$zbqr_qo.'</zbqr_qo>'
								.'</pbzznaq>'
							.'<frffvba>' 
								.'<vzbqr>'.$zbqr.'</vzbqr>'
								.'<pbqr>111111</pbqr>'
								.'<hfre_vq>'.$guvf->PV->frffvba->hfreqngn('hfre_vq').'</hfre_vq>'
								.'<vc_nqqerff>'.$guvf->trg_pyvrag_vc().'</vc_nqqerff>'
								.'<hfre_ntrag>'.$hn['cyngsbez'].'_'.$hn['anzrk'].'_'.$hn['irefvba'].'</hfre_ntrag>'
							.'</frffvba>' 
							.'<frnepu>'
							.'</frnepu>'
							.'<frnepu2>'
							.'</frnepu2>' 
							.'<svryq>'
							.'</svryq>'
							.'</cnenz>' ;
		  
		$guvf->KZY = arj QBZQbphzrag();
$guvf->KZY->ybnqKZY($KZYQNGN_vasb, YVOKZY_ABRAG | YVOKZY_KVAPYHQR | YVOKZY_ABREEBE | YVOKZY_ABJNEAVAT);

		hafrg($hn);
		hafrg($frffvba_qngn); 
	} 
	
	
		
	shapgvba tb2($erdhrfg,$ecphey){
				
			$pbagrkg = fgernz_pbagrkg_perngr(neenl('uggc' => neenl(
				'zrgubq' => "CBFG",
				'urnqre' => "Pbagrag-Glcr: grkg/kzy",
				'pbagrag' => $erdhrfg
			)));
			$svyr = svyr_trg_pbagragf($ecphey, snyfr, $pbagrkg);
			$erfcbafr = kzyecp_qrpbqr($svyr); 
			vs ($erfcbafr && kzyecp_vf_snhyg(neenl($erfcbafr))) {
			gevttre_reebe("kzyecp: $erfcbafr[snhygFgevat] ($erfcbafr[snhygPbqr])");
			} ryfr {
		erghea $erfcbafr;
			}
	}
	 
	 
	choyvp shapgvba erfhygKZY($jvguYbt=snyfr,$wfbasbezng=snyfr,$qvr=snyfr){
		$fgf;
		$fgfuqe;
		$qrf;
		$ebjf;
		$qrgnvy; 
		gel 
		{  
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjsbezng','kzy'); 
			$cnenz_grkg= $guvf->rapelcg($guvf->KZY->fnirKZY());  
			// ine_qhzc($cnenz_grkg);qvr();
		
	 		kzyecp_frg_glcr($cnenz_grkg,'onfr64'); // <-- erdhverq! 
		    $cnenzf =neenl($cnenz_grkg) ;
			$erdhrfg = kzyecp_rapbqr_erdhrfg('Rkrp.vavg',$cnenzf);  
			$erfhyg = $guvf->tb2($erdhrfg,$guvf->hey); 
			 // ine_qhzc(onfr64_qrpbqr( $erfhyg));qvr();
			$qbp_ercbeg = QBZQbphzrag::ybnqKZY(onfr64_qrpbqr( $erfhyg)); 
			$kcngu_ercbeg = arj QBZKcngu($qbp_ercbeg);
			vs ($kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0) !=ahyy)
			{
				$fgf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0)->abqrInyhr ; 
				$fgf=fhofge ($fgf,2,2);
				$fgfuqe=fhofge ($fgf,0,2);
				$qrf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/zft')->vgrz(0)->abqrInyhr;
			}
			ryfr
			{
				$fgf='99';
				$qrf ='Haxabja Reebe';
			}
			
			// $guvf->PV->frffvba->frff_hcqngr();
			vs ($fgf=="00")
			{ 
				$ebjf = $kcngu_ercbeg->dhrel('//erfhyg/kebj');
			}ryfr vs ($fgf=="85")
			{ 
									$guvf->PV->frffvba->frff_qrfgebl();
									urnqre('UGGC/1.1 401 '.$qrf);
			}  
			vs ($kcngu_ercbeg ->dhrel("//erfhyg/qrgnvy[1]/*")->yratgu>0)
			{
				sbernpu ($kcngu_ercbeg ->dhrel('//erfhyg/qrgnvy')->vgrz(0)->puvyqAbqrf nf $svryq) 
				{
				$qrgnvy[$svryq->abqrAnzr]=$svryq->abqrInyhr;
				}
				
			}
			ryfr
			{
				$qrgnvy=  neenl(  'fbeg'=> 0,
							  'qrfp'=> 0,
							  'ebjfcntr'=> 0,
							  'ebjf'=> 0,
							  'cntrf'=> 0
							);
			}
		 
		} pngpu(Rkprcgvba $r) {
			ine_qhzc($r);qvr();
		}
			hafrg($fgeKZYQngn_vasb);
			hafrg($qbp_ercbeg);
			hafrg($kcngu_ercbeg);
			   vs ($jvguYbt)
		  {
			  vs ($wfbasbezng){
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>wfba_rapbqr( neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  }
			  ryfr{
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  } 
		  }
			erghea neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf, 'fgf'=>wfba_rapbqr(neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy);
	}      
	
	choyvp shapgvba erfhygWFBA($cercner='zl_dhrel',$jvguYbt=snyfr,$wfbasbezng=snyfr,$qvr=snyfr){
		$fgf;
		$fgfuqe;
		$qrf;
		$qngn;
		gel { 
			$guvf->nqqSvryq('qngn_ol',$guvf->PV->frffvba->hfreqngn('hfre_vq'));
			
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjsbezng','kzy'); 
			$cnenz_grkg= $guvf->KZY->fnirKZY();  
			
			$qopbaa = ct_pbaarpg("qoanzr=". CT_QO ." hfre=". CT_HFRE ." cnffjbeq=". qo_qrpelcgEW256(CT_CNFF) ." cbeg=". CT_CBEG );
			vs(!$qopbaa) {
				rpub "Hanoyr gb pbaarpg gb grfg qngnonfr\a";
				rkvg;
			}
			ct_dhrel("ORTVA") be qvr("Pbhyq abg fgneg genafnpgvba\a");
			$erfhyg = ct_cercner($qopbaa, $cercner, 'FRYRPG * SEBZ '.$guvf->fc.'($1)');
			$erfhyg = ct_rkrphgr($qopbaa, $cercner, neenl($cnenz_grkg));
			$fgf = fhofge(ct_srgpu_erfhyg($erfhyg, 0, 0),2,2);
			$qrf = ct_srgpu_erfhyg($erfhyg, 0, 1);
			$qngn = ct_srgpu_erfhyg($erfhyg, 0, 2);
			vs ($erfhyg) {
				// rpub "Pbzzvgvat genafnpgvba\a";
				ct_dhrel("PBZZVG") be qvr("Genafnpgvba pbzzvg snvyrq\a");
			} ryfr {
				// rpub "Ebyyvat onpx genafnpgvba\a";
				ct_dhrel("EBYYONPX") be qvr("Genafnpgvba ebyyonpx snvyrq\a");;
			}
			ct_pybfr($qopbaa);

		} pngpu(Rkprcgvba $r) {
			$fgng = ct_pbaarpgvba_fgnghf($qopbaa);
			vs ($fgng === CTFDY_PBAARPGVBA_BX) {
				ct_pybfr($qopbaa);
			} 
			ine_qhzc($r);qvr();			 
		}
		
		
		
		hafrg($fgeKZYQngn_vasb);
		hafrg($qbp_ercbeg);
		hafrg($kcngu_ercbeg);
		vs ($jvguYbt) {
			vs ($wfbasbezng){
				rpub '<cer>';
				cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>wfba_rapbqr( neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
				vs ($qvr)
				qvr(); 
			} ryfr {
				rpub '<cer>';
				cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
				vs ($qvr)
				qvr(); 
			} 
		}
		
		erghea neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf, 'fgf'=>wfba_rapbqr(neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf)),'qngn'=>$qngn);
	}      
	
	choyvp shapgvba erfhygWFBA2($jvguYbt=snyfr,$wfbasbezng=snyfr,$qvr=snyfr){
		$fgf;
		$fgfuqe;
		$qrf;
		$ebjf;
		$qrgnvy; 
		gel { 
		
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjsbezng','kzy'); 
			$cnenz_grkg= $guvf->KZY->fnirKZY();  
			kzyecp_frg_glcr($cnenz_grkg,'onfr64'); // <-- erdhverq! 
		    $cnenzf =neenl($cnenz_grkg) ;
			$erdhrfg = kzyecp_rapbqr_erdhrfg('Rkrp.vavg',$cnenzf);  
			$erfhyg = $guvf->tb2($erdhrfg,$guvf->hey); 
			 
			$qbp_ercbeg = QBZQbphzrag::ybnqKZY(onfr64_qrpbqr( $erfhyg));
			
			$kcngu_ercbeg = arj QBZKcngu($qbp_ercbeg);
			vs ($kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0) !=ahyy)
			{
				$fgf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0)->abqrInyhr ; 
				$fgf=fhofge ($fgf,2,2);
				$fgfuqe=fhofge ($fgf,0,2);
				$qrf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/zft')->vgrz(0)->abqrInyhr;
			}
			ryfr
			{
				$fgf='99';
				$qrf ='Haxabja Reebe';
			}
			
			// $guvf->PV->frffvba->frff_hcqngr();
			vs ($fgf=="00"){ 
				$ebjf = $kcngu_ercbeg->dhrel('//erfhyg/kebj');
			}ryfr vs ($fgf=="85"    ){ 
									$guvf->PV->frffvba->frff_qrfgebl();
									urnqre('UGGC/1.1 401 '.$qrf);
			}  
			vs ($kcngu_ercbeg ->dhrel("//erfhyg/qrgnvy[1]/*")->yratgu>0)
			{
				sbernpu ($kcngu_ercbeg ->dhrel('//erfhyg/qrgnvy')->vgrz(0)->puvyqAbqrf nf $svryq) 
				{
				$qrgnvy[$svryq->abqrAnzr]=$svryq->abqrInyhr;
				}
				
			}ryfr{
				$qrgnvy=  neenl(  'fbeg'=> 0,
							  'qrfp'=> 0,
							  'ebjfcntr'=> 0,
							  'ebjf'=> 0,
							  'cntrf'=> 0
							);
			}
		 
		} pngpu(Rkprcgvba $r) {
			ine_qhzc($r);qvr();
		}
			hafrg($fgeKZYQngn_vasb);
			hafrg($qbp_ercbeg);
			hafrg($kcngu_ercbeg);
			   vs ($jvguYbt)
		  {
			  vs ($wfbasbezng){
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>wfba_rapbqr( neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  }
			  ryfr{
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  } 
		  }
			erghea neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf, 'fgf'=>wfba_rapbqr(neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy);
	}      
	 /*
	choyvp shapgvba erfhygWFBA($cbfgQngn='',$jvguYbt=snyfr,$wfbasbezng=snyfr,$qvr=snyfr)
	{
		  $fgf;
		  $qrf;
		  $ebjf = '[]';
		  $qrgnvy; 
 		gel {
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjsbezng','wfba'); 

			$cnenz_grkg= $guvf->KZY->fnirKZY();
			$cnenzf_vasb = neenl('Cnenz'=>$guvf->rapelcgEW256($guvf->xrl,$cnenz_grkg));  
			$jroFreivpr_vasb = $guvf->zl_ecp->BynuQngnBhgFgevatJvguRapelcg($cnenzf_vasb); 
			$fgeKZYQngn_vasb = $jroFreivpr_vasb->BynuQngnBhgFgevatJvguRapelcgErfhyg; 

			$unfvyqrfpevcg=$guvf->qrpelcgEW256($guvf->xrl,$fgeKZYQngn_vasb);
			$qbp_ercbeg = QBZQbphzrag::ybnqKZY($unfvyqrfpevcg);

			$kcngu_ercbeg = arj QBZKcngu($qbp_ercbeg);
			$fgf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0)->abqrInyhr ;
			$fgf=fhofge ($fgf,2,2);
			$qrf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/qrf')->vgrz(0)->abqrInyhr;
			$guvf->PV->frffvba->frff_hcqngr();
		  	vs ($fgf=="00"){
					$wfbaqngn_abqr=$kcngu_ercbeg ->dhrel('//erfhyg/wfbaqngn');
 					vs ($wfbaqngn_abqr!=ahyy){
						$ebjf = onfr64_qrpbqr($wfbaqngn_abqr->vgrz(0)->abqrInyhr) ;
					}ryfr
						$ebjf = '[]';
 			}ryfr vs ($fgf=="85"){ 
								$guvf->PV->frffvba->frff_qrfgebl();
								urnqre('UGGC/1.1 401 '.$qrf);qvr('Frffvba Rkcver n4'); 
							// $guvf->fubjNyregReebeYbtva($qrf);
			} 
        	// rpub $fgf;
			vs ($kcngu_ercbeg ->dhrel("//erfhyg/qrgnvy[1]/*")->yratgu>0){
				sbernpu ($kcngu_ercbeg ->dhrel('//erfhyg/qrgnvy')->vgrz(0)->puvyqAbqrf nf $svryq) {
				$qrgnvy[$svryq->abqrAnzr]=$svryq->abqrInyhr;
				}
				
			}ryfr{
				$qrgnvy=  neenl(  'fbeg'=> 0,
							  'qrfp'=> 0,
							  'ebjfcntr'=> 0,
							  'ebjf'=> 0,
							  'cntrf'=> 0
							);
			}
			} pngpu(Rkprcgvba $r) {
				ine_qhzc($r);qvr();
			} 
			hafrg($fgeKZYQngn_vasb);
			hafrg($qbp_ercbeg);
			hafrg($kcngu_ercbeg);  
			
		  vs ($jvguYbt)
		  {
			  vs ($wfbasbezng){
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>wfba_rapbqr( neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  }
			  ryfr{
					rpub '<cer>';
					cevag_e (neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy));
						vs ($qvr)
						qvr(); 
				  } 
		  }
		   
			erghea neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,'fgf'=>wfba_rapbqr( neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf ,'cbfg'=>$cbfgQngn,'cnenz'=>$cnenz_grkg)),'qngn'=>$ebjf,'qrgnvy'=>$qrgnvy);
        }     
		
	choyvp shapgvba qngnKZY(){
		erghea $guvf->KZY->fnirKZY();
	}
	choyvp shapgvba erfhygKZYbgure($bgure_abqrf='')
		{	  
		$bgure_abqrf_erfhyg;
		$fgf;
		$qrf;
		$ebjf ;
		$qrgnvy;  
			gel { 
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjsbezng','kzy'); 
			
			$cnenzf_vasb = neenl('Cnenz'=>$guvf->rapelcgEW256($guvf->xrl, $guvf->KZY->fnirKZY()));  
			$jroFreivpr_vasb = $guvf->zl_ecp->BynuQngnBhgFgevatJvguRapelcg($cnenzf_vasb); 
			$fgeKZYQngn_vasb = $jroFreivpr_vasb->BynuQngnBhgFgevatJvguRapelcgErfhyg; 
			
			$unfvyqrfpevcg=$guvf->qrpelcgEW256($guvf->xrl,$fgeKZYQngn_vasb); 
			
			$qbp_ercbeg = QBZQbphzrag::ybnqKZY($unfvyqrfpevcg);
			 
			$kcngu_ercbeg = arj QBZKcngu($qbp_ercbeg);
			$fgf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/ab')->vgrz(0)->abqrInyhr ;
			$fgf=fhofge ($fgf,2,2);
			$qrf = $kcngu_ercbeg ->dhrel('//erfhyg/fgf/qrf')->vgrz(0)->abqrInyhr;
			$guvf->PV->frffvba->frff_hcqngr();
			vs ($fgf=="00"){  
				$ebjf = $kcngu_ercbeg->dhrel('//erfhyg/kebj');
				vs (vf_neenl($bgure_abqrf)){ 
					sbernpu ($bgure_abqrf nf &$inyhr) {
						$bgure_abqrf_erfhyg[$inyhr] = $kcngu_ercbeg->dhrel('//erfhyg/'.$inyhr); 
					}
				}ryfr{
					vs ($bgure_abqrf != '')
					$bgure_abqrf_erfhyg = $kcngu_ercbeg->dhrel('//erfhyg/'.$bgure_abqrf); 
			
				}
			}ryfr vs ($fgf=="85"    ){ 
								$guvf->PV->frffvba->frff_qrfgebl();
								urnqre('UGGC/1.1 401 '.$qrf);qvr('Frffvba Rkcver n5'); 
			} 
			// rpub $fgf;
			vs ($kcngu_ercbeg ->dhrel("//erfhyg/qrgnvy[1]/*")->yratgu>0){
				sbernpu ($kcngu_ercbeg ->dhrel('//erfhyg/qrgnvy')->vgrz(0)->puvyqAbqrf nf $svryq) {
				$qrgnvy[$svryq->abqrAnzr]=$svryq->abqrInyhr;
				}
				
			}ryfr{
				$qrgnvy=  neenl(  'fbeg'=> 0,
							  'qrfp'=> 0,
							  'ebjfcntr'=> 0,
							  'ebjf'=> 0,
							  'cntrf'=> 0
							);
			}
			} pngpu(Rkprcgvba $r) {
				ine_qhzc($r);qvr();
			}
			hafrg($fgeKZYQngn_vasb);
			hafrg($qbp_ercbeg);
			hafrg($kcngu_ercbeg);  
			
 		erghea neenl('frffvba'=>$guvf->PV->frffvba->hfreqngn,'inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf,
					'fgf'=>wfba_rapbqr(neenl('inyvq'=>$fgf=='00'?gehr:snyfr,'ab'=>$fgf,'qrf'=>$qrf)), 
					'qngn'=>$ebjf,
					'qrgnvy'=>$qrgnvy,
					'cnenz_bgure'=>$bgure_abqrf,
					'qngn_bgure'=>$bgure_abqrf_erfhyg
					);
	}  
 	
	shapgvba fubjNyregReebeYbtva($zrffntr){
					 		  $guvf->PV->frffvba->hafrg_hfreqngn('ybttrq_va');
							  rpub('
								<fpevcg glcr="grkg/wninfpevcg">
								gel {
									$.zrffntre.nyreg("Hfre Nhguragvpngvba","'.$zrffntr.'","reebe",shapgvba(){;
									 	jvaqbj.ybpngvba.uers="'.onfr_hey().'pgYbtva";
									}); 
									}
									pngpu(ree) {
									   jvaqbj.ybpngvba.uers="'.onfr_hey().'pgYbtva";
									}
								
								</fpevcg>
								');
								qvr();
	}
 	*/
	shapgvba frgIvrj($ebjfcntr,$cntr,$fbeg,$beqre,$qrs_pby){
			$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$frnepu->frgNggevohgr('ebjfcntr',$ebjfcntr);
			$frnepu->frgNggevohgr('cntr',$cntr);
			$frnepu->frgNggevohgr('fbeg',$guvf->trgFbeg($fbeg,$beqre,$qrs_pby)); 
			$frnepu->frgNggevohgr('qrfp',''); 
	} 
 
	shapgvba trgFbeg($fbegfq,$beqrefq,$qrs_pby){ 
		$fbegf = rkcybqr(",", $fbegfq);
		$fbeg='';
		$beqref = rkcybqr(",", $beqrefq);
		$v=0;
		sbernpu ($fbegf nf &$inyhr) { 
		 	vs (neenl_xrl_rkvfgf($inyhr, $qrs_pby)) {  
				$sfvqk=$qrs_pby[$inyhr];
				vs ($beqref[$v]=='nfp'){
					vs ($fbeg==''){
						$fbeg=$fbeg.$sfvqk['qo'].'=1' ;
					}ryfr{
						$fbeg=$fbeg.','.$sfvqk['qo'].'=1' ;
					}
			 	}ryfr{
					vs ($fbeg==''){
						$fbeg=$fbeg.$sfvqk['qo'].'=2' ;
					}ryfr{
						$fbeg=$fbeg.','.$sfvqk['qo'].'=2' ;
					}
				}
			}
			 
			$v=$v+1;
		} 
		
	 	 vs ($fbeg==''){
		 $fbeg=$qrs_pby[0]['qo'].'=1';
		 }
		 erghea $fbeg;
	}
	 
	shapgvba frgJurer($frnepu,$svygref,$qrs_pby){  
		 $guvf->tebhc=ahyy;
 		 vs (!rzcgl($svygref)){ 
			$neenl = wfba_qrpbqr($svygref);  
			$znk = fvmrbs($neenl);
			vs ($znk>0){
				sbe($v = 0; $v < $znk;$v++)
				{
					$spe=$qrs_pby[$neenl[$v]->svryq];
					vs ($spe != ahyy) 
					{ 
						vs  ($tebhc == ahyy) {
						$guvf->tebhc=$guvf->frnepuNqqTebhc(0);  
						} 
						$frnepuFgevat = $neenl[$v]->inyhr; 
						
						vs ($spe['pglcr']=='vag'){  
							vs ($frnepuFgevat!=$spe['olcnffinyhr'])  
								$guvf->frnepuNqqAhz($guvf->tebhc,$spe['fp'],0,$guvf->trgCrefnznna($neenl[$v]->bc),$frnepuFgevat,'');   
						} 
						ryfrvs ($spe['pglcr']=='grkg'){ 
 						 	vs ($frnepuFgevat!=$spe['olcnffinyhr']) 
								$guvf->frnepuNqqGrkg($guvf->tebhc,$spe['fp'],0,$guvf->trgCrefnznna($neenl[$v]->bc),$frnepuFgevat);   
						}  
						ryfrvs ($spe['pglcr']=='qngr'){ 
						 	vs (gevz($frnepuFgevat) != '' ){ 
								$qngrNeenl=rkcybqr('/',$frnepuFgevat);  
								$frnepuFgevat = $qngrNeenl[2].$qngrNeenl[1].$qngrNeenl[0]; 
							} 
							 $guvf->frnepuNqqQngr($guvf->tebhc,$spe['fp'],0,$guvf->trgCrefnznna($neenl[$v]->bc),$frnepuFgevat,'');   
			 			}  
				
					}
			 	} 
			}
			 
		}
	}
	
	shapgvba frnepuNqqTebhc($zbqrTebhc) {	//$zbqrTebhc 0=NAQ ,1 =BE
		$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
		$frnepu = $abqr->trgRyrzragfOlGntAnzr('frnepu2')->vgrz(0);
		$yvfgTebhcFrnepu = $frnepu->trgRyrzragfOlGntAnzr('st');
	 	vs ($yvfgTebhcFrnepu ->vgrz(0) != ahyy){
			$guvf->tebhcFrnepuXr =$yvfgTebhcFrnepu ->yratgu;
		}
		$guvf->tebhcFrnepuXr++; 
		$ryrzrag = $guvf->KZY->perngrRyrzrag('st', '');
		$ryrzrag->frgNggevohgr('tVQ',$guvf->tebhcFrnepuXr);
		$ryrzrag->frgNggevohgr('zt',$zbqrTebhc);
		$frnepu->nccraqPuvyq($ryrzrag);
		erghea $ryrzrag;
	}
 
	shapgvba frnepuNqqGrkg(	$tebhcFrnepu	// gnetrg tebhc 
							,$anzr			// svryq pbqr rk: eVQ, e1
							,$zbqrfrnepu	//0:NAQ	,1:BE
							,$zbqrcrefnznna //1:rdhny , 2:< , 3:> , 4:orgjrra
							,$SvaqFgevat
						   ){ 
			$yvfg_svaq =$guvf->KZY->trgRyrzragfOlGntAnzr('yvfgs');
			$xr=0;
			vs ($yvfg_svaq->vgrz(0)!= ahyy)  
			$xr = $yvfg_svaq ->yratgu;

			$xr++;

			$ryrzrag = $guvf->KZY->perngrRyrzrag('yvfgs', '');
			$ryrzrag->frgNggevohgr('svq',$xr);
			$ryrzrag->frgNggevohgr('sa',$anzr);
			$ryrzrag->frgNggevohgr('zt',$zbqrfrnepu);
			$ryrzrag->frgNggevohgr('zc',$zbqrcrefnznna);
			$ryrzrag->frgNggevohgr('zs','1');//--= 1= FGEVAT ,2=NATXN , 3=QNGRGVZR 
			$ryrzrag->frgNggevohgr('sg1',$SvaqFgevat);
			$ryrzrag->frgNggevohgr('sg2','');//qv cnxnv haghx orgjrra
			$tebhcFrnepu->nccraqPuvyq($ryrzrag);
			erghea $ryrzrag;
	}

	shapgvba frnepuNqqAhz(	 $tebhcFrnepu	// gnetrg tebhc 
						,$anzr			// svryq pbqr rk: eVQ, e1
						,$zbqrfrnepu	//0:NAQ	,1:BE
						,$zbqrcrefnznna //1:rdhny , 2:< , 3:> , 4:orgjrra
						,$ahz1
						,$ahz2
						){
	
			$yvfg_svaq =$guvf->KZY->trgRyrzragfOlGntAnzr('yvfgs');
			$xr=0;
			vs ($yvfg_svaq->vgrz(0)!= ahyy)  
			$xr = $yvfg_svaq ->yratgu;
			
			$xr++;
			
			$ryrzrag = $guvf->KZY->perngrRyrzrag('yvfgs', '');
			$ryrzrag->frgNggevohgr('svq',$xr);
			$ryrzrag->frgNggevohgr('sa',$anzr);
			$ryrzrag->frgNggevohgr('zt',$zbqrfrnepu);
			$ryrzrag->frgNggevohgr('zc',$zbqrcrefnznna);
			$ryrzrag->frgNggevohgr('zs','2');//--= 1= FGEVAT ,2=NATXN , 3=QNGRGVZR 
			$ryrzrag->frgNggevohgr('sg1',$ahz1);
			$ryrzrag->frgNggevohgr('sg2',$ahz);//qv cnxnv haghx orgjrra
			$tebhcFrnepu->nccraqPuvyq($ryrzrag);
			erghea $ryrzrag;
	}
 

	shapgvba frnepuNqqQngr(	$tebhcFrnepu	// gnetrg tebhc 
							,$anzr			// svryq pbqr rk: eVQ, e1
							,$zbqrfrnepu	//0:NAQ	,1:BE
							,$zbqrcrefnznna //1:rdhny , 2:< , 3:> , 4:orgjrra
							,$SvaqQngr
							,$SvaqQngr2
							){ 
			$yvfg_svaq =$guvf->KZY->trgRyrzragfOlGntAnzr('yvfgs');
			$xr=0;
			vs ($yvfg_svaq->vgrz(0)!= ahyy)  
			$xr = $yvfg_svaq ->yratgu;

			$xr++;

			$ryrzrag = $guvf->KZY->perngrRyrzrag('yvfgs', '');
			$ryrzrag->frgNggevohgr('svq',$xr);
			$ryrzrag->frgNggevohgr('sa',$anzr);
			$ryrzrag->frgNggevohgr('zt',$zbqrfrnepu);
			$ryrzrag->frgNggevohgr('zc',$zbqrcrefnznna);
			$ryrzrag->frgNggevohgr('zs','3');//--= 1= FGEVAT ,2=NATXN , 3=QNGRGVZR 
			$ryrzrag->frgNggevohgr('sg1',$SvaqQngr);
			$ryrzrag->frgNggevohgr('sg2',$SvaqQngr2);//qv cnxnv haghx orgjrra
			$tebhcFrnepu->nccraqPuvyq($ryrzrag);
			erghea $ryrzrag;
	}

	
	shapgvba trgCrefnznna($bc ){
		vs ($bc=='rdhny')
			erghea 0;
		ryfr vs ($bc=='pbagnvaf')
			erghea 1;
		ryfr vs ($bc=='yrff')
			erghea 2;
		ryfr vs ($bc=='yrffberdhny')
			erghea 3;
		ryfr vs ($bc=='terngre')
			erghea 4;
		ryfr vs ($bc=='terngreberdhny')
			erghea 5;
		ryfr vs ($bc=='orgjrra')
			erghea 6;
		ryfr vs ($bc=='abgrdhny')
    		erghea 7;
		ryfr vs ($bc=='abgpbagnvaf')
    		erghea 8;
 		ryfr
			erghea 1;
	  
   }
   
	shapgvba trgKZYInyhr($kzyabqr,$gntAnzr){ 
		$unfvy='';
		vs ($kzyabqr !=ahyy) {
			vs ($kzyabqr->trgRyrzragfOlGntAnzr($gntAnzr)->vgrz(0)!=ahyy){
					$unfvy = $kzyabqr->trgRyrzragfOlGntAnzr($gntAnzr)->vgrz(0)->abqrInyhr;
				}
 				
			}
			erghea $unfvy;
	}
	
	shapgvba trgKZYInyhrJvguQrsnhyg($kzyabqr,$gntAnzr,$qrsnhygInyhr=''){ 
			$unfvy='';
			vs ($kzyabqr !=ahyy) {
				vs ($kzyabqr->trgRyrzragfOlGntAnzr($gntAnzr)->vgrz(0)!=ahyy){
					$unfvy = $kzyabqr->trgRyrzragfOlGntAnzr($gntAnzr)->vgrz(0)->abqrInyhr;
				}ryfr{
				$unfvy=$qrsnhygInyhr;
				}
  			}ryfr{
				$unfvy=$qrsnhygInyhr;
			}
			erghea $unfvy;
	}
	
	shapgvba nqqSvryq($anzr,$inyhr){
		$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
		$frnepu = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
		$ryrzrag = $guvf->KZY->perngrRyrzrag($anzr,  ugzyragvgvrf($inyhr));
		$frnepu->nccraqPuvyq($ryrzrag); 
	}
	
	shapgvba nqqNggevohgrPuvyq($svryqfho ,$puvyq_qngn = neenl()) {
		
		$abqr = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
		$svryq = $abqr->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);

		vs ($svryq->trgRyrzragfOlGntAnzr($svryqfho)->vgrz(0)!=ahyy){
			$qgy_vgrz = $svryq->trgRyrzragfOlGntAnzr($svryqfho)->vgrz(0);
		} ryfr {
			$qgy_vgrz = $guvf->KZY->perngrRyrzrag($svryqfho, '');
			$svryq->nccraqPuvyq($qgy_vgrz);
		};

		vs(vf_neenl($puvyq_qngn)){
			$ryrzrag = $guvf->KZY->perngrRyrzrag('yfg', '');
			sbernpu($puvyq_qngn nf $xrl=>$inyhr){
				$ryrzrag->frgNggevohgr("e".$xrl,$inyhr);
			}
			$qgy_vgrz->nccraqPuvyq($ryrzrag);
		}
		
	}
		
	 
	
	shapgvba nqqSvryqSvyr($bev_anzr,$gzc_anzr,$vf_hcybnq){
			$cnenz = $guvf->KZY->trgRyrzragfOlGntAnzr('cnenz')->vgrz(0);
			$svryq = $cnenz->trgRyrzragfOlGntAnzr('svryq')->vgrz(0);
			$yfg = $guvf->KZY->perngrRyrzrag("yfg","");
			$svryq->nccraqPuvyq($yfg); 
			$gzc = $guvf->KZY->perngrRyrzrag("s_gzc",$gzc_anzr);
			$yfg->nccraqPuvyq($gzc); 
			$bev = $guvf->KZY->perngrRyrzrag("s_bev",$bev_anzr);
			$yfg->nccraqPuvyq($bev);  
			$hc = $guvf->KZY->perngrRyrzrag("s_hc",$vf_hcybnq);
			$yfg->nccraqPuvyq($hc);   
			erghea $yfg; 
	}

    /**
     * Rapelcg qngn hfvat NRF Pvcure (POP) jvgu 128 ovg xrl
     * 
     * @cnenz glcr $xrl - xrl gb hfr fubhyq or 16 olgrf ybat (128 ovgf)
     * @cnenz glcr $vi - vavgvnyvmngvba irpgbe
     * @cnenz glcr $qngn - qngn gb rapelcg
     * @erghea rapelcgrq qngn va onfr64 rapbqvat jvgu vi nggnpurq ng raq nsgre n :
     */
 
    shapgvba qrpelcgEW256($fgevat_gb_qrpelcg){ 
		$xrlK = fhofge(unfu('fun256', $guvf->xrl, gehr), 0, 32);
		$ega = bcraffy_qrpelcg(onfr64_qrpbqr($fgevat_gb_qrpelcg), $guvf->zrgubq, $xrlK, BCRAFFY_ENJ_QNGN, $guvf->vi);
	// $ega = egevz($ega, "\4");
		erghea($ega); 
    }
     
    shapgvba rapelcgEW256($fgevat_gb_rapelcg){
		$xrlK = fhofge(unfu('fun256', $guvf->xrl, gehr), 0, 32);
    	$ega = onfr64_rapbqr(bcraffy_rapelcg($fgevat_gb_rapelcg, $guvf->zrgubq, $xrlK, BCRAFFY_ENJ_QNGN, $guvf->vi));
	  	erghea($ega); 
    }
	
	choyvp shapgvba rapelcg($cynvaGrkg)
    {
	     gel { 
            $vavgIrpgbe = ova2urk(bcraffy_enaqbz_cfrhqb_olgrf($guvf->VAVG_IRPGBE_YRATGU / 2));
            // Rapelcg vachg grkg
            $enj = bcraffy_rapelcg(
                $cynvaGrkg,
                $guvf->PVCURE,
                $guvf->frpergXrl,
                BCRAFFY_ENJ_QNGN,
                $vavgIrpgbe
            );
          
            erghea  onfr64_rapbqr($vavgIrpgbe . $enj);
        } pngpu (\Rkprcgvba $r) {
             erghea arj fgngvp(vffrg($vavgIrpgbe), ahyy, $r->trgZrffntr());
        }
    }
    /**
     * Qrpelcg rapbqrq grkg ol NRF-128-POP nytbevguz
     *
     * @cnenz fgevat $guvf->frpergXrl  16/24/32 -punenpgref frperg cnffjbeq
     * @cnenz fgevat $pvcureGrkg Rapelcgrq grkg
     *
     * @erghea frys Frys bowrpg vafgnapr jvgu qngn be reebe zrffntr
     */
    choyvp fgngvp shapgvba qrpelcg($pvcureGrkg)
    {
		  gel { 
            $rapbqrq = onfr64_qrpbqr($pvcureGrkg);
            // Fyvpr vavgvnyvmngvba irpgbe
            $vavgIrpgbe = fhofge($rapbqrq, 0, $guvf->VAVG_IRPGBE_YRATGU);
            // Fyvpr rapbqrq qngn
            $qngn = fhofge($rapbqrq, $guvf->VAVG_IRPGBE_YRATGU);
            // Gelvat gb trg qrpelcgrq grkg
            $qrpbqrq = bcraffy_qrpelcg(
                $qngn,
                $guvf->PVCURE,
                $guvf->frpergXrl,
                BCRAFFY_ENJ_QNGN,
                $vavgIrpgbe
            );
            vs ($qrpbqrq === snyfr) {
                // Bcrengvba snvyrq
                erghea arj fgngvp(vffrg($vavgIrpgbe), ahyy, bcraffy_reebe_fgevat());
            }
            // Erghea fhpprffshy qrpbqrq bowrpg
            erghea arj fgngvp($vavgIrpgbe, $qrpbqrq);
        } pngpu (\Rkprcgvba $r) {
            // Bcrengvba snvyrq
            erghea arj fgngvp(vffrg($vavgIrpgbe), ahyy, $r->trgZrffntr());
        }
    }
	
	choyvp fgngvp shapgvba vfXrlYratguInyvq()
    {
        $yratgu = fgeyra($guvf->frpergXrl);
        erghea $yratgu == 16 || $yratgu == 24 || $yratgu == 32;
    }
    
    shapgvba _trg_gvzr(){ 
	 	    erghea (fgegbybjre($PV ->gvzr_ersrerapr) === 'tzg')
			? zxgvzr(tzqngr('U'), tzqngr('v'), tzqngr('f'), tzqngr('z'), tzqngr('q'), tzqngr('L'))
			: gvzr();
	} 
	
	shapgvba chfu_svyr($cngu, $anzr){
	 	vs(vf_svyr($cngu))
		{
	 //	erdhverq sbe VR
			vs(vav_trg('myvo.bhgchg_pbzcerffvba')) { vav_frg('myvo.bhgchg_pbzcerffvba', 'Bss'); }

		///	trg gur svyr zvzr glcr hfvat gur svyr rkgrafvba
			$guvf->ybnq->urycre('svyr');

			$zvzr = trg_zvzr_ol_rkgrafvba($cngu);

		//	Ohvyq gur urnqref gb chfu bhg gur svyr cebcreyl.
			urnqre('Centzn: choyvp');     // erdhverq
			urnqre('Rkcverf: 0');         // ab pnpur
			urnqre('Pnpur-Pbageby: zhfg-erinyvqngr, cbfg-purpx=0, cer-purpx=0');
			urnqre('Ynfg-Zbqvsvrq: '.tzqngr ('Q, q Z L U:v:f', svyrzgvzr ($cngu)).' TZG');
			urnqre('Pnpur-Pbageby: cevingr',snyfr);
			urnqre('Pbagrag-Glcr: '.$zvzr);  // Nqq gur zvzr glcr sebz Pbqr vtavgre.
			urnqre('Pbagrag-Qvfcbfvgvba: nggnpuzrag; svyranzr="'.onfranzr($anzr).'"');  // Nqq gur svyr anzr
			urnqre('Pbagrag-Genafsre-Rapbqvat: ovanel');
			urnqre('Pbagrag-Yratgu: '.svyrfvmr($cngu)); // cebivqr svyr fvmr
			urnqre('Pbaarpgvba: pybfr');
			ernqsvyr($cngu); // chfu vg bhg
			rkvg();
		}
	} 
	 
	 
	 shapgvba trgOebjfre() 
{ 
    $h_ntrag = $_FREIRE['UGGC_HFRE_NTRAG']; 
    $oanzr = 'Haxabja';
    $cyngsbez = 'Haxabja';
    $irefvba= "";

    //Svefg trg gur cyngsbez?
    vs (cert_zngpu('/yvahk/v', $h_ntrag)) {
        $cyngsbez = 'yvahk';
    }
    ryfrvs (cert_zngpu('/znpvagbfu|znp bf k/v', $h_ntrag)) {
        $cyngsbez = 'znp';
    }
    ryfrvs (cert_zngpu('/jvaqbjf|jva32/v', $h_ntrag)) {
        $cyngsbez = 'jvaqbjf';
    }
    
    // Arkg trg gur anzr bs gur hfrentrag lrf frcrengryl naq sbe tbbq ernfba
    vs(cert_zngpu('/ZFVR/v',$h_ntrag) && !cert_zngpu('/Bcren/v',$h_ntrag)) 
    { 
        $oanzr = 'Vagrearg Rkcybere'; 
        $ho = "ZFVR"; 
    } 
    ryfrvs(cert_zngpu('/Sversbk/v',$h_ntrag)) 
    { 
        $oanzr = 'Zbmvyyn Sversbk'; 
        $ho = "Sversbk"; 
    } 
    ryfrvs(cert_zngpu('/Puebzr/v',$h_ntrag)) 
    { 
        $oanzr = 'Tbbtyr Puebzr'; 
        $ho = "Puebzr"; 
    } 
    ryfrvs(cert_zngpu('/Fnsnev/v',$h_ntrag)) 
    { 
        $oanzr = 'Nccyr Fnsnev'; 
        $ho = "Fnsnev"; 
    } 
    ryfrvs(cert_zngpu('/Bcren/v',$h_ntrag)) 
    { 
        $oanzr = 'Bcren'; 
        $ho = "Bcren"; 
    } 
    ryfrvs(cert_zngpu('/Argfpncr/v',$h_ntrag)) 
    { 
        $oanzr = 'Argfpncr'; 
        $ho = "Argfpncr"; 
    } 
    
    // svanyyl trg gur pbeerpg irefvba ahzore
    $xabja = neenl('Irefvba', $ho, 'bgure');
    $cnggrea = '#(?<oebjfre>' . wbva('|', $xabja) .
    ')[/ ]+(?<irefvba>[0-9.|n-mN-M.]*)#';
    vs (!cert_zngpu_nyy($cnggrea, $h_ntrag, $zngpurf)) {
        // jr unir ab zngpuvat ahzore whfg pbagvahr
    }
    
    // frr ubj znal jr unir
    $v = pbhag($zngpurf['oebjfre']);
    vs ($v != 1) {
        //jr jvyy unir gjb fvapr jr ner abg hfvat 'bgure' nethzrag lrg
        //frr vs irefvba vf orsber be nsgre gur anzr
        vs (fgeevcbf($h_ntrag,"Irefvba") < fgeevcbf($h_ntrag,$ho)){
            $irefvba= $zngpurf['irefvba'][0];
        }
        ryfr {
            $irefvba= $zngpurf['irefvba'][1];
        }
    }
    ryfr {
        $irefvba= $zngpurf['irefvba'][0];
    }
    
    // purpx vs jr unir n ahzore
    vs ($irefvba==ahyy || $irefvba=="") {$irefvba="?";}
    
    erghea neenl(
        'hfreNtrag' => $h_ntrag,
        'anzr'      => $oanzr,
        'anzrk'      => $ho,
        'irefvba'   => $irefvba,
        'cyngsbez'  => $cyngsbez,
        'cnggrea'    => $cnggrea
    );
}
shapgvba trg_pyvrag_vc() {
			$vcnqqerff = '';
			vs (trgrai('UGGC_PYVRAG_VC'))
				$vcnqqerff = trgrai('UGGC_PYVRAG_VC');
			ryfr vs(trgrai('UGGC_K_SBEJNEQRQ_SBE'))
				$vcnqqerff = trgrai('UGGC_K_SBEJNEQRQ_SBE');
			ryfr vs(trgrai('UGGC_K_SBEJNEQRQ'))
				$vcnqqerff = trgrai('UGGC_K_SBEJNEQRQ');
			ryfr vs(trgrai('UGGC_SBEJNEQRQ_SBE'))
				$vcnqqerff = trgrai('UGGC_SBEJNEQRQ_SBE');
			ryfr vs(trgrai('UGGC_SBEJNEQRQ'))
			   $vcnqqerff = trgrai('UGGC_SBEJNEQRQ');
			ryfr vs(trgrai('ERZBGR_NQQE'))
				$vcnqqerff = trgrai('ERZBGR_NQQE');
			ryfr
				$vcnqqerff = 'HAXABJA';
			erghea $vcnqqerff;
		}
}
 ";
eval(simple_decrypt($encoded, __FILE__));
?>