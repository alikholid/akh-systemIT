<?php
// Encrypted By BricksApp PHP  
// Author : Nizar Rahmat 
$encoded = "Pz48P2N1Yw0KLyp+IHB5bmZmLmZ6Z2MuY3VjDQouLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLg0KfCAgRmJzZ2puZXI6IENVQ1pudnlyZSAtIENVQyByem52eSBweW5mZiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHwNCnwgICBJcmVmdmJhOiA1LjIuNCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8DQp8ICAgICAgRnZncjogdWdnY2Y6Ly9wYnFyLnRiYnR5ci5wYnovbi9uY25wdXItcmtnZW5mLmJldC9jL2N1Y3pudnlyZS8gICAgICAgfA0KfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwNCnwgICAgIE5xenZhOiBXdnogV250dnJ5Znh2IChjZWJ3cnBnIG5xenZhdmF2ZmdlbmdiZSkgICAgICAgICAgICAgICAgICAgICAgICB8DQp8ICAgTmhndWJlZjogTmFxbCBDZXJpYmZnIChwYnFyamJla2dycHUpIHBicXJqYmVrZ3JwdUBoZnJlZi5mYmhlcHJzYmV0ci5hcmcgfA0KfCAgICAgICAgICA6IFpuZXBoZiBPYnZhZ2JhIChwYmJ5b2VoKSBwYmJ5b2VoQGhmcmVmLmZiaGVwcnNiZXRyLmFyZyAgICAgICAgIHwNCnwgICAgICAgICAgOiBXdnogV250dnJ5Znh2ICh3dnp3bnQpIHd2endudEB0em52eS5wYnogICAgICAgICAgICAgICAgICAgICAgICB8DQp8ICAgU2JoYXFyZTogT2VyYWcgRS4gWm5nbXJ5eXIgKGJldnR2YW55IHNiaGFxcmUpICAgICAgICAgICAgICAgICAgICAgICAgICAgfA0KfCBQYmNsZXZ0dWcgKHApIDIwMTAtMjAxMiwgV3Z6IFdudHZyeWZ4di4gTnl5IEV2dHVnZiBFcmZyZWlycS4gICAgICAgICAgICAgIHwNCnwgUGJjbGV2dHVnIChwKSAyMDA0LTIwMDksIE5hcWwgQ2VyaWJmZy4gTnl5IEV2dHVnZiBFcmZyZWlycS4gICAgICAgICAgICAgICB8DQp8IFBiY2xldnR1ZyAocCkgMjAwMS0yMDAzLCBPZXJhZyBFLiBabmdtcnl5ciAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfA0KfCAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIHwNCnwgICBZdnByYWZyOiBRdmZnZXZvaGdycSBoYXFyZSBndXIgWXJmZnJlIFRyYXJlbnkgQ2hveXZwIFl2cHJhZnIgKFlUQ1kpICAgICB8DQp8ICAgICAgICAgICAgdWdnYzovL2pqai50YWguYmV0L3BiY2x5cnNnL3lyZmZyZS51Z3p5ICAgICAgICAgICAgICAgICAgICAgICAgfA0KfCBHdXZmIGNlYnRlbnogdmYgcXZmZ2V2b2hncnEgdmEgZ3VyIHViY3IgZ3VuZyB2ZyBqdnl5IG9yIGhmcnNoeSAtIEpWR1VCSEcgIHwNCnwgTkFMIEpORUVOQUdMOyBqdmd1YmhnIHJpcmEgZ3VyIHZ6Y3l2cnEgam5lZW5hZ2wgYnMgWlJFUFVOQUdOT1ZZVkdMIGJlICAgICB8DQp8IFNWR0FSRkYgU0JFIE4gQ05FR1ZQSFlORSBDSEVDQkZSLiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfA0KJy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScNCiovDQoNCi8qKg0KICogQ1VDWm52eXJlIC0gQ1VDIEZaR0MgcnpudnkgZ2VuYWZjYmVnIHB5bmZmDQogKiBBQkdSOiBRcmZ2dGFycSBzYmUgaGZyIGp2Z3UgQ1VDIGlyZWZ2YmEgNSBuYXEgaGMNCiAqIEBjbnB4bnRyIENVQ1pudnlyZQ0KICogQG5oZ3ViZSBOYXFsIENlcmliZmcNCiAqIEBuaGd1YmUgWm5lcGhmIE9idmFnYmENCiAqIEBwYmNsZXZ0dWcgMjAwNCAtIDIwMDggTmFxbCBDZXJpYmZnDQogKiBAbmhndWJlIFd2eiBXbnR2cnlmeHYNCiAqIEBwYmNsZXZ0dWcgMjAxMCAtIDIwMTIgV3Z6IFdudHZyeWZ4dg0KICogQHl2cHJhZnIgdWdnYzovL2pqai50YWguYmV0L3BiY2x5cnNnL3lyZmZyZS51Z3p5IFF2Zmdldm9oZ3JxIGhhcXJlIGd1ciBZcmZmcmUgVHJhcmVueSBDaG95dnAgWXZwcmFmciAoWVRDWSkNCiAqLw0KDQovKioNCiAqIENVQyBFU1A4MjEgRlpHQyBweXZyYWcNCiAqDQogKiBWemN5cnpyYWdmIG55eSBndXIgRVNQIDgyMSBGWkdDIHBienpuYXFmIHJrcHJjZyBHSEVBIGp1dnB1IGp2eXkgbnlqbmxmIGVyZ2hlYSBuIGFiZyB2emN5cnpyYWdycSByZWViZS4NCiAqIEZaR0MgbnlmYiBjZWJpdnFyZiBmYnpyIGhndnl2Z2wgenJndWJxZiBzYmUgZnJhcXZhdCB6bnZ5IGdiIG5hIEZaR0MgZnJlaXJlLg0KICogQG5oZ3ViZSBQdWV2ZiBFbG5hDQogKiBAY25weG50ciBDVUNabnZ5cmUNCiAqLw0KDQpweW5mZiBGWkdDIHsNCiAgLyoqDQogICAqICBGWkdDIGZyZWlyZSBjYmVnDQogICAqICBAaW5lIHZhZw0KICAgKi8NCiAgY2hveXZwICRGWkdDX0NCRUcgPSAyNTsNCg0KICAvKioNCiAgICogIEZaR0MgZXJjeWwgeXZhciByYXF2YXQgKHFiYSdnIHB1bmF0cikNCiAgICogIEBpbmUgZmdldmF0DQogICAqLw0KICBjaG95dnAgJFBFWVMgPSAiXGVcYSI7DQoNCiAgLyoqDQogICAqICBGcmdmIGp1cmd1cmUgcXJvaHR0dmF0IHZmIGdoZWFycSBiYQ0KICAgKiAgQGluZSBvYmJ5DQogICAqLw0KICBjaG95dnAgJHFiX3Fyb2h0OyAgICAgICAvLyBndXIgeXJpcnkgYnMgcXJvaHQgZ2IgY3Jlc2Jleg0KDQogIC8qKg0KICAgKiBGcmdmIGd1ciBzaGFwZ3ZiYS96cmd1YnEgZ2IgaGZyIHNiZSBxcm9odHR2YXQgYmhnY2hnLg0KICAgKiBFdnR1ZyBhYmoganIgYmF5bCB1YmFiZSAicnB1YiIgYmUgInJlZWJlX3lidCINCiAgICogQGluZSBmZ2V2YXQNCiAgICovDQogIGNob3l2cCAkUXJvaHRiaGdjaGcgICAgID0gInJwdWIiOw0KDQogIC8qKg0KICAgKiAgRnJnZiBJUkVDIGhmciBiYS9ic3MgKHFyc25oeWcgdmYgYnNzKQ0KICAgKiAgQGluZSBvYmJ5DQogICAqLw0KICBjaG95dnAgJHFiX2lyZWMgPSBzbnlmcjsNCg0KICAvKioNCiAgICogRnJnZiBndXIgRlpHQyBndnpyYmhnIGlueWhyIHNiZSBlcm5xZiwgdmEgZnJwYmFxZg0KICAgKiBAaW5lIHZhZw0KICAgKi8NCiAgY2hveXZwICRHdnpyYmhnICAgICAgICAgPSAxNTsNCg0KICAvKioNCiAgICogRnJnZiBndXIgRlpHQyBndnpyeXZ6dmcgaW55aHIgc2JlIGVybnFmLCB2YSBmcnBiYXFmDQogICAqIEBpbmUgdmFnDQogICAqLw0KICBjaG95dnAgJEd2enJ5dnp2ZyAgICAgICA9IDMwOw0KDQogIC8qKg0KICAgKiBGcmdmIGd1ciBGWkdDIENVQ1pudnlyZSBJcmVmdmJhIGFoem9yZQ0KICAgKiBAaW5lIGZnZXZhdA0KICAgKi8NCiAgY2hveXZwICRJcmVmdmJhICAgICAgICAgPSAnNS4yLjQnOw0KDQogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCiAgLy8gQ0VCQ1JFR1ZSRiwgQ0VWSU5HUiBOQVEgQ0VCR1JQR1JRDQogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCg0KICAvKioNCiAgICogQGluZSBlcmZiaGVwciBHdXIgZmJweHJnIGdiIGd1ciBmcmVpcmUNCiAgICovDQogIGNldmluZ3IgJGZ6Z2NfcGJhYTsNCiAgLyoqDQogICAqIEBpbmUgZmdldmF0IFJlZWJlIHpyZmZudHIsIHZzIG5hbCwgc2JlIGd1ciB5bmZnIHBueXkNCiAgICovDQogIGNldmluZ3IgJHJlZWJlOw0KICAvKioNCiAgICogQGluZSBmZ2V2YXQgR3VyIGVyY3lsIGd1ciBmcmVpcmUgZnJhZyBnYiBoZiBzYmUgVVJZQg0KICAgKi8NCiAgY2V2aW5nciAkdXJ5Yl9lY3lsOw0KDQogIC8qKg0KICAgKiBCaGdjaGdmIHFyb2h0dHZhdCB2YXNiIGl2biBoZnJlLXFyc3ZhcnEgenJndWJxDQogICAqIEBjbmVueiBmZ2V2YXQgJGZnZQ0KICAgKi8NCiAgY2V2aW5nciBzaGFwZ3ZiYSBycXJvaHQoJGZnZSkgew0KICAgIHZzICgkZ3V2Zi0+UXJvaHRiaGdjaGcgPT0gInJlZWJlX3lidCIpIHsNCiAgICAgICAgcmVlYmVfeWJ0KCRmZ2UpOw0KICAgIH0gcnlmciB7DQogICAgICAgIHJwdWIgJGZnZTsNCiAgICB9DQogIH0NCg0KICAvKioNCiAgICogVmF2Z3ZueXZtciBndXIgcHluZmYgZmIgZ3VuZyBndXIgcW5nbiB2ZiB2YSBuIHhhYmphIGZnbmdyLg0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAZXJnaGVhIEZaR0MNCiAgICovDQogIGNob3l2cCBzaGFwZ3ZiYSBfX3BiYWZnZWhwZygpIHsNCiAgICAkZ3V2Zi0+ZnpnY19wYmFhID0gMDsNCiAgICAkZ3V2Zi0+cmVlYmUgPSBhaHl5Ow0KICAgICRndXZmLT51cnliX2VjeWwgPSBhaHl5Ow0KDQogICAgJGd1dmYtPnFiX3Fyb2h0ID0gMDsNCiAgfQ0KDQogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCiAgLy8gUEJBQVJQR1ZCQSBTSEFQR1ZCQUYNCiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KDQogIC8qKg0KICAgKiBQYmFhcnBnIGdiIGd1ciBmcmVpcmUgZmNycHZzdnJxIGJhIGd1ciBjYmVnIGZjcnB2c3ZycS4NCiAgICogVnMgZ3VyIGNiZWcgdmYgYWJnIGZjcnB2c3ZycSBoZnIgZ3VyIHFyc25oeWcgRlpHQ19DQkVHLg0KICAgKiBWcyBnaW55IHZmIGZjcnB2c3ZycSBndXJhIG4gcGJhYXJwZ3ZiYSBqdnl5IGdlbCBuYXEgb3INCiAgICogcmZnbm95dmZ1cnEganZndSBndXIgZnJlaXJlIHNiZSBndW5nIGFoem9yZSBicyBmcnBiYXFmLg0KICAgKiBWcyBnaW55IHZmIGFiZyBmY3JwdnN2cnEgZ3VyIHFyc25oeWcgdmYgMzAgZnJwYmFxZiBnYg0KICAgKiBnZWwgYmEgZ3VyIHBiYWFycGd2YmEuDQogICAqDQogICAqIEZaR0MgUEJRUiBGSFBQUkZGOiAyMjANCiAgICogRlpHQyBQQlFSIFNOVllIRVI6IDQyMQ0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAY25lbnogZmdldmF0ICR1YmZnDQogICAqIEBjbmVueiB2YWcgJGNiZWcNCiAgICogQGNuZW56IHZhZyAkZ2lueQ0KICAgKiBAZXJnaGVhIG9iYnkNCiAgICovDQogIGNob3l2cCBzaGFwZ3ZiYSBQYmFhcnBnKCR1YmZnLCAkY2JlZyA9IDAsICRnaW55ID0gMzApIHsNCiAgICAvLyBmcmcgZ3VyIHJlZWJlIGlueSBnYiBhaHl5IGZiIGd1cmVyIHZmIGFiIHBiYXNoZnZiYQ0KICAgICRndXZmLT5yZWViZSA9IGFoeXk7DQoNCiAgICAvLyB6bnhyIGZoZXIganIgbmVyIF9fYWJnX18gcGJhYXJwZ3JxDQogICAgdnMoJGd1dmYtPnBiYWFycGdycSgpKSB7DQogICAgICAvLyBueWVybnFsIHBiYWFycGdycSwgdHJhcmVuZ3IgcmVlYmUNCiAgICAgICRndXZmLT5yZWViZSA9IG5lZW5sKCJyZWViZSIgPT4gIk55ZXJucWwgcGJhYXJwZ3JxIGdiIG4gZnJlaXJlIik7DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgdnMocnpjZ2woJGNiZWcpKSB7DQogICAgICAkY2JlZyA9ICRndXZmLT5GWkdDX0NCRUc7DQogICAgfQ0KDQogICAgLy8gcGJhYXJwZyBnYiBndXIgZnpnYyBmcmVpcmUNCiAgICAkZ3V2Zi0+ZnpnY19wYmFhID0gQHNmYnB4YmNyYSgkdWJmZywgICAgLy8gZ3VyIHViZmcgYnMgZ3VyIGZyZWlyZQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGNiZWcsICAgIC8vIGd1ciBjYmVnIGdiIGhmcg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJHJlZWFiLCAgIC8vIHJlZWJlIGFoem9yZSB2cyBuYWwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRyZWVmZ2UsICAvLyByZWViZSB6cmZmbnRyIHZzIG5hbA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGdpbnkpOyAgIC8vIHR2aXIgaGMgbnNncmUgPyBmcnBmDQogICAgLy8gaXJldnNsIGpyIHBiYWFycGdycSBjZWJjcmV5bA0KICAgIHZzKHJ6Y2dsKCRndXZmLT5memdjX3BiYWEpKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPSBuZWVubCgicmVlYmUiID0+ICJTbnZ5cnEgZ2IgcGJhYXJwZyBnYiBmcmVpcmUiLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgInJlZWFiIiA9PiAkcmVlYWIsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAicmVlZmdlIiA9PiAkcmVlZmdlKTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAkcmVlZmdlICgkcmVlYWIpIiAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgfQ0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgIC8vIEZaR0MgZnJlaXJlIHBuYSBnbnhyIHliYXRyZSBnYiBlcmZjYmFxLCB0dmlyIHliYXRyZSBndnpyYmhnIHNiZSBzdmVmZyBlcm5xDQogICAgLy8gSnZhcWJqZiBxYnJmIGFiZyB1bmlyIGZoY2NiZWcgc2JlIGd1dmYgZ3Z6cmJoZyBzaGFwZ3ZiYQ0KICAgIHZzKGZob2ZnZShDVUNfQkYsIDAsIDMpICE9ICJKVkEiKSB7DQogICAgICR6bmsgPSB2YXZfdHJnKCd6bmtfcmtycGhndmJhX2d2enInKTsNCiAgICAgdnMgKCR6bmsgIT0gMCAmJiAkZ2lueSA+ICR6bmspIHsgLy8gcWJhJ2cgb2JndXJlIHZzIGhheXZ6dmdycQ0KICAgICAgQGZyZ19ndnpyX3l2enZnKCRnaW55KTsNCiAgICAgfQ0KICAgICBmZ2VybnpfZnJnX2d2enJiaGcoJGd1dmYtPmZ6Z2NfcGJhYSwgJGdpbnksIDApOw0KICAgIH0NCg0KICAgIC8vIHRyZyBuYWwgbmFhYmhhcHJ6cmFnDQogICAgJG5hYWJoYXByID0gJGd1dmYtPnRyZ195dmFyZigpOw0KDQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDIpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gU0VCWiBGUkVJUkU6IiAuICRuYWFiaGFwciAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgIH0NCg0KICAgIGVyZ2hlYSBnZWhyOw0KICB9DQoNCiAgLyoqDQogICAqIFZhdmd2bmdyIG4gR1lGIHBienpoYXZwbmd2YmEganZndSBndXIgZnJlaXJlLg0KICAgKg0KICAgKiBGWkdDIFBCUVIgMjIwIEVybnFsIGdiIGZnbmVnIEdZRg0KICAgKiBGWkdDIFBCUVIgNTAxIEZsYWduayByZWViZSAoYWIgY25lbnpyZ3JlZiBueXlianJxKQ0KICAgKiBGWkdDIFBCUVIgNDU0IEdZRiBhYmcgbmludnlub3lyIHFociBnYiBncnpjYmVuZWwgZXJuZmJhDQogICAqIEBucHByZmYgY2hveXZwDQogICAqIEBlcmdoZWEgb2JieSBmaHBwcmZmDQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgRmduZWdHWUYoKSB7DQogICAgJGd1dmYtPnJlZWJlID0gYWh5eTsgIyBnYiBuaWJ2cSBwYmFzaGZ2YmENCg0KICAgIHZzKCEkZ3V2Zi0+cGJhYXJwZ3JxKCkpIHsNCiAgICAgICRndXZmLT5yZWViZSA9IG5lZW5sKCJyZWViZSIgPT4gIlBueXlycSBGZ25lZ0dZRigpIGp2Z3ViaGcgb3J2YXQgcGJhYXJwZ3JxIik7DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwiRkdORUdHWUYiIC4gJGd1dmYtPlBFWVMpOw0KDQogICAgJGVjeWwgPSAkZ3V2Zi0+dHJnX3l2YXJmKCk7DQogICAgJHBicXIgPSBmaG9mZ2UoJGVjeWwsMCwzKTsNCg0KICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAyKSB7DQogICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFNFQlogRlJFSVJFOiIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgIH0NCg0KICAgIHZzKCRwYnFyICE9IDIyMCkgew0KICAgICAgJGd1dmYtPnJlZWJlID0NCiAgICAgICAgIG5lZW5sKCJyZWViZSIgICAgID0+ICJGR05FR0dZRiBhYmcgbnBwcmNncnEgc2VieiBmcmVpcmUiLA0KICAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICAiZnpnY196ZnQiICA9PiBmaG9mZ2UoJGVjeWwsNCkpOw0KICAgICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDEpIHsNCiAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgfQ0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgIC8vIE9ydHZhIHJhcGVsY2dycSBwYmFhcnBndmJhDQogICAgdnMoIWZnZXJuel9mYnB4cmdfcmFub3lyX3BlbGNnYigkZ3V2Zi0+ZnpnY19wYmFhLCBnZWhyLCBGR0VSTlpfUEVMQ0dCX1pSR1VCUV9HWUZfUFlWUkFHKSkgew0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgIGVyZ2hlYSBnZWhyOw0KICB9DQoNCiAgLyoqDQogICAqIENyZXNiZXpmIEZaR0MgbmhndXJhZ3Zwbmd2YmEuICBaaGZnIG9yIGVoYSBuc2dyZSBlaGFhdmF0IGd1cg0KICAgKiBVcnl5YigpIHpyZ3VicS4gIEVyZ2hlYWYgZ2VociB2cyBmaHBwcmZmc2h5eWwgbmhndXJhZ3ZwbmdycS4NCiAgICogQG5wcHJmZiBjaG95dnANCiAgICogQGNuZW56IGZnZXZhdCAkaGZyZWFuenINCiAgICogQGNuZW56IGZnZXZhdCAkY25mZmpiZXENCiAgICogQGNuZW56IGZnZXZhdCAkbmhndWdsY3INCiAgICogQGNuZW56IGZnZXZhdCAkZXJueXoNCiAgICogQGNuZW56IGZnZXZhdCAkamJleGZnbmd2YmENCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgTmhndXJhZ3ZwbmdyKCRoZnJlYW56ciwgJGNuZmZqYmVxLCAkbmhndWdsY3I9J1lCVFZBJywgJGVybnl6PScnLCAkamJleGZnbmd2YmE9JycpIHsNCiAgICB2cyAocnpjZ2woJG5oZ3VnbGNyKSkgew0KICAgICAgJG5oZ3VnbGNyID0gJ1lCVFZBJzsNCiAgICB9DQoNCiAgICBmanZncHUgKCRuaGd1Z2xjcikgew0KICAgICAgcG5mciAnQ1lOVkEnOg0KICAgICAgICAvLyBGZ25lZyBuaGd1cmFndnBuZ3ZiYQ0KICAgICAgICBzY2hnZigkZ3V2Zi0+ZnpnY19wYmFhLCJOSEdVIENZTlZBIiAuICRndXZmLT5QRVlTKTsNCiAgICANCiAgICAgICAgJGVjeWwgPSAkZ3V2Zi0+dHJnX3l2YXJmKCk7DQogICAgICAgICRwYnFyID0gZmhvZmdlKCRlY3lsLDAsMyk7DQogICAgDQogICAgICAgIHZzKCRwYnFyICE9IDMzNCkgew0KICAgICAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgICAgICBuZWVubCgicmVlYmUiID0+ICJOSEdVIGFiZyBucHByY2dycSBzZWJ6IGZyZWlyZSIsDQogICAgICAgICAgICAgICAgICAiZnpnY19wYnFyIiA9PiAkcGJxciwNCiAgICAgICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgICAgIH0NCiAgICAgICAgICBlcmdoZWEgc255ZnI7DQogICAgICAgIH0NCiAgICAgICAgLy8gRnJhcSByYXBicXJxIGhmcmVhbnpyIG5hcSBjbmZmamJlcQ0KICAgICAgICBzY2hnZigkZ3V2Zi0+ZnpnY19wYmFhLCBvbmZyNjRfcmFwYnFyKCJcMCIuJGhmcmVhbnpyLiJcMCIuJGNuZmZqYmVxKSAuICRndXZmLT5QRVlTKTsNCg0KICAgICAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAgICAgJHBicXIgPSBmaG9mZ2UoJGVjeWwsMCwzKTsNCiAgICANCiAgICAgICAgdnMoJHBicXIgIT0gMjM1KSB7DQogICAgICAgICAgJGd1dmYtPnJlZWJlID0NCiAgICAgICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIk5oZ3VyYWd2cG5ndmJhIGFiZyBucHByY2dycSBzZWJ6IGZyZWlyZSIsDQogICAgICAgICAgICAgICAgICAiZnpnY19wYnFyIiA9PiAkcGJxciwNCiAgICAgICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgICAgIH0NCiAgICAgICAgICBlcmdoZWEgc255ZnI7DQogICAgICAgIH0NCiAgICAgICAgb2Vybng7DQogICAgICBwbmZyICdZQlRWQSc6DQogICAgICAgIC8vIEZnbmVnIG5oZ3VyYWd2cG5ndmJhDQogICAgICAgIHNjaGdmKCRndXZmLT5memdjX3BiYWEsIk5IR1UgWUJUVkEiIC4gJGd1dmYtPlBFWVMpOw0KICAgIA0KICAgICAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAgICAgJHBicXIgPSBmaG9mZ2UoJGVjeWwsMCwzKTsNCiAgICANCiAgICAgICAgdnMoJHBicXIgIT0gMzM0KSB7DQogICAgICAgICAgJGd1dmYtPnJlZWJlID0NCiAgICAgICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIk5IR1UgYWJnIG5wcHJjZ3JxIHNlYnogZnJlaXJlIiwNCiAgICAgICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAgICAgImZ6Z2NfemZ0IiA9PiBmaG9mZ2UoJGVjeWwsNCkpOw0KICAgICAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFJFRUJFOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gIjogIiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICAgICAgfQ0KICAgICAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICAgICAgfQ0KICAgIA0KICAgICAgICAvLyBGcmFxIHJhcGJxcnEgaGZyZWFuenINCiAgICAgICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwgb25mcjY0X3JhcGJxcigkaGZyZWFuenIpIC4gJGd1dmYtPlBFWVMpOw0KICAgIA0KICAgICAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAgICAgJHBicXIgPSBmaG9mZ2UoJGVjeWwsMCwzKTsNCiAgICANCiAgICAgICAgdnMoJHBicXIgIT0gMzM0KSB7DQogICAgICAgICAgJGd1dmYtPnJlZWJlID0NCiAgICAgICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIkhmcmVhbnpyIGFiZyBucHByY2dycSBzZWJ6IGZyZWlyZSIsDQogICAgICAgICAgICAgICAgICAiZnpnY19wYnFyIiA9PiAkcGJxciwNCiAgICAgICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgICAgIH0NCiAgICAgICAgICBlcmdoZWEgc255ZnI7DQogICAgICAgIH0NCiAgICANCiAgICAgICAgLy8gRnJhcSByYXBicXJxIGNuZmZqYmVxDQogICAgICAgIHNjaGdmKCRndXZmLT5memdjX3BiYWEsIG9uZnI2NF9yYXBicXIoJGNuZmZqYmVxKSAuICRndXZmLT5QRVlTKTsNCiAgICANCiAgICAgICAgJGVjeWwgPSAkZ3V2Zi0+dHJnX3l2YXJmKCk7DQogICAgICAgICRwYnFyID0gZmhvZmdlKCRlY3lsLDAsMyk7DQogICAgDQogICAgICAgIHZzKCRwYnFyICE9IDIzNSkgew0KICAgICAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgICAgICBuZWVubCgicmVlYmUiID0+ICJDbmZmamJlcSBhYmcgbnBwcmNncnEgc2VieiBmcmVpcmUiLA0KICAgICAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICAgICAiZnpnY196ZnQiID0+IGZob2ZnZSgkZWN5bCw0KSk7DQogICAgICAgICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDEpIHsNCiAgICAgICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICAgICAgICB9DQogICAgICAgICAgZXJnaGVhIHNueWZyOw0KICAgICAgICB9DQogICAgICAgIG9lcm54Ow0KICAgICAgcG5mciAnQUdZWic6DQogICAgICAgIC8qDQogICAgICAgICAqIGFneXpfZm5meV9weXZyYWcuY3VjDQogICAgICAgICAqKiBPaGFxeXJxIGp2Z3UgQ3JlenZmZnZiYQ0KICAgICAgICAgKioNCiAgICAgICAgICoqIFViaiBnYiBncnlhcmcgdmEganZhcWJqZjogdWdnYzovL2dycHVhcmcuenZwZWJmYnNnLnBiei9yYS1oZi95dm9lbmVsL25uOTk1NzE4JTI4UktQVVQuNjUlMjkubmZjaw0KICAgICAgICAgKiogQ0VCR0JQQlkgUWJwaHpyYWduZ3ZiYSB1Z2djOi8vcGhleS51bmtrLmZyL2VzcC9hZ3l6LnVnenkjYWd5ekZ6Z2NOaGd1cmFndnBuZ3ZiYQ0KICAgICAgICAgKi8NCiAgICAgICAgZXJkaHZlcl9iYXByKCdhZ3l6X2ZuZnlfcHl2cmFnLmN1YycpOw0KICAgICAgICAkZ3J6YyA9IGFyaiBmZ3FQeW5mZigpOw0KICAgICAgICAkYWd5el9weXZyYWcgPSBhcmogYWd5el9mbmZ5X3B5dnJhZ19weW5mZjsNCiAgICAgICAgdnMoISAkYWd5el9weXZyYWctPlZhdmd2bnl2bXIoJGdyemMpKXsvL3lyZydmIGdyZmcgdnMgcmlyZWwgc2hhcGd2YmEgdmdmIG5pbnZ5bm95cg0KICAgICAgICAgICAgJGd1dmYtPnJlZWJlID0gbmVlbmwoInJlZWJlIiA9PiAkZ3J6Yy0+cmVlYmUpOw0KICAgICAgICAgICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDEpIHsNCiAgICAgICAgICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJMYmggYXJycSBnYiByYW5veXIgZmJ6ciB6YnFoeXJmIHZhIGxiaGUgY3VjLnZhdiBzdnlyOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gJGd1dmYtPlBFWVMpOw0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgZXJnaGVhIHNueWZyOw0KICAgICAgICB9DQogICAgICAgICR6ZnQxID0gJGFneXpfcHl2cmFnLT5HbGNyWmZ0MSgkZXJueXosICRqYmV4ZmduZ3ZiYSk7Ly96ZnQxDQogICAgICAgIA0KICAgICAgICBzY2hnZigkZ3V2Zi0+ZnpnY19wYmFhLCJOSEdVIEFHWVogIiAuIG9uZnI2NF9yYXBicXIoJHpmdDEpIC4gJGd1dmYtPlBFWVMpOw0KDQogICAgICAgICRlY3lsID0gJGd1dmYtPnRyZ195dmFyZigpOw0KICAgICAgICAkcGJxciA9IGZob2ZnZSgkZWN5bCwwLDMpOw0KICAgICAgICANCg0KICAgICAgICB2cygkcGJxciAhPSAzMzQpIHsNCiAgICAgICAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgICAgICAgICAgbmVlbmwoInJlZWJlIiA9PiAiTkhHVSBhYmcgbnBwcmNncnEgc2VieiBmcmVpcmUiLA0KICAgICAgICAgICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgICAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICAgICAgfQ0KICAgICAgICANCiAgICAgICAgJHB1bnl5bmF0ciA9IGZob2ZnZSgkZWN5bCwzKTsvL2d1Ymh0dSAwIG9uZnJxLCBndXJlciB2ZiBuIGp1dmdyIGZjbnByIG5zZ3JlIGd1ciAzIHF2dHZnIGFoem9yZS4uLi4vL3pmdDINCiAgICAgICAgJHB1bnl5bmF0ciA9IG9uZnI2NF9xcnBicXIoJHB1bnl5bmF0cik7DQogICAgICAgICRhZ3l6X2VyZiA9ICRhZ3l6X3B5dnJhZy0+QUdZWkVyZmNiYWZyKGZob2ZnZSgkcHVueXluYXRyLDI0LDgpLCRjbmZmamJlcSk7DQogICAgICAgICR6ZnQzID0gJGFneXpfcHl2cmFnLT5HbGNyWmZ0MygkYWd5el9lcmYsJGhmcmVhbnpyLCRlcm55eiwkamJleGZnbmd2YmEpOy8vemZ0Mw0KICAgICAgICAvLyBGcmFxIHJhcGJxcnEgaGZyZWFuenINCiAgICAgICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwgb25mcjY0X3JhcGJxcigkemZ0MykgLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAgICAgJGVjeWwgPSAkZ3V2Zi0+dHJnX3l2YXJmKCk7DQogICAgICAgICRwYnFyID0gZmhvZmdlKCRlY3lsLDAsMyk7DQoNCiAgICAgICAgdnMoJHBicXIgIT0gMjM1KSB7DQogICAgICAgICAgICAkZ3V2Zi0+cmVlYmUgPQ0KICAgICAgICAgICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIlBiaHlxIGFiZyBuaGd1cmFndnBuZ3IiLA0KICAgICAgICAgICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgICAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBSRUVCRTogIiAuICRndXZmLT5yZWViZVsicmVlYmUiXSAuICI6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICAgICAgfQ0KICAgICAgICBvZXJueDsNCiAgICB9DQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRXJnaGVhZiBnZWhyIHZzIHBiYWFycGdycSBnYiBuIGZyZWlyZSBiZ3VyZWp2ZnIgc255ZnINCiAgICogQG5wcHJmZiBjaG95dnANCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgUGJhYXJwZ3JxKCkgew0KICAgIHZzKCFyemNnbCgkZ3V2Zi0+ZnpnY19wYmFhKSkgew0KICAgICAgJGZicHhfZmduZ2hmID0gZmJweHJnX3RyZ19mZ25naGYoJGd1dmYtPmZ6Z2NfcGJhYSk7DQogICAgICB2cygkZmJweF9mZ25naGZbInJicyJdKSB7DQogICAgICAgIC8vIGd1ciBmYnB4cmcgdmYgaW55dnEgb2hnIGpyIG5lciBhYmcgcGJhYXJwZ3JxDQogICAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IEFCR1ZQUjoiIC4gJGd1dmYtPlBFWVMgLiAiUkJTIHBuaHR1ZyBqdXZ5ciBwdXJweHZhdCB2cyBwYmFhcnBncnEiKTsNCiAgICAgICAgfQ0KICAgICAgICAkZ3V2Zi0+UHliZnIoKTsNCiAgICAgICAgZXJnaGVhIHNueWZyOw0KICAgICAgfQ0KICAgICAgZXJnaGVhIGdlaHI7IC8vIHJpcmVsZ3V2YXQgeWJieGYgdGJicQ0KICAgIH0NCiAgICBlcmdoZWEgc255ZnI7DQogIH0NCg0KICAvKioNCiAgICogUHliZnJmIGd1ciBmYnB4cmcgbmFxIHB5cm5hZiBoYyBndXIgZmduZ3IgYnMgZ3VyIHB5bmZmLg0KICAgKiBWZyB2ZiBhYmcgcGJhZnZxcmVycSB0YmJxIGdiIGhmciBndXZmIHNoYXBndmJhIGp2Z3ViaGcNCiAgICogc3ZlZmcgZ2VsdmF0IGdiIGhmciBESFZHLg0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAZXJnaGVhIGlidnENCiAgICovDQogIGNob3l2cCBzaGFwZ3ZiYSBQeWJmcigpIHsNCiAgICAkZ3V2Zi0+cmVlYmUgPSBhaHl5OyAvLyBmYiBndXJlciB2ZiBhYiBwYmFzaGZ2YmENCiAgICAkZ3V2Zi0+dXJ5Yl9lY3lsID0gYWh5eTsNCiAgICB2cyghcnpjZ2woJGd1dmYtPmZ6Z2NfcGJhYSkpIHsNCiAgICAgIC8vIHB5YmZyIGd1ciBwYmFhcnBndmJhIG5hcSBweXJuYWhjDQogICAgICBzcHliZnIoJGd1dmYtPmZ6Z2NfcGJhYSk7DQogICAgICAkZ3V2Zi0+ZnpnY19wYmFhID0gMDsNCiAgICB9DQogIH0NCg0KICAvLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vDQogIC8vIEZaR0MgUEJaWk5BUUYNCiAgLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLw0KDQogIC8qKg0KICAgKiBWZmZocmYgbiBxbmduIHBienpuYXEgbmFxIGZyYXFmIGd1ciB6ZnRfcW5nbiBnYiBndXIgZnJlaXJlDQogICAqIHN2YXZueXZtdmF0IGd1ciB6bnZ5IGdlbmFmbnBndmJhLiAkemZ0X3FuZ24gdmYgZ3VyIHpyZmZudHINCiAgICogZ3VuZyB2ZiBnYiBvciBmcmFxIGp2Z3UgZ3VyIHVybnFyZWYuIFJucHUgdXJucXJlIGFycnFmIGdiIG9yDQogICAqIGJhIG4gZnZhdHlyIHl2YXIgc2J5eWJqcnEgb2wgbiA8UEVZUz4ganZndSBndXIgenJmZm50ciB1cm5xcmVmDQogICAqIG5hcSBndXIgenJmZm50ciBvYnFsIG9ydmF0IGZyY3JlbmdycSBvbCBuYXEgbnFxdmd2YmFueSA8UEVZUz4uDQogICAqDQogICAqIFZ6Y3lyenJhZ2YgZXNwIDgyMTogUU5HTiA8UEVZUz4NCiAgICoNCiAgICogRlpHQyBQQlFSIFZBR1JFWlJRVk5HUjogMzU0DQogICAqICAgICBbcW5nbl0NCiAgICogICAgIDxQRVlTPi48UEVZUz4NCiAgICogICAgIEZaR0MgUEJRUiBGSFBQUkZGOiAyNTANCiAgICogICAgIEZaR0MgUEJRUiBTTlZZSEVSOiA1NTIsNTU0LDQ1MSw0NTINCiAgICogRlpHQyBQQlFSIFNOVllIRVI6IDQ1MSw1NTQNCiAgICogRlpHQyBQQlFSIFJFRUJFICA6IDUwMCw1MDEsNTAzLDQyMQ0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAY25lbnogZmdldmF0ICR6ZnRfcW5nbg0KICAgKiBAZXJnaGVhIG9iYnkNCiAgICovDQogIGNob3l2cCBzaGFwZ3ZiYSBRbmduKCR6ZnRfcW5nbikgew0KICAgICRndXZmLT5yZWViZSA9IGFoeXk7IC8vIGZiIGFiIHBiYXNoZnZiYSB2ZiBwbmhmcnENCg0KICAgIHZzKCEkZ3V2Zi0+cGJhYXJwZ3JxKCkpIHsNCiAgICAgICRndXZmLT5yZWViZSA9IG5lZW5sKA0KICAgICAgICAgICAgICAicmVlYmUiID0+ICJQbnl5cnEgUW5nbigpIGp2Z3ViaGcgb3J2YXQgcGJhYXJwZ3JxIik7DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwiUU5HTiIgLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAkcGJxciA9IGZob2ZnZSgkZWN5bCwwLDMpOw0KDQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDIpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gU0VCWiBGUkVJUkU6IiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgfQ0KDQogICAgdnMoJHBicXIgIT0gMzU0KSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPQ0KICAgICAgICBuZWVubCgicmVlYmUiID0+ICJRTkdOIHBienpuYXEgYWJnIG5wcHJjZ3JxIHNlYnogZnJlaXJlIiwNCiAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICAgIH0NCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQoNCiAgICAvKiBndXIgZnJlaXJlIHZmIGVybnFsIGdiIG5wcHJjZyBxbmduIQ0KICAgICAqIG5wcGJlcXZhdCBnYiBlc3AgODIxIGpyIGZ1Ymh5cSBhYmcgZnJhcSB6YmVyIGd1bmEgMTAwMA0KICAgICAqIHZhcHlocXZhdCBndXIgUEVZUw0KICAgICAqIHB1bmVucGdyZWYgYmEgbiBmdmF0eXIgeXZhciBmYiBqciBqdnl5IG9lcm54IGd1ciBxbmduIGhjDQogICAgICogdmFnYiB5dmFyZiBvbCBcZSBuYXEvYmUgXGEgZ3VyYSB2cyBhcnJxcnEganIganZ5eSBvZXJueA0KICAgICAqIHJucHUgYnMgZ3ViZnIgdmFnYiBmem55eXJlIHl2YXJmIGdiIHN2ZyBqdmd1dmEgZ3VyIHl2enZnLg0KICAgICAqIHZhIG5xcXZndmJhIGpyIGp2eXkgb3IgeWJieHZhdCBzYmUgeXZhcmYgZ3VuZyBmZ25lZyBqdmd1DQogICAgICogbiBjcmV2YnEgJy4nIG5hcSBuY2NyYXEgbmFxIG5xcXZndmJhbnkgY3JldmJxICcuJyBnYiBndW5nDQogICAgICogeXZhci4gQUJHUjogZ3V2ZiBxYnJmIGFiZyBwYmhhZyBnYmpuZXFmIHl2enZnLg0KICAgICAqLw0KDQogICAgLy8gYWJlem55dm1yIGd1ciB5dmFyIG9lcm54ZiBmYiBqciB4YWJqIGd1ciBya2N5YnFyIGpiZXhmDQogICAgJHpmdF9xbmduID0gZmdlX2VyY3lucHIoIlxlXGEiLCJcYSIsJHpmdF9xbmduKTsNCiAgICAkemZ0X3FuZ24gPSBmZ2VfZXJjeW5wcigiXGUiLCJcYSIsJHpmdF9xbmduKTsNCiAgICAkeXZhcmYgPSBya2N5YnFyKCJcYSIsJHpmdF9xbmduKTsNCg0KICAgIC8qIGpyIGFycnEgZ2Igc3ZhcSBuIHRiYnEgam5sIGdiIHFyZ3JlenZhciB2ZiB1cm5xcmVmIG5lcg0KICAgICAqIHZhIGd1ciB6ZnRfcW5nbiBiZSB2cyB2ZyB2ZiBuIGZnZW52dHVnIHpmdCBvYnFsDQogICAgICogcGhlZXJhZ3lsIFYgbnogbmZmaHp2YXQgZXNwIDgyMiBxcnN2YXZndmJhZiBicyB6ZnQgdXJucXJlZg0KICAgICAqIG5hcSB2cyBndXIgc3ZlZmcgc3ZyeXEgYnMgZ3VyIHN2ZWZnIHl2YXIgKCc6JyBmY3JlbmdycSkNCiAgICAgKiBxYnJmIGFiZyBwYmFnbnZhIG4gZmNucHIgZ3VyYSB2ZyBfZnViaHlxXyBvciBuIHVybnFyZQ0KICAgICAqIG5hcSBqciBwbmEgY2VicHJmZiBueXkgeXZhcmYgb3JzYmVyIG4gb3luYXggIiIgeXZhciBuZg0KICAgICAqIHVybnFyZWYuDQogICAgICovDQoNCiAgICAkc3ZyeXEgPSBmaG9mZ2UoJHl2YXJmWzBdLDAsZmdlY2JmKCR5dmFyZlswXSwiOiIpKTsNCiAgICAkdmFfdXJucXJlZiA9IHNueWZyOw0KICAgIHZzKCFyemNnbCgkc3ZyeXEpICYmICFmZ2VmZ2UoJHN2cnlxLCIgIikpIHsNCiAgICAgICR2YV91cm5xcmVmID0gZ2VocjsNCiAgICB9DQoNCiAgICAkem5rX3l2YXJfeXJhdGd1ID0gOTk4OyAvLyBoZnJxIG9yeWJqOyBmcmcgdXJlciBzYmUgcm5mciB2YSBwdW5hdHINCg0KICAgIGp1dnlyKHl2ZmcoLCR5dmFyKSA9IEBybnB1KCR5dmFyZikpIHsNCiAgICAgICR5dmFyZl9iaGcgPSBhaHl5Ow0KICAgICAgdnMoJHl2YXIgPT0gIiIgJiYgJHZhX3VybnFyZWYpIHsNCiAgICAgICAgJHZhX3VybnFyZWYgPSBzbnlmcjsNCiAgICAgIH0NCiAgICAgIC8vIGJ4IGpyIGFycnEgZ2Igb2VybnggZ3V2ZiB5dmFyIGhjIHZhZ2IgZnJpcmVueSBmem55eXJlIHl2YXJmDQogICAgICBqdXZ5cihmZ2V5cmEoJHl2YXIpID4gJHpua195dmFyX3lyYXRndSkgew0KICAgICAgICAkY2JmID0gZmdlZWNiZihmaG9mZ2UoJHl2YXIsMCwkem5rX3l2YXJfeXJhdGd1KSwiICIpOw0KDQogICAgICAgIC8vIENuZ3B1IGdiIHN2ayBRQkYgbmdnbnB4DQogICAgICAgIHZzKCEkY2JmKSB7DQogICAgICAgICAgJGNiZiA9ICR6bmtfeXZhcl95cmF0Z3UgLSAxOw0KICAgICAgICAgICR5dmFyZl9iaGdbXSA9IGZob2ZnZSgkeXZhciwwLCRjYmYpOw0KICAgICAgICAgICR5dmFyID0gZmhvZmdlKCR5dmFyLCRjYmYpOw0KICAgICAgICB9IHJ5ZnIgew0KICAgICAgICAgICR5dmFyZl9iaGdbXSA9IGZob2ZnZSgkeXZhciwwLCRjYmYpOw0KICAgICAgICAgICR5dmFyID0gZmhvZmdlKCR5dmFyLCRjYmYgKyAxKTsNCiAgICAgICAgfQ0KDQogICAgICAgIC8qIHZzIGNlYnByZmZ2YXQgdXJucXJlZiBucXEgbiBZSkZDLXB1bmUgZ2IgZ3VyIHNlYmFnIGJzIGFyaiB5dmFyDQogICAgICAgICAqIGVzcCA4MjIgYmEgeWJhdCB6ZnQgdXJucXJlZg0KICAgICAgICAgKi8NCiAgICAgICAgdnMoJHZhX3VybnFyZWYpIHsNCiAgICAgICAgICAkeXZhciA9ICJcZyIgLiAkeXZhcjsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgICAgJHl2YXJmX2JoZ1tdID0gJHl2YXI7DQoNCiAgICAgIC8vIGZyYXEgZ3VyIHl2YXJmIGdiIGd1ciBmcmVpcmUNCiAgICAgIGp1dnlyKHl2ZmcoLCR5dmFyX2JoZykgPSBAcm5wdSgkeXZhcmZfYmhnKSkgew0KICAgICAgICB2cyhmZ2V5cmEoJHl2YXJfYmhnKSA+IDApDQogICAgICAgIHsNCiAgICAgICAgICB2cyhmaG9mZ2UoJHl2YXJfYmhnLCAwLCAxKSA9PSAiLiIpIHsNCiAgICAgICAgICAgICR5dmFyX2JoZyA9ICIuIiAuICR5dmFyX2JoZzsNCiAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwkeXZhcl9iaGcgLiAkZ3V2Zi0+UEVZUyk7DQogICAgICB9DQogICAgfQ0KDQogICAgLy8genJmZm50ciBxbmduIHVuZiBvcnJhIGZyYWcNCiAgICBzY2hnZigkZ3V2Zi0+ZnpnY19wYmFhLCAkZ3V2Zi0+UEVZUyAuICIuIiAuICRndXZmLT5QRVlTKTsNCg0KICAgICRlY3lsID0gJGd1dmYtPnRyZ195dmFyZigpOw0KICAgICRwYnFyID0gZmhvZmdlKCRlY3lsLDAsMyk7DQoNCiAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMikgew0KICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBTRUJaIEZSRUlSRToiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICB9DQoNCiAgICB2cygkcGJxciAhPSAyNTApIHsNCiAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIlFOR04gYWJnIG5wcHJjZ3JxIHNlYnogZnJlaXJlIiwNCiAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICAgIH0NCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRnJhcWYgZ3VyIFVSWUIgcGJ6em5hcSBnYiBndXIgZnpnYyBmcmVpcmUuDQogICAqIEd1dmYgem54cmYgZmhlciBndW5nIGpyIG5hcSBndXIgZnJlaXJlIG5lciB2YQ0KICAgKiBndXIgZm56ciB4YWJqYSBmZ25nci4NCiAgICoNCiAgICogVnpjeXJ6cmFnZiBzZWJ6IGVzcCA4MjE6IFVSWUIgPEZDPiA8cWJ6bnZhPiA8UEVZUz4NCiAgICoNCiAgICogRlpHQyBQQlFSIEZIUFBSRkY6IDI1MA0KICAgKiBGWkdDIFBCUVIgUkVFQkUgIDogNTAwLCA1MDEsIDUwNCwgNDIxDQogICAqIEBucHByZmYgY2hveXZwDQogICAqIEBjbmVueiBmZ2V2YXQgJHViZmcNCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgVXJ5eWIoJHViZmcgPSAnJykgew0KICAgICRndXZmLT5yZWViZSA9IGFoeXk7IC8vIGZiIGFiIHBiYXNoZnZiYSB2ZiBwbmhmcnENCg0KICAgIHZzKCEkZ3V2Zi0+cGJhYXJwZ3JxKCkpIHsNCiAgICAgICRndXZmLT5yZWViZSA9IG5lZW5sKA0KICAgICAgICAgICAgInJlZWJlIiA9PiAiUG55eXJxIFVyeXliKCkganZndWJoZyBvcnZhdCBwYmFhcnBncnEiKTsNCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQoNCiAgICAvLyB2cyB1YmZnYW56ciBzYmUgVVJZQiBqbmYgYWJnIGZjcnB2c3ZycSBmcmFxIHFyc25oeWcNCiAgICB2cyhyemNnbCgkdWJmZykpIHsNCiAgICAgIC8vIHFyZ3JlenZhciBuY2NlYmNldm5nciBxcnNuaHlnIGdiIGZyYXEgZ2IgZnJlaXJlDQogICAgICAkdWJmZyA9ICJ5YnBueXViZmciOw0KICAgIH0NCg0KICAgIC8vIEZyYXEgcmtncmFxcnEgdXJ5eWIgc3ZlZmcgKEVTUCAyODIxKQ0KICAgIHZzKCEkZ3V2Zi0+RnJhcVVyeXliKCJSVVlCIiwgJHViZmcpKSB7DQogICAgICB2cyghJGd1dmYtPkZyYXFVcnl5YigiVVJZQiIsICR1YmZnKSkgew0KICAgICAgICBlcmdoZWEgc255ZnI7DQogICAgICB9DQogICAgfQ0KDQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRnJhcWYgbiBVUllCL1JVWUIgcGJ6em5hcS4NCiAgICogQG5wcHJmZiBjZXZpbmdyDQogICAqIEBjbmVueiBmZ2V2YXQgJHVyeXliDQogICAqIEBjbmVueiBmZ2V2YXQgJHViZmcNCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjZXZpbmdyIHNoYXBndmJhIEZyYXFVcnl5YigkdXJ5eWIsICR1YmZnKSB7DQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwgJHVyeXliIC4gIiAiIC4gJHViZmcgLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAkcGJxciA9IGZob2ZnZSgkZWN5bCwwLDMpOw0KDQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDIpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gU0VCWiBGUkVJUkU6ICIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgIH0NCg0KICAgIHZzKCRwYnFyICE9IDI1MCkgew0KICAgICAgJGd1dmYtPnJlZWJlID0NCiAgICAgICAgbmVlbmwoInJlZWJlIiA9PiAkdXJ5eWIgLiAiIGFiZyBucHByY2dycSBzZWJ6IGZyZWlyZSIsDQogICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAiZnpnY196ZnQiID0+IGZob2ZnZSgkZWN5bCw0KSk7DQogICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFJFRUJFOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gIjogIiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICB9DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgJGd1dmYtPnVyeWJfZWN5bCA9ICRlY3lsOw0KDQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRmduZWdmIG4gem52eSBnZW5hZm5wZ3ZiYSBzZWJ6IGd1ciByem52eSBucXFlcmZmIGZjcnB2c3ZycSB2YQ0KICAgKiAkc2Viei4gRXJnaGVhZiBnZWhyIHZzIGZocHByZmZzaHkgYmUgc255ZnIgYmd1cmVqdmZyLiBWcyBHZWhyDQogICAqIGd1ciB6bnZ5IGdlbmFmbnBndmJhIHZmIGZnbmVncnEgbmFxIGd1cmEgYmFyIGJlIHpiZXIgRXJwdmN2cmFnDQogICAqIHBienpuYXFmIHpubCBvciBwbnl5cnEgc2J5eWJqcnEgb2wgbiBRbmduIHBienpuYXEuDQogICAqDQogICAqIFZ6Y3lyenJhZ2YgZXNwIDgyMTogWk5WWSA8RkM+IFNFQlo6PGVyaXJlZnItY25ndT4gPFBFWVM+DQogICAqDQogICAqIEZaR0MgUEJRUiBGSFBQUkZGOiAyNTANCiAgICogRlpHQyBQQlFSIEZIUFBSRkY6IDU1Miw0NTEsNDUyDQogICAqIEZaR0MgUEJRUiBGSFBQUkZGOiA1MDAsNTAxLDQyMQ0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAY25lbnogZmdldmF0ICRzZWJ6DQogICAqIEBlcmdoZWEgb2JieQ0KICAgKi8NCiAgY2hveXZwIHNoYXBndmJhIFpudnkoJHNlYnopIHsNCiAgICAkZ3V2Zi0+cmVlYmUgPSBhaHl5OyAvLyBmYiBhYiBwYmFzaGZ2YmEgdmYgcG5oZnJxDQoNCiAgICB2cyghJGd1dmYtPnBiYWFycGdycSgpKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPSBuZWVubCgNCiAgICAgICAgICAgICAgInJlZWJlIiA9PiAiUG55eXJxIFpudnkoKSBqdmd1YmhnIG9ydmF0IHBiYWFycGdycSIpOw0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgICRoZnJJcmVjID0gKCRndXZmLT5xYl9pcmVjID8gIiBLSVJFQyIgOiAiIik7DQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwiWk5WWSBTRUJaOjwiIC4gJHNlYnogLiAiPiIgLiAkaGZySXJlYyAuICRndXZmLT5QRVlTKTsNCg0KICAgICRlY3lsID0gJGd1dmYtPnRyZ195dmFyZigpOw0KICAgICRwYnFyID0gZmhvZmdlKCRlY3lsLDAsMyk7DQoNCiAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMikgew0KICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiBTRUJaIEZSRUlSRToiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICB9DQoNCiAgICB2cygkcGJxciAhPSAyNTApIHsNCiAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIlpOVlkgYWJnIG5wcHJjZ3JxIHNlYnogZnJlaXJlIiwNCiAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICAgIH0NCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRnJhcWYgZ3VyIGRodmcgcGJ6em5hcSBnYiBndXIgZnJlaXJlIG5hcSBndXJhIHB5YmZyZiBndXIgZmJweHJnDQogICAqIHZzIGd1cmVyIHZmIGFiIHJlZWJlIGJlIGd1ciAkcHliZnJfYmFfcmVlYmUgbmV0aHpyYWcgdmYgZ2Voci4NCiAgICoNCiAgICogVnpjeXJ6cmFnZiBzZWJ6IGVzcCA4MjE6IERIVkcgPFBFWVM+DQogICAqDQogICAqIEZaR0MgUEJRUiBGSFBQUkZGOiAyMjENCiAgICogRlpHQyBQQlFSIFJFRUJFICA6IDUwMA0KICAgKiBAbnBwcmZmIGNob3l2cA0KICAgKiBAY25lbnogb2JieSAkcHliZnJfYmFfcmVlYmUNCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgRGh2ZygkcHliZnJfYmFfcmVlYmUgPSBnZWhyKSB7DQogICAgJGd1dmYtPnJlZWJlID0gYWh5eTsgLy8gZmIgZ3VyZXIgdmYgYWIgcGJhc2hmdmJhDQoNCiAgICB2cyghJGd1dmYtPnBiYWFycGdycSgpKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPSBuZWVubCgNCiAgICAgICAgICAgICAgInJlZWJlIiA9PiAiUG55eXJxIERodmcoKSBqdmd1YmhnIG9ydmF0IHBiYWFycGdycSIpOw0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgIC8vIGZyYXEgZ3VyIGRodmcgcGJ6em5hcSBnYiBndXIgZnJlaXJlDQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwiZGh2ZyIgLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAvLyB0cmcgbmFsIHRiYnEtb2xyIHpyZmZudHJmDQogICAgJG9scnpmdCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCg0KICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAyKSB7DQogICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFNFQlogRlJFSVJFOiIgLiAkb2xyemZ0IC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgfQ0KDQogICAgJGVpbnkgPSBnZWhyOw0KICAgICRyID0gYWh5eTsNCg0KICAgICRwYnFyID0gZmhvZmdlKCRvbHJ6ZnQsMCwzKTsNCiAgICB2cygkcGJxciAhPSAyMjEpIHsNCiAgICAgIC8vIGhmciByIG5mIG4gZ3pjIGluZSBwbmhmciBQeWJmciBqdnl5IGJpcmVqZXZnciAkZ3V2Zi0+cmVlYmUNCiAgICAgICRyID0gbmVlbmwoInJlZWJlIiA9PiAiRlpHQyBmcmVpcmUgZXJ3cnBncnEgZGh2ZyBwYnp6bmFxIiwNCiAgICAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICAgICJmemdjX2VjeWwiID0+IGZob2ZnZSgkb2xyemZ0LDQpKTsNCiAgICAgICRlaW55ID0gc255ZnI7DQogICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFJFRUJFOiAiIC4gJHJbInJlZWJlIl0gLiAiOiAiIC4gJG9scnpmdCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIHZzKHJ6Y2dsKCRyKSB8fCAkcHliZnJfYmFfcmVlYmUpIHsNCiAgICAgICRndXZmLT5QeWJmcigpOw0KICAgIH0NCg0KICAgIGVyZ2hlYSAkZWlueTsNCiAgfQ0KDQogIC8qKg0KICAgKiBGcmFxZiBndXIgcGJ6em5hcSBFUENHIGdiIGd1ciBGWkdDIGZyZWlyZSBqdmd1IGd1ciBHQjogbmV0aHpyYWcgYnMgJGdiLg0KICAgKiBFcmdoZWFmIGdlaHIgdnMgZ3VyIGVycHZjdnJhZyBqbmYgbnBwcmNncnEgc255ZnIgdnMgdmcgam5mIGVyd3JwZ3JxLg0KICAgKg0KICAgKiBWemN5cnpyYWdmIHNlYnogZXNwIDgyMTogRVBDRyA8RkM+IEdCOjxzYmVqbmVxLWNuZ3U+IDxQRVlTPg0KICAgKg0KICAgKiBGWkdDIFBCUVIgRkhQUFJGRjogMjUwLDI1MQ0KICAgKiBGWkdDIFBCUVIgU05WWUhFUjogNTUwLDU1MSw1NTIsNTUzLDQ1MCw0NTEsNDUyDQogICAqIEZaR0MgUEJRUiBSRUVCRSAgOiA1MDAsNTAxLDUwMyw0MjENCiAgICogQG5wcHJmZiBjaG95dnANCiAgICogQGNuZW56IGZnZXZhdCAkZ2INCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgRXJwdmN2cmFnKCRnYikgew0KICAgICRndXZmLT5yZWViZSA9IGFoeXk7IC8vIGZiIGFiIHBiYXNoZnZiYSB2ZiBwbmhmcnENCg0KICAgIHZzKCEkZ3V2Zi0+cGJhYXJwZ3JxKCkpIHsNCiAgICAgICRndXZmLT5yZWViZSA9IG5lZW5sKA0KICAgICAgICAgICAgICAicmVlYmUiID0+ICJQbnl5cnEgRXJwdmN2cmFnKCkganZndWJoZyBvcnZhdCBwYmFhcnBncnEiKTsNCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQoNCiAgICBzY2hnZigkZ3V2Zi0+ZnpnY19wYmFhLCJFUENHIEdCOjwiIC4gJGdiIC4gIj4iIC4gJGd1dmYtPlBFWVMpOw0KDQogICAgJGVjeWwgPSAkZ3V2Zi0+dHJnX3l2YXJmKCk7DQogICAgJHBicXIgPSBmaG9mZ2UoJGVjeWwsMCwzKTsNCg0KICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAyKSB7DQogICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFNFQlogRlJFSVJFOiIgLiAkZWN5bCAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgIH0NCg0KICAgIHZzKCRwYnFyICE9IDI1MCAmJiAkcGJxciAhPSAyNTEpIHsNCiAgICAgICRndXZmLT5yZWViZSA9DQogICAgICAgIG5lZW5sKCJyZWViZSIgPT4gIkVQQ0cgYWJnIG5wcHJjZ3JxIHNlYnogZnJlaXJlIiwNCiAgICAgICAgICAgICAgImZ6Z2NfcGJxciIgPT4gJHBicXIsDQogICAgICAgICAgICAgICJmemdjX3pmdCIgPT4gZmhvZmdlKCRlY3lsLDQpKTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSAxKSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gUkVFQkU6ICIgLiAkZ3V2Zi0+cmVlYmVbInJlZWJlIl0gLiAiOiAiIC4gJGVjeWwgLiAkZ3V2Zi0+UEVZUyAuICc8b2UgLz4nKTsNCiAgICAgIH0NCiAgICAgIGVyZ2hlYSBzbnlmcjsNCiAgICB9DQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRnJhcWYgZ3VyIEVGUkcgcGJ6em5hcSBnYiBub2JlZyBuYXEgZ2VuYWZucGd2YmEgZ3VuZyB2Zg0KICAgKiBwaGVlcmFneWwgdmEgY2VidGVyZmYuIEVyZ2hlYWYgZ2VociB2cyBmaHBwcmZmc2h5IHNueWZyDQogICAqIGJndXJlanZmci4NCiAgICoNCiAgICogVnpjeXJ6cmFnZiBlc3AgODIxOiBFRlJHIDxQRVlTPg0KICAgKg0KICAgKiBGWkdDIFBCUVIgRkhQUFJGRjogMjUwDQogICAqIEZaR0MgUEJRUiBSRUVCRSAgOiA1MDAsNTAxLDUwNCw0MjENCiAgICogQG5wcHJmZiBjaG95dnANCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgRXJmcmcoKSB7DQogICAgJGd1dmYtPnJlZWJlID0gYWh5eTsgLy8gZmIgYWIgcGJhc2hmdmJhIHZmIHBuaGZycQ0KDQogICAgdnMoISRndXZmLT5wYmFhcnBncnEoKSkgew0KICAgICAgJGd1dmYtPnJlZWJlID0gbmVlbmwoDQogICAgICAgICAgICAgICJyZWViZSIgPT4gIlBueXlycSBFcmZyZygpIGp2Z3ViaGcgb3J2YXQgcGJhYXJwZ3JxIik7DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgc2NoZ2YoJGd1dmYtPmZ6Z2NfcGJhYSwiRUZSRyIgLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAkcGJxciA9IGZob2ZnZSgkZWN5bCwwLDMpOw0KDQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDIpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gU0VCWiBGUkVJUkU6IiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgfQ0KDQogICAgdnMoJHBicXIgIT0gMjUwKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPQ0KICAgICAgICBuZWVubCgicmVlYmUiID0+ICJFRlJHIHNudnlycSIsDQogICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAiZnpnY196ZnQiID0+IGZob2ZnZSgkZWN5bCw0KSk7DQogICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFJFRUJFOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gIjogIiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICB9DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KDQogICAgZXJnaGVhIGdlaHI7DQogIH0NCg0KICAvKioNCiAgICogRmduZWdmIG4gem52eSBnZW5hZm5wZ3ZiYSBzZWJ6IGd1ciByem52eSBucXFlcmZmIGZjcnB2c3ZycSB2YQ0KICAgKiAkc2Viei4gRXJnaGVhZiBnZWhyIHZzIGZocHByZmZzaHkgYmUgc255ZnIgYmd1cmVqdmZyLiBWcyBHZWhyDQogICAqIGd1ciB6bnZ5IGdlbmFmbnBndmJhIHZmIGZnbmVncnEgbmFxIGd1cmEgYmFyIGJlIHpiZXIgRXJwdmN2cmFnDQogICAqIHBienpuYXFmIHpubCBvciBwbnl5cnEgc2J5eWJqcnEgb2wgbiBRbmduIHBienpuYXEuIEd1dmYgcGJ6em5hcQ0KICAgKiBqdnl5IGZyYXEgZ3VyIHpyZmZudHIgZ2IgZ3VyIGhmcmVmIGdyZXp2YW55IHZzIGd1cmwgbmVyIHlidHRycQ0KICAgKiB2YSBuYXEgZnJhcSBndXJ6IG5hIHJ6bnZ5Lg0KICAgKg0KICAgKiBWemN5cnpyYWdmIGVzcCA4MjE6IEZOWlkgPEZDPiBTRUJaOjxlcmlyZWZyLWNuZ3U+IDxQRVlTPg0KICAgKg0KICAgKiBGWkdDIFBCUVIgRkhQUFJGRjogMjUwDQogICAqIEZaR0MgUEJRUiBGSFBQUkZGOiA1NTIsNDUxLDQ1Mg0KICAgKiBGWkdDIFBCUVIgRkhQUFJGRjogNTAwLDUwMSw1MDIsNDIxDQogICAqIEBucHByZmYgY2hveXZwDQogICAqIEBjbmVueiBmZ2V2YXQgJHNlYnoNCiAgICogQGVyZ2hlYSBvYmJ5DQogICAqLw0KICBjaG95dnAgc2hhcGd2YmEgRnJhcU5hcVpudnkoJHNlYnopIHsNCiAgICAkZ3V2Zi0+cmVlYmUgPSBhaHl5OyAvLyBmYiBhYiBwYmFzaGZ2YmEgdmYgcG5oZnJxDQoNCiAgICB2cyghJGd1dmYtPnBiYWFycGdycSgpKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPSBuZWVubCgNCiAgICAgICAgICAicmVlYmUiID0+ICJQbnl5cnEgRnJhcU5hcVpudnkoKSBqdmd1YmhnIG9ydmF0IHBiYWFycGdycSIpOw0KICAgICAgZXJnaGVhIHNueWZyOw0KICAgIH0NCg0KICAgIHNjaGdmKCRndXZmLT5memdjX3BiYWEsIkZOWlkgU0VCWjoiIC4gJHNlYnogLiAkZ3V2Zi0+UEVZUyk7DQoNCiAgICAkZWN5bCA9ICRndXZmLT50cmdfeXZhcmYoKTsNCiAgICAkcGJxciA9IGZob2ZnZSgkZWN5bCwwLDMpOw0KDQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDIpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gU0VCWiBGUkVJUkU6IiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgfQ0KDQogICAgdnMoJHBicXIgIT0gMjUwKSB7DQogICAgICAkZ3V2Zi0+cmVlYmUgPQ0KICAgICAgICBuZWVubCgicmVlYmUiID0+ICJGTlpZIGFiZyBucHByY2dycSBzZWJ6IGZyZWlyZSIsDQogICAgICAgICAgICAgICJmemdjX3BicXIiID0+ICRwYnFyLA0KICAgICAgICAgICAgICAiZnpnY196ZnQiID0+IGZob2ZnZSgkZWN5bCw0KSk7DQogICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gMSkgew0KICAgICAgICAkZ3V2Zi0+cnFyb2h0KCJGWkdDIC0+IFJFRUJFOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gIjogIiAuICRlY3lsIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICB9DQogICAgICBlcmdoZWEgc255ZnI7DQogICAgfQ0KICAgIGVyZ2hlYSBnZWhyOw0KICB9DQoNCiAgLyoqDQogICAqIEd1dmYgdmYgbmEgYmNndmJhbnkgcGJ6em5hcSBzYmUgRlpHQyBndW5nIGd1dmYgcHluZmYgcWJyZiBhYmcNCiAgICogZmhjY2JlZy4gR3V2ZiB6cmd1YnEgdmYgdXJlciBnYiB6bnhyIGd1ciBFU1A4MjEgUXJzdmF2Z3ZiYQ0KICAgKiBwYnpjeXJnciBzYmUgZ3V2ZiBweW5mZiBuYXEgX196bmxfXyBvciB2emN5dnpyYWdycSB2YSBndXIgc2hnaGVyDQogICAqDQogICAqIFZ6Y3lyenJhZ2Ygc2VieiBlc3AgODIxOiBHSEVBIDxQRVlTPg0KICAgKg0KICAgKiBGWkdDIFBCUVIgRkhQUFJGRjogMjUwDQogICAqIEZaR0MgUEJRUiBTTlZZSEVSOiA1MDINCiAgICogRlpHQyBQQlFSIFJFRUJFICA6IDUwMCwgNTAzDQogICAqIEBucHByZmYgY2hveXZwDQogICAqIEBlcmdoZWEgb2JieQ0KICAgKi8NCiAgY2hveXZwIHNoYXBndmJhIEdoZWEoKSB7DQogICAgJGd1dmYtPnJlZWJlID0gbmVlbmwoInJlZWJlIiA9PiAiR3V2ZiB6cmd1YnEsIEdIRUEsIGJzIGd1ciBGWkdDICIuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAidmYgYWJnIHZ6Y3lyenJhZ3JxIik7DQogICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDEpIHsNCiAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gQUJHVlBSOiAiIC4gJGd1dmYtPnJlZWJlWyJyZWViZSJdIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgfQ0KICAgIGVyZ2hlYSBzbnlmcjsNCiAgfQ0KDQogIC8qKg0KICAqIFRyZyBndXIgcGhlZXJhZyByZWViZQ0KICAqIEBucHByZmYgY2hveXZwDQogICogQGVyZ2hlYSBuZWVubA0KICAqLw0KICBjaG95dnAgc2hhcGd2YmEgdHJnUmVlYmUoKSB7DQogICAgZXJnaGVhICRndXZmLT5yZWViZTsNCiAgfQ0KDQogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCiAgLy8gVkFHUkVBTlkgU0hBUEdWQkFGDQogIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8NCg0KICAvKioNCiAgICogRXJucSB2YSBuZiB6bmFsIHl2YXJmIG5mIGNiZmZ2b3lyDQogICAqIHJ2Z3VyZSBvcnNiZXIgcmJzIGJlIGZicHhyZyBndnpyYmhnIGJwcGhlZiBiYSBndXIgYmNyZW5ndmJhLg0KICAgKiBKdmd1IEZaR0MganIgcG5hIGdyeXkgdnMganIgdW5pciB6YmVyIHl2YXJmIGdiIGVybnEgdnMgZ3VyDQogICAqIDRndSBwdW5lbnBncmUgdmYgJy0nIGZsem9ieS4gVnMgdmcgdmYgbiBmY25wciBndXJhIGpyIHFiYSdnDQogICAqIGFycnEgZ2IgZXJucSBuYWxndXZhdCByeWZyLg0KICAgKiBAbnBwcmZmIGNldmluZ3INCiAgICogQGVyZ2hlYSBmZ2V2YXQNCiAgICovDQogIGNldmluZ3Igc2hhcGd2YmEgdHJnX3l2YXJmKCkgew0KICAgICRxbmduID0gIiI7DQogICAgJHJhcWd2enIgPSAwOw0KICAgIC8qIFZzIHNiZSBmYnpyIGVybmZiYSBndXIgc2MgdmYgb25xLCBxYmEnZyB2YXMgeWJiYyAqLw0KICAgIHZzICghdmZfZXJmYmhlcHIoJGd1dmYtPmZ6Z2NfcGJhYSkpIHsNCiAgICAgIGVyZ2hlYSAkcW5nbjsNCiAgICB9DQogICAgZmdlcm56X2ZyZ19ndnpyYmhnKCRndXZmLT5memdjX3BiYWEsICRndXZmLT5HdnpyYmhnKTsNCiAgICB2cyAoJGd1dmYtPkd2enJ5dnp2ZyA+IDApIHsNCiAgICAgICRyYXFndnpyID0gZ3Z6cigpICsgJGd1dmYtPkd2enJ5dnp2ZzsNCiAgICB9DQogICAganV2eXIodmZfZXJmYmhlcHIoJGd1dmYtPmZ6Z2NfcGJhYSkgJiYgIXNyYnMoJGd1dmYtPmZ6Z2NfcGJhYSkpIHsNCiAgICAgICRmZ2UgPSBAc3RyZ2YoJGd1dmYtPmZ6Z2NfcGJhYSw1MTUpOw0KICAgICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDQpIHsNCiAgICAgICAgJGd1dmYtPnJxcm9odCgiRlpHQyAtPiB0cmdfeXZhcmYoKTogXCRxbmduIGpuZiBcIiRxbmduXCIiIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gdHJnX3l2YXJmKCk6IFwkZmdlIHZmIFwiJGZnZVwiIiAuICRndXZmLT5QRVlTIC4gJzxvZSAvPicpOw0KICAgICAgfQ0KICAgICAgJHFuZ24gLj0gJGZnZTsNCiAgICAgIHZzKCRndXZmLT5xYl9xcm9odCA+PSA0KSB7DQogICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gdHJnX3l2YXJmKCk6IFwkcW5nbiB2ZiBcIiRxbmduXCIiIC4gJGd1dmYtPlBFWVMgLiAnPG9lIC8+Jyk7DQogICAgICB9DQogICAgICAvLyB2cyA0Z3UgcHVuZW5wZ3JlIHZmIG4gZmNucHIsIGpyIG5lciBxYmFyIGVybnF2YXQsIG9lcm54IGd1ciB5YmJjDQogICAgICB2cyhmaG9mZ2UoJGZnZSwzLDEpID09ICIgIikgeyBvZXJueDsgfQ0KICAgICAgLy8gR3Z6cnEtYmhnPyBZYnQgbmFxIG9lcm54DQogICAgICAkdmFzYiA9IGZnZXJuel90cmdfenJnbl9xbmduKCRndXZmLT5memdjX3BiYWEpOw0KICAgICAgdnMgKCR2YXNiWydndnpycV9iaGcnXSkgew0KICAgICAgICB2cygkZ3V2Zi0+cWJfcXJvaHQgPj0gNCkgew0KICAgICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gdHJnX3l2YXJmKCk6IGd2enJxLWJoZyAoIiAuICRndXZmLT5HdnpyYmhnIC4gIiBmcnBiYXFmKSA8b2UgLz4iKTsNCiAgICAgICAgfQ0KICAgICAgICBvZXJueDsNCiAgICAgIH0NCiAgICAgIC8vIEFiaiBwdXJweCB2cyBlcm5xZiBnYmJ4IGdiYiB5YmF0DQogICAgICB2cyAoJHJhcWd2enIpIHsNCiAgICAgICAgdnMgKGd2enIoKSA+ICRyYXFndnpyKSB7DQogICAgICAgICAgdnMoJGd1dmYtPnFiX3Fyb2h0ID49IDQpIHsNCiAgICAgICAgICAgICRndXZmLT5ycXJvaHQoIkZaR0MgLT4gdHJnX3l2YXJmKCk6IGd2enJ5dnp2ZyBlcm5wdXJxICgiIC4gJGd1dmYtPkd2enJ5dnp2ZyAuICIgZnJwYmFxZikgPG9lIC8+Iik7DQogICAgICAgICAgfQ0KICAgICAgICAgIG9lcm54Ow0KICAgICAgICB9DQogICAgICB9DQogICAgfQ0KICAgIGVyZ2hlYSAkcW5nbjsNCiAgfQ0KDQp9DQo/Pg==";
eval(simple_decrypt($encoded, __FILE__));
?>